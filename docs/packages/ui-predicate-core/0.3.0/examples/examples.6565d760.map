{"version":3,"sources":["node_modules/ramda/es/internal/_isPlaceholder.js","node_modules/ramda/es/internal/_curry1.js","node_modules/ramda/es/always.js","node_modules/ramda/es/F.js","node_modules/ramda/es/T.js","node_modules/ramda/es/__.js","node_modules/ramda/es/internal/_curry2.js","node_modules/ramda/es/add.js","node_modules/ramda/es/internal/_concat.js","node_modules/ramda/es/internal/_arity.js","node_modules/ramda/es/internal/_curryN.js","node_modules/ramda/es/curryN.js","node_modules/ramda/es/addIndex.js","node_modules/ramda/es/internal/_curry3.js","node_modules/ramda/es/adjust.js","node_modules/ramda/es/internal/_isArray.js","node_modules/ramda/es/internal/_isTransformer.js","node_modules/ramda/es/internal/_dispatchable.js","node_modules/ramda/es/internal/_reduced.js","node_modules/ramda/es/internal/_xfBase.js","node_modules/ramda/es/internal/_xall.js","node_modules/ramda/es/all.js","node_modules/ramda/es/max.js","node_modules/ramda/es/internal/_map.js","node_modules/ramda/es/internal/_isString.js","node_modules/ramda/es/internal/_isArrayLike.js","node_modules/ramda/es/internal/_xwrap.js","node_modules/ramda/es/bind.js","node_modules/ramda/es/internal/_reduce.js","node_modules/ramda/es/internal/_xmap.js","node_modules/ramda/es/internal/_has.js","node_modules/ramda/es/internal/_isArguments.js","node_modules/ramda/es/keys.js","node_modules/ramda/es/map.js","node_modules/ramda/es/path.js","node_modules/ramda/es/prop.js","node_modules/ramda/es/pluck.js","node_modules/ramda/es/reduce.js","node_modules/ramda/es/allPass.js","node_modules/ramda/es/and.js","node_modules/ramda/es/internal/_xany.js","node_modules/ramda/es/any.js","node_modules/ramda/es/anyPass.js","node_modules/ramda/es/ap.js","node_modules/ramda/es/internal/_aperture.js","node_modules/ramda/es/internal/_xaperture.js","node_modules/ramda/es/aperture.js","node_modules/ramda/es/append.js","node_modules/ramda/es/apply.js","node_modules/ramda/es/values.js","node_modules/ramda/es/applySpec.js","node_modules/ramda/es/applyTo.js","node_modules/ramda/es/ascend.js","node_modules/ramda/es/assoc.js","node_modules/ramda/es/internal/_isInteger.js","node_modules/ramda/es/isNil.js","node_modules/ramda/es/assocPath.js","node_modules/ramda/es/nAry.js","node_modules/ramda/es/binary.js","node_modules/ramda/es/internal/_isFunction.js","node_modules/ramda/es/liftN.js","node_modules/ramda/es/lift.js","node_modules/ramda/es/both.js","node_modules/ramda/es/curry.js","node_modules/ramda/es/call.js","node_modules/ramda/es/internal/_makeFlat.js","node_modules/ramda/es/internal/_forceReduced.js","node_modules/ramda/es/internal/_flatCat.js","node_modules/ramda/es/internal/_xchain.js","node_modules/ramda/es/chain.js","node_modules/ramda/es/clamp.js","node_modules/ramda/es/internal/_cloneRegExp.js","node_modules/ramda/es/type.js","node_modules/ramda/es/internal/_clone.js","node_modules/ramda/es/clone.js","node_modules/ramda/es/comparator.js","node_modules/ramda/es/not.js","node_modules/ramda/es/complement.js","node_modules/ramda/es/internal/_pipe.js","node_modules/ramda/es/internal/_checkForMethod.js","node_modules/ramda/es/slice.js","node_modules/ramda/es/tail.js","node_modules/ramda/es/pipe.js","node_modules/ramda/es/reverse.js","node_modules/ramda/es/compose.js","node_modules/ramda/es/composeK.js","node_modules/ramda/es/internal/_pipeP.js","node_modules/ramda/es/pipeP.js","node_modules/ramda/es/composeP.js","node_modules/ramda/es/internal/_arrayFromIterator.js","node_modules/ramda/es/internal/_containsWith.js","node_modules/ramda/es/internal/_functionName.js","node_modules/ramda/es/identical.js","node_modules/ramda/es/internal/_equals.js","node_modules/ramda/es/equals.js","node_modules/ramda/es/internal/_indexOf.js","node_modules/ramda/es/internal/_contains.js","node_modules/ramda/es/internal/_quote.js","node_modules/ramda/es/internal/_toISOString.js","node_modules/ramda/es/internal/_complement.js","node_modules/ramda/es/internal/_filter.js","node_modules/ramda/es/internal/_isObject.js","node_modules/ramda/es/internal/_xfilter.js","node_modules/ramda/es/filter.js","node_modules/ramda/es/reject.js","node_modules/ramda/es/internal/_toString.js","node_modules/ramda/es/toString.js","node_modules/ramda/es/concat.js","node_modules/ramda/es/cond.js","node_modules/ramda/es/constructN.js","node_modules/ramda/es/construct.js","node_modules/ramda/es/contains.js","node_modules/ramda/es/converge.js","node_modules/ramda/es/internal/_xreduceBy.js","node_modules/ramda/es/reduceBy.js","node_modules/ramda/es/countBy.js","node_modules/ramda/es/dec.js","node_modules/ramda/es/defaultTo.js","node_modules/ramda/es/descend.js","node_modules/ramda/es/difference.js","node_modules/ramda/es/differenceWith.js","node_modules/ramda/es/dissoc.js","node_modules/ramda/es/remove.js","node_modules/ramda/es/update.js","node_modules/ramda/es/dissocPath.js","node_modules/ramda/es/divide.js","node_modules/ramda/es/internal/_xdrop.js","node_modules/ramda/es/drop.js","node_modules/ramda/es/internal/_xtake.js","node_modules/ramda/es/take.js","node_modules/ramda/es/internal/_dropLast.js","node_modules/ramda/es/internal/_xdropLast.js","node_modules/ramda/es/dropLast.js","node_modules/ramda/es/internal/_dropLastWhile.js","node_modules/ramda/es/internal/_xdropLastWhile.js","node_modules/ramda/es/dropLastWhile.js","node_modules/ramda/es/internal/_xdropRepeatsWith.js","node_modules/ramda/es/nth.js","node_modules/ramda/es/last.js","node_modules/ramda/es/dropRepeatsWith.js","node_modules/ramda/es/dropRepeats.js","node_modules/ramda/es/internal/_xdropWhile.js","node_modules/ramda/es/dropWhile.js","node_modules/ramda/es/or.js","node_modules/ramda/es/either.js","node_modules/ramda/es/empty.js","node_modules/ramda/es/takeLast.js","node_modules/ramda/es/endsWith.js","node_modules/ramda/es/eqBy.js","node_modules/ramda/es/eqProps.js","node_modules/ramda/es/evolve.js","node_modules/ramda/es/internal/_xfind.js","node_modules/ramda/es/find.js","node_modules/ramda/es/internal/_xfindIndex.js","node_modules/ramda/es/findIndex.js","node_modules/ramda/es/internal/_xfindLast.js","node_modules/ramda/es/findLast.js","node_modules/ramda/es/internal/_xfindLastIndex.js","node_modules/ramda/es/findLastIndex.js","node_modules/ramda/es/flatten.js","node_modules/ramda/es/flip.js","node_modules/ramda/es/forEach.js","node_modules/ramda/es/forEachObjIndexed.js","node_modules/ramda/es/fromPairs.js","node_modules/ramda/es/groupBy.js","node_modules/ramda/es/groupWith.js","node_modules/ramda/es/gt.js","node_modules/ramda/es/gte.js","node_modules/ramda/es/has.js","node_modules/ramda/es/hasIn.js","node_modules/ramda/es/head.js","node_modules/ramda/es/internal/_identity.js","node_modules/ramda/es/identity.js","node_modules/ramda/es/ifElse.js","node_modules/ramda/es/inc.js","node_modules/ramda/es/indexBy.js","node_modules/ramda/es/indexOf.js","node_modules/ramda/es/init.js","node_modules/ramda/es/innerJoin.js","node_modules/ramda/es/insert.js","node_modules/ramda/es/insertAll.js","node_modules/ramda/es/internal/_Set.js","node_modules/ramda/es/uniqBy.js","node_modules/ramda/es/uniq.js","node_modules/ramda/es/intersection.js","node_modules/ramda/es/intersperse.js","node_modules/ramda/es/internal/_objectAssign.js","node_modules/ramda/es/internal/_assign.js","node_modules/ramda/es/objOf.js","node_modules/ramda/es/internal/_stepCat.js","node_modules/ramda/es/into.js","node_modules/ramda/es/invert.js","node_modules/ramda/es/invertObj.js","node_modules/ramda/es/invoker.js","node_modules/ramda/es/is.js","node_modules/ramda/es/isEmpty.js","node_modules/ramda/es/join.js","node_modules/ramda/es/juxt.js","node_modules/ramda/es/keysIn.js","node_modules/ramda/es/lastIndexOf.js","node_modules/ramda/es/internal/_isNumber.js","node_modules/ramda/es/length.js","node_modules/ramda/es/lens.js","node_modules/ramda/es/lensIndex.js","node_modules/ramda/es/lensPath.js","node_modules/ramda/es/lensProp.js","node_modules/ramda/es/lt.js","node_modules/ramda/es/lte.js","node_modules/ramda/es/mapAccum.js","node_modules/ramda/es/mapAccumRight.js","node_modules/ramda/es/mapObjIndexed.js","node_modules/ramda/es/match.js","node_modules/ramda/es/mathMod.js","node_modules/ramda/es/maxBy.js","node_modules/ramda/es/sum.js","node_modules/ramda/es/mean.js","node_modules/ramda/es/median.js","node_modules/ramda/es/memoizeWith.js","node_modules/ramda/es/memoize.js","node_modules/ramda/es/merge.js","node_modules/ramda/es/mergeAll.js","node_modules/ramda/es/mergeWithKey.js","node_modules/ramda/es/mergeDeepWithKey.js","node_modules/ramda/es/mergeDeepLeft.js","node_modules/ramda/es/mergeDeepRight.js","node_modules/ramda/es/mergeDeepWith.js","node_modules/ramda/es/mergeWith.js","node_modules/ramda/es/min.js","node_modules/ramda/es/minBy.js","node_modules/ramda/es/modulo.js","node_modules/ramda/es/multiply.js","node_modules/ramda/es/negate.js","node_modules/ramda/es/none.js","node_modules/ramda/es/nthArg.js","node_modules/ramda/es/o.js","node_modules/ramda/es/internal/_of.js","node_modules/ramda/es/of.js","node_modules/ramda/es/omit.js","node_modules/ramda/es/once.js","node_modules/ramda/es/over.js","node_modules/ramda/es/pair.js","node_modules/ramda/es/internal/_createPartialApplicator.js","node_modules/ramda/es/partial.js","node_modules/ramda/es/partialRight.js","node_modules/ramda/es/partition.js","node_modules/ramda/es/pathEq.js","node_modules/ramda/es/pathOr.js","node_modules/ramda/es/pathSatisfies.js","node_modules/ramda/es/pick.js","node_modules/ramda/es/pickAll.js","node_modules/ramda/es/pickBy.js","node_modules/ramda/es/pipeK.js","node_modules/ramda/es/prepend.js","node_modules/ramda/es/product.js","node_modules/ramda/es/useWith.js","node_modules/ramda/es/project.js","node_modules/ramda/es/propEq.js","node_modules/ramda/es/propIs.js","node_modules/ramda/es/propOr.js","node_modules/ramda/es/propSatisfies.js","node_modules/ramda/es/props.js","node_modules/ramda/es/range.js","node_modules/ramda/es/reduceRight.js","node_modules/ramda/es/reduceWhile.js","node_modules/ramda/es/reduced.js","node_modules/ramda/es/times.js","node_modules/ramda/es/repeat.js","node_modules/ramda/es/replace.js","node_modules/ramda/es/scan.js","node_modules/ramda/es/sequence.js","node_modules/ramda/es/set.js","node_modules/ramda/es/sort.js","node_modules/ramda/es/sortBy.js","node_modules/ramda/es/sortWith.js","node_modules/ramda/es/split.js","node_modules/ramda/es/splitAt.js","node_modules/ramda/es/splitEvery.js","node_modules/ramda/es/splitWhen.js","node_modules/ramda/es/startsWith.js","node_modules/ramda/es/subtract.js","node_modules/ramda/es/symmetricDifference.js","node_modules/ramda/es/symmetricDifferenceWith.js","node_modules/ramda/es/takeLastWhile.js","node_modules/ramda/es/internal/_xtakeWhile.js","node_modules/ramda/es/takeWhile.js","node_modules/ramda/es/internal/_xtap.js","node_modules/ramda/es/tap.js","node_modules/ramda/es/internal/_isRegExp.js","node_modules/ramda/es/test.js","node_modules/ramda/es/toLower.js","node_modules/ramda/es/toPairs.js","node_modules/ramda/es/toPairsIn.js","node_modules/ramda/es/toUpper.js","node_modules/ramda/es/transduce.js","node_modules/ramda/es/transpose.js","node_modules/ramda/es/traverse.js","node_modules/ramda/es/trim.js","node_modules/ramda/es/tryCatch.js","node_modules/ramda/es/unapply.js","node_modules/ramda/es/unary.js","node_modules/ramda/es/uncurryN.js","node_modules/ramda/es/unfold.js","node_modules/ramda/es/union.js","node_modules/ramda/es/uniqWith.js","node_modules/ramda/es/unionWith.js","node_modules/ramda/es/unless.js","node_modules/ramda/es/unnest.js","node_modules/ramda/es/until.js","node_modules/ramda/es/valuesIn.js","node_modules/ramda/es/view.js","node_modules/ramda/es/when.js","node_modules/ramda/es/where.js","node_modules/ramda/es/whereEq.js","node_modules/ramda/es/without.js","node_modules/ramda/es/xprod.js","node_modules/ramda/es/zip.js","node_modules/ramda/es/zipObj.js","node_modules/ramda/es/zipWith.js","node_modules/ramda/es/index.js","node_modules/util/support/isBufferBrowser.js","node_modules/util/node_modules/inherits/inherits_browser.js","node_modules/process/browser.js","node_modules/util/util.js","node_modules/is-arrayish/index.js","node_modules/error-ex/index.js","src/errors.js","src/rules.js","src/invariants.js","src/dataclasses/$_type.js","src/dataclasses/columns.js","src/dataclasses/predicates.js","src/dataclasses/index.js","node_modules/option/index.js","node_modules/events/events.js","src/PredicateCore.js","src/index.js","examples/index.js"],"names":["_isPlaceholder","a","_curry1","fn","f1","arguments","length","apply","always","val","F","T","_curry2","f2","b","_b","_a","add","Number","_concat","set1","set2","idx","len1","len2","result","_arity","n","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","Error","_curryN","received","combined","argsIdx","left","combinedIdx","curryN","addIndex","origFn","list","args","Array","prototype","slice","call","_curry3","f3","c","_c","adjust","start","_idx","_list","isArray","_isArray","Object","toString","_isTransformer","obj","_dispatchable","methodNames","xf","pop","transducer","_reduced","x","init","XAll","f","all","input","_xall","max","_map","functor","len","_isString","_isArrayLike","isArrayLike","nodeType","hasOwnProperty","_xwrap","XWrap","acc","bind","thisObj","_reduce","_arrayReduce","_iterableReduce","iter","step","next","done","value","_methodReduce","methodName","symIterator","Symbol","iterator","reduce","TypeError","XMap","_xmap","_has","prop","_isArguments","hasEnumBug","propertyIsEnumerable","nonEnumerableProps","hasArgsEnumBug","contains","item","_keys","keys","nIdx","ks","checkArgsLength","map","key","path","paths","p","pluck","allPass","preds","and","XAny","any","_xany","anyPass","ap","applyF","applyX","_aperture","limit","XAperture","pos","full","store","getCopy","_xaperture","aperture","append","el","values","props","vals","applySpec","spec","v","applyTo","ascend","aa","bb","assoc","isInteger","_isInteger","isNil","assocPath","nextObj","arr","concat","nAry","binary","_isFunction","liftN","arity","lifted","lift","both","g","_both","curry","_makeFlat","recursive","flatt","jlen","j","ilen","_forceReduced","preservingReduced","ret","_flatCat","_xcat","rxf","_xchain","chain","monad","clamp","min","_cloneRegExp","pattern","RegExp","source","global","ignoreCase","multiline","sticky","unicode","type","undefined","_clone","refFrom","refTo","deep","copy","copiedValue","Date","valueOf","clone","comparator","pred","not","complement","_pipe","_checkForMethod","methodname","fromIndex","toIndex","tail","Infinity","pipe","reverse","split","join","compose","composeK","last","_pipeP","ctx","then","pipeP","composeP","_arrayFromIterator","push","_containsWith","_functionName","match","String","identical","_equals","_uniqContentEquals","aIterator","bIterator","stackA","stackB","eq","aItem","typeA","equals","constructor","name","message","size","entries","keysA","extendedStackA","extendedStackB","_indexOf","inf","indexOf","_contains","_quote","s","escaped","replace","pad","_toISOString","toISOString","d","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","_complement","_filter","_isObject","XFilter","_xfilter","filter","filterable","reject","_toString","seen","recur","y","xs","mapPairs","k","sort","test","isNaN","NaN","repr","cond","pairs","pair","constructN","Fn","$0","$1","$2","$3","$4","$5","$6","$7","$8","$9","construct","converge","after","fns","context","XReduceBy","valueFn","valueAcc","keyFn","inputs","_xreduceBy","reduceBy","elt","countBy","elem","dec","defaultTo","descend","difference","first","second","out","firstLen","differenceWith","dissoc","remove","count","splice","update","dissocPath","head","divide","XDrop","_xdrop","drop","Math","XTake","i","_xtake","take","dropLast","XDropLast","_xdropLast","dropLastWhile","XDropLastWhile","retained","retain","flush","_xdropLastWhile","XDropRepeatsWith","lastValue","seenFirstValue","sameAsLast","_xdropRepeatsWith","nth","offset","charAt","dropRepeatsWith","dropRepeats","XDropWhile","_xdropWhile","dropWhile","or","either","_either","empty","takeLast","endsWith","suffix","eqBy","eqProps","obj1","obj2","evolve","transformations","object","transformation","XFind","found","_xfind","find","XFindIndex","_xfindIndex","findIndex","XFindLast","_xfindLast","findLast","XFindLastIndex","lastIdx","_xfindLastIndex","findLastIndex","flatten","flip","forEach","forEachObjIndexed","keyList","fromPairs","groupBy","groupWith","res","nextidx","gt","gte","has","hasIn","_identity","identity","ifElse","condition","onTrue","onFalse","_ifElse","inc","indexBy","target","innerJoin","ys","insert","insertAll","elts","_Set","_nativeSet","Set","_items","hasOrAdd","shouldAdd","set","prevSize","newSize","bIdx","uniqBy","appliedItem","uniq","intersection","list1","list2","lookupList","filteredList","intersperse","separator","_objectAssign","output","nextKey","assign","objOf","_stepCat","_stepCatArray","_stepCatString","_stepCatObject","into","invert","invertObj","invoker","method","is","Ctor","isEmpty","juxt","keysIn","lastIndexOf","_isNumber","lens","getter","setter","toFunctorFn","focus","lensIndex","lensPath","lensProp","lt","lte","mapAccum","tuple","mapAccumRight","mapObjIndexed","rx","str","mathMod","m","maxBy","sum","mean","median","width","memoizeWith","mFn","cache","memoize","merge","l","r","mergeAll","mergeWithKey","mergeDeepWithKey","lObj","rObj","lVal","rVal","mergeDeepLeft","mergeDeepRight","mergeDeepWith","mergeWith","_","_l","_r","minBy","modulo","multiply","negate","none","nthArg","o","_of","of","omit","names","index","once","called","Identity","over","fst","snd","_createPartialApplicator","partial","partialRight","partition","pathEq","_path","pathOr","pathSatisfies","propPath","pick","pickAll","pickBy","pipeK","prepend","product","useWith","transformers","project","propEq","propIs","propOr","propSatisfies","ps","range","from","to","reduceRight","reduceWhile","_reduceWhile","reduced","times","RangeError","repeat","regex","replacement","scan","sequence","traversable","sortBy","sortWith","splitAt","array","splitEvery","splitWhen","prefix","startsWith","subtract","symmetricDifference","symmetricDifferenceWith","takeLastWhile","XTakeWhile","_xtakeWhile","takeWhile","XTap","_xtap","tap","_isRegExp","toLower","toPairs","toPairsIn","toUpper","transduce","transpose","outerlist","innerlist","traverse","ws","zeroWidth","hasProtoTrim","trim","_trim","beginRx","endRx","tryCatch","_tryCatch","tryer","catcher","e","unapply","unary","uncurryN","depth","currentDepth","endIdx","unfold","seed","union","uniqWith","unionWith","unless","whenFalseFn","unnest","until","valuesIn","vs","Const","view","when","whenTrueFn","where","testObj","whereEq","without","xprod","zip","rv","zipObj","zipWith","default","process","module","exports","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","setTimeout","clearTimeout","runTimeout","fun","runClearTimeout","marker","queue","draining","currentQueue","queueIndex","cleanUpNextTick","drainQueue","timeout","run","nextTick","Item","title","browser","env","argv","version","versions","noop","on","addListener","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","formatRegExp","format","isString","objects","inspect","JSON","stringify","isNull","isObject","deprecate","msg","isUndefined","noDeprecation","warned","deprecated","throwDeprecation","traceDeprecation","console","trace","error","debugs","debugEnviron","debuglog","toUpperCase","pid","opts","stylize","stylizeNoColor","colors","isBoolean","showHidden","_extend","customInspect","stylizeWithColor","formatValue","styles","styleType","style","arrayToHash","hash","recurseTimes","isFunction","primitive","formatPrimitive","visibleKeys","getOwnPropertyNames","isError","formatError","isRegExp","isDate","base","braces","toUTCString","formatArray","formatProperty","reduceToSingleString","simple","isNumber","desc","getOwnPropertyDescriptor","get","line","substr","numLinesEst","prev","cur","ar","arg","isNullOrUndefined","isSymbol","re","objectToString","isPrimitive","isBuffer","require","months","timestamp","time","getHours","getMinutes","getSeconds","getDate","getMonth","log","inherits","origin","errorEx","err","predicateToRemoveIsRootPredicate","root","predicateToRemove","predicateToRemoveIsTheLastComparisonPredicate","CompoundPredicate","ComparisonPredicate","comparisonPredicateCount","errors","rules","CompoundPredicateMustHaveAtLeastOneSubPredicate","predicates","Promise","resolve","PredicateTypeMustBeValid","acceptedTypes","includes","InvalidPredicateType","RootPredicateMustBeACompoundPredicate","PredicateMustBeAComparisonPredicate","predicate","PredicateMustBeACompoundPredicate","AddOnlySupportsAfter","how","AddCurrentlyOnlySupportAfterInsertion","TargetMustReferToADefinedType","isNone","target_id","type_id","LogicalType_idMustReferToADefinedLogicalType","logicalType","Target_idMustReferToADefinedTarget","Operator_idMustReferToADefinedOperator","operator","RemovePredicateMustDifferFromRootPredicate","ForbiddenCannotRemoveRootCompoundPredicate","RemovePredicateCannotBeTheLastComparisonPredicate","ForbiddenCannotRemoveLastComparisonPredicate","$_type","Target","_requireProps","label","toJSON","Operator","operator_id","argumentType_id","Type","operator_ids","LogicalType","logicalType_id","ArgumentType","argumentType","component","mixed","properties","invariants","Predicate","$name","Types","$canBeRemoved","fromJSON","json","internalAPI","isFromJSON","UnknownJSONData","argument","getTargetById","getOperatorById","logic","getLogicalTypeById","compoundPredicate","parents","_acc","_parents","__","EventEmitter","_events","_maxListeners","defaultMaxListeners","setMaxListeners","er","handler","listener","newListener","fired","position","listenerCount","evlistener","emitter","option","fromNullable","dataclasses","_getTypeById","types","_getTargetById","targets","_getLogicalTypeById","logicalTypes","_getOperatorById","operators","_getOperatorsByIds","_set$operatorsToType","columns","$operators","_set$typeToTarget","typeOption","$type","_tapPromise","promise","_afterPromise","fBefore","fAfter","_initializeColumns","argumentTypes","wrapType","wrapTarget","PredicateCore","data","options","_root","_api","_options","defaults","_apply$flags","canRemoveAnyPredicate","_emitChangedEvent","_afterWrite","setData","_fromJSON","_columns","isComparisonPredicate","_find","compoundpredicate","unshift","CannotAddSomethingElseThanACompoundPredicateOrAComparisonPredicate","parentCompoundpredicate","CannotRemoveSomethingElseThanACompoundPredicateOrAComparisonPredicate","setPredicateLogicalType_id","newLogicalType_id","setPredicateTarget_id","newTarget_id","setPredicateOperator_id","newOperator_id","setArgumentValue","newValue","getArgumentTypeComponentById","valueOrElse","getDefaultArgumentComponent","element","eventName","getDefaultData","getDefaultComparisonPredicate","getDefaultCompoundPredicate","comparisonPredicate","getDefaultLogicalType","firstTarget","UIFrameworkMustImplementgetDefaultArgumentComponent","ploplop"],"mappings":";;;;;;kBAAwBA;AAAT,SAASA,cAAT,CAAwBC,CAAxB,EAA2B;AACnC,cAAOA,ICSUC,CDTL,IAAL,IAAa,OAAOD,CAAP,KAAa,QAA1B,IAAsCA,EAAE,0BAAF,MAAkC,IAA/E;AACN;ACFD;ACAA;;ACAA;;ACAA;ACAA,AJEA;ACAA;kBISwBW;AHTxB;AGFA;AFEA,AGFA;kBCWwBO;AAXxB;APUe,AKTf,SLSwBjB,OAAT,CAAiBC,CQVRuB,CRUT,EAAqB;AQVrB,ARWb,SQXsBA,ARWf,MQXM,CAAgBC,CAAhB,CRWGvB,CQXgBD,CRWzB,CQXM,ARWMF,CAAZ,CQX6B,CRWd;AQVtB,ARWE,QAAII,UAAUC,ASCMiC,MTDhB,KAAqB,CAArB,IAA0B,6BAAetC,CAAf,CAA9B,EAAiD;AMVrD,AEAE,ARWI,UQXI0B,CAAR,ERWWvB,EAAP;AQVF,ARWC,ASdL,KTYI,IQTK,CAAL,CRWO;AUdX,AFIM,ARWA,aQXO,ARWAD,GAAGI,KAAH,CAAS,GQXG,CRWZ,EAAeF,SAAf,CAAP;AQVE,ARWH,AKbL,eGEeF,GAAGI,KAAH,CAAS,IAAT,EAAeF,SAAf,CAAP;AGLR,AHMO,ARWJ,GAND,IQPI;AAGF,ARWH,ASjBD,SDMS,CAAL,QIKoBiD;AFXxB,AFOM,aAAO,UAAU1B,EAAV,EAAc;ANS3B,AMRQ,ADEO,AKXf,IViBIlB,IAAI,CKNgBS,MCFThB,CDEA,CAAiBiB,CCFdb,GNQG,AKNN,ECFA,ADEuBc,CCFd,GDET,CCFA,CDE6B,CCFdhB,SAAf,CAAP,GNQoB,KAAP,CAArB;AShBA,AEDA,ALUO,ADELe,OCJI,EDIGA,QAAQ,CLMFV,CKNb;AJKF,AFIA,AOVI,ADEFW,IJIEV,AFIAH,IEJI,CKNC,ADEAa,CCFL,GPUS,IMRI,EAAf,EJImB,KFIK,iBEJE,IAAP,AFIa,CEJlC,QFI2Cb,MAAT,CAAgBC,GAAhB,EAAqB;AACrD,ASpBF,AFUM,ADEJ,AOdF,MPcMa,GNQG,AMRP,ICFW,KLMEX,GFIM,EOVEiB,EAAV,EAAcC,EAAd,EAAkB;APW3B,AOVI,ADEN,AFJa,AOVf,AHEA,MFYMN,GFJkBX,EJYbH,EMREW,CNQT,COVWjB,CHFA,CAAiBA,CGEdI,ADEAD,AQfM4D,CVWT,EAAqB,EGErB,CAAS,ADEtB,ICFa,EAAe7D,SAAf,CAAP;AGXR,AEDA,AZuBG,AOVI,ADEL,AFJA,AUZa,GdsBb,GMNImB,CCJA,EHAG,AUZe0C,IRgBX7C,KAAKf,AFJAO,EAAT,CAAYZ,CAAZ,CUZM,CRgBb,AFJsBa,AUZeqD,CVY9B,EAAkB,AUZZ,EAA6B;AdyB3C,AOVG,ADEF,AFJE,AUZF,CdoBwB,CAA1B,IMJM1C,GCFG,AOdA,CPcL,EHFQpB,GEIG,CQhBC8D,CRgBd,CSAsBC,EDhBJ,EVYE9D,MAAlB,WUZY,CAAP,KAAoC,UAA3C;ALEF,AFaM,AHFA,AUZL,WVYU,CAAL,CGEO,KPUEE,KOVQoB,EAAV,EAAcC,EAAd,EAAkBC,EAAlB,EAAsB;AAC3B,ADENR,AFJM,AObR,AIFA,QTmBQ,CAAN,MCFanB,AHFAU,EAAP,CDWO,AITGN,ASjBMkE,Eb0BP,GITF,CAAS,IAAT,EAAepE,SAAf,CAAP,QJSqC,IAA9B;AIRR,ADEL,AFJI,AYhBS,OTgBT,EDIGiB,AUpBemD,EZgBb,CAAL,GEISlD,EUpBA,CAAkBmD,CVoB/B,AUpBa,EVoBM,AUpBe;AXmBpC,AEAI,ADEAjD,AFJI,AYhBN,IXkBER,KEAK,ASlBAyD,CXkBC,AEAN,CDEOjD,GUpBGiD,CZgBC,CYhBC,EVoBEpE,AWrBH,KZmBQ,CCEnB,IAAwBc,KAAKE,GAAL,CAAxB,CUpBU,CAAL,GAAiCoD,CAAjC,CXkBsB,ADFDzE,CAAf,CYhB+B,GZgBXY,EAApB,ECEyBI,CDFA,ECET,CAAahB,CAAb,EAAgBa,CAAhB,EAAmB,YDFF,UAAUC,EAAV,EAAc;ACG5D,AKhBF,AEDA,ALiBM,ADEFO,AFJM,AYhBN,ACDFqD,QAAM,CZmBCzD,ECEE,CAAP,CCFS,GFAGjB,CAAP,ADFQE,GAAGF,AajBA,CZmBCiB,ADFJ,EGEMU,AHFAb,EGEV,AHFI,CAAP,AYhBgB2D,CTkBC7C,ASnBmB,CXmBlBf,CAAP,AEAR,CFAX,CEA6BgB,EAAlB,EAAsBC,EAAtB,EAA0B;AFCtC,AEAO,ADEL,AFJM,AWlBT,ACEI,ACDA,CZiBmB,CAAvB,ODFwC,CAAhC,CafG,IVmBI5B,CUnBCmE,EVmBE/D,AUnBP,CAAQ,IVmBJ,CAAS,IAAT,ASlBa,ETkBEF,QUnBnB,CVmBI,CAAP,CUnBJ;ARGJ,AFiBO,ADELiB,AFJI,AYnBwC,AED9C,ADGG,GDFD,ACDa,IVoBT,CDIE,CAAN,SDFaL;AECX,ADEF,AFJM,AOjBR,AHSe,AQRd,ACDCQ,SVmBO,ADEAH,AEZeiB,CDUpB,AUnBM,KXqBKf,AFJA,CIRA,CAAiBlB,EFY9B,CWrBkBmB,CXqBC,EEZN,EAAyBe,CST9B,EAAkB,KTSb,EAAmCrC,EAAnC,EAAuC,KJQxBF,CAAf,KAAqB,6BAAea,CAAf,CAArB,GAAyCD,EAAzC,GAA8C,6BAAeZ,CAAf,IAAoB,qBAAQ,UAAUe,EAAV,EAAc;AerBvG,AZwBM,ADEFS,AFJM,AIRR,ASTE,STSK,EFYEA,AWrBA,EVmBE,GUnBG6C,CbiBCnE,CEICG,AOdH4C,AIPJ,CAAQ,CbiBClC,CIRC,CJQJ,CGEMY,CDEnB,AFJoBd,ASVHgD,CNYR,AHFI,CAAP,CGEiBjC,CDECR,CCFf,EAAkBS,AMZhB,ENYF,ADEoBR,ECFES,AMZH,CPcJ,CCFf,ADET,ECFmCC,CUnB5B,CVmBE,CUnB6BP,CVmBC,CMZFsC,IIP9B,CAAP,GJO4B,CAAkBtD,GAAlB,EAAuB;ANa/C,ADEJa,AFJK,AIRL,AKFF,AIPC,QTSKmB,CJMyE,ASRxEhC,CTQoD,CEMlD,CAAP,CFJS,EGEEN,CMZC,ENYEI,CCVC,CKFV,CLEL,EDUW,CAAS,AMZAE,INYT,AMZaH,ENYED,IMZN,IAAc,CNYvB,AMZN,CNYD,EHFoBS,CAAf,ASV8BkD,ITUV,GSViBb,SAAP,CAAiBc,QTUnB,ASVE,CAA0BZ,IAA1B,CAA+B5C,GAA/B,CTUQM,EAAV,EAAc,CSV4B,gBAAjF;ANaK,ADEJ,AFJO,AIRN,AKFH,AKbD,ADDe,AGAf,ObwBM,CCRE2B,SJQSvC,CIRC,CAAd,CJQgBF,CAAH,EAAMc,EAAN,CAAP;AGGN,ADEF,AFJO,AIRL,AOdJ,QPcQ4B,CDUC,ADEAlB,AFNwB,CGI7B,AHJS,GAEAtB,EEIX,AEZaG,CJQCL,CAAH,CiBzBWiF,CjByBLpE,CAAN,CAJL,AIJJ;AWhBJ,AZ2BM,ADEL,AFjBG,AIKA,AalBW,QbkBP8B,CalBgBsC,Id4BX,Ac5BE,CAAc/E,EAAd,EAAkBgF,IbkBX,CDUCvD,ACVnB,EDUS,Ac5BE,Ed4BYC,Ac5Be,Ed4B7B,EAAkBC,EAAlB,EAAsBC,EAAtB,EAA0BC,EAA1B,EAA8BC,EAA9B,EAAkC;AACvC,AHFL,AIRC,AalBF,GjBWA,GiBXIX,KbkBKsB,CalBC,CAAV,Ed4BazC,GAAGI,Ae7BM8E,Kf6BT,CAAS,CCVC7C,GDUV,EAAenC,ICVIC,KDUnB,CAAP,ACVG,IAAiCoC,UAAUrC,UAAUC,MAA5D,EAAoE;ADWjE,AHFN,AIRK,AcpBS,ADEb,AHAF,MGAM8E,Cd0BA,Ee5BkBC,CdoBd5D,EalBE0D,IbkBN,EcpBS,CAAmBT,CAAnB,ADEKpE,ECFiB,IDEnC;Ad6BE,AInBW,AHST,AcpBJ,ADEA,MAAImB,Gd4BG,AInBe6B,AWXfU,Cf8BL,ACVMpB,KalBKM,CVSA,AWXCC,CXWgBhD,EAAjB,EAAqB,AUTfiF,GbkBG5C,AalBT,CCFN,ADEP,CCFwByB,OdoBO3D,CcpBxB,CAA0B+C,IdoBzB,AcpBD,CAA+BqB,CAA/B,GdoBmC,CAAC,EcpBE,iBAA7C,UdoB0DlC,SAASI,WAAT,CAAf,CAAD,IAA0CF,WAAWrC,UAAUC,MAAjG,CAAJ,EAA8G;AWnBpH,AZ8BM,AInBJ,AHSMmB,AetBR,ADEC,ADEC,ADFF,STWS,AUTAH,Id4BI,Ec5BE8D,EbkBE5C,CGTCe,AUThB,EVSO,AUTW,CVSCtD,CAAZ,CJmBc2B,CInBCd,CJmBX,AInBJ,CHSiB8B,CDUCf,AInBA2B,CAAlB,CJmBI,CInBiB,CJmBC1B,EAAlB,EAAsBC,EAAtB,ACVI,CAAT,CDU+BC,EAA1B,EAA8BC,EAA9B,EAAkCC,EAAlC,EAAsC;AAC3C,AInBJ,AHSG,AalBHT,ObgBE,IahBKH,CVSCjB,CHSC,CalBT,Cd4BWF,GAAGI,Ac5BAJ,AGYMuF,GHZHP,CVSC7E,CJmBP,CAAS,IAAT,AInBX,CUTyBgB,Cd4BCjB,Ec5BT,CAAH,CAAd,Kd4BW,CAAP;AACD,AInBD,AHSEoB,AalBJH,AGNJ,IAAIqE,GjBgCE,IIjBK,AUTA,CVSL,AUTF,AGNQ,KhBwBKtF,QgBxBQ,EhBwBEqC,OAAV,CAAT,EgBxB6B;AjBmCjC,AInBI,AHSAA,AalBL,AGND,SjBkCO,CAAL,CiBlCOiD,IbeIpC,Cafb,CbeM,AafSpD,EhBwBE,AgBxBjB,ChBwBM,CgBxBa;ACDrB,AlBoCM,AInBA,AHSC,AezBP,AFOE,AHJF,AMFI,INEAyE,KGIKnD,AGNAoD,CAAL,CbeO,AObA,CPaL,CJmBO,AiBlCA1E,EHMX,AGNE,QjBkCmByB,CWhCC,CXgCX,EAAcC,EAAd,EAAkBC,EAAlB,EAAsBC,CWhCC,CXgCvB,EAA0BC,EAA1B,EAA8BC,EAA9B,EAAkCC,EAAlC,EAAsCC,EAAtC,EAA0C;AAC/C,AInBA,AHSFM,AalBL,AHJC,AMFC,WNEQmC,IXgCIzE,AInBA,AHSAyC,AUtBb,CAAciC,CAAd,CXgCgBtE,AmBAMwF,CRhCLzB,EAAjB,EXgCa,AWhCQ,CXgCC,ECVlB,EDUS,EAAejE,ACVAoB,MAAxB,GDUS,CAAP,IInBsBxB,CAAf,IAAoBsD,EAApB,GAAyB,qBAAQ,UAAUxC,EAAV,EAAc0C,EAAd,EAAkB;AQdlE,AZkCO,AInBG,AHSJ,AUtBF,AMFFkC,OjBgCI,CiBhCExC,CNECmB,CVsBC,CAAC,AUtBP,GAAUA,EAAV,CPaanE,Aaff,CAAgB,EbeEF,CAAH,EAAMc,EAAN,EAAU0C,EAAV,CAAP,OafR,GhBwBwBhC,CgBxBe,KhBwB9B,CAAL,EAA6B,IgBxBkB;AjBmCjD,AInBK,AHSDkB,AkB7BR,AROI,AMFA,SjBkCK,AIrB+B,AOX/BkC,CXgCL,AIrBI,AOXJ,AMFM,GNEGA,CAAT,AMFUvC,EhBwBE,CAAR,EgBxBE,CAAU,+BAAV,CAAN;ACJJ,AlBuCM,AInBA,AHSC,Ae5BP,ALMI,ASRJ,AHMG,GAFD,MNIOwC,EPaE,CAAL,AObF,CXgCS,EWhCE,IAAX,IXgCmBlD,EAAV,EAAcC,EAAd,EAAkBC,EAAlB,EAAsBC,EAAtB,EAA0BC,EAA1B,EAA8BC,EAA9B,EAAkCC,EAAlC,EAAsCC,EAAtC,EAA0CC,EAA1C,EAA8C;AACnD,AInBA,AHSFQ,AOdS,AGRZ,AMFD+C,QAAMxC,CTUgBiB,MRwBTjE,AInBA,Eafb,CjBkCgBI,AqBzCMyG,AJON,GhBwBG,CAAf,AOdS,CRwBA,AQxBuB3C,CRwBd,IAAT,EAAehE,IQxBf,EAAoCiE,EAApC,CRwBA,AiBlCb,CjBkCM,AQxB+CnE,EAAxC,CSV4B,CbebF,AIL6B,CJK5C,KAAqB,GafiB2F,GAAV,EAAe,qBbeP9E,CAAf,CAArB,GAAyCyC,EAAzC,GAA8C,6BAAetD,CAAf,IAAoB,qBAAQ,UAAUe,EAAV,EAAcyC,EAAd,EAAkB;AJoBpG,AInBG,AHSL,AOdH,AalBa,AVUbmB,AMFE,OjBgCE,AW9BCzB,EHQE,AalBe6D,EJQbpB,EIRI,CAAcqB,AJQzB,ENEF,CPae9G,AObA,CUVF,EjBuBKa,AiBvBemD,CbkBd,CJKJ,CiBvBF,CjBuBSrD,CAAP,AiBvBuB,EjBuBb2C,EAAV,CAAP,MObR,IAAsC,iBAAQkB,IAA9C;AXiCE,AInBK,AHSL,AOdA,AalBF,AFAF,ARUEC,AMFC,GAFD,INIKzB,CHQC9C,CRwBC,AIrBwE,AiBrBxE2D,CjBqBoD,CJqBzD,ACVOrB,EGTE,GiBvBGQ,AVUd,CAAe,CHQC7C,CPcC,CAAR,GAAYH,COdf,CalBC,CpBgCiBI,AoBhCAkF,GbkBG,CAAzB,CPcmB,CAAS,AOdA,IPcT,EAAehD,AUtBpC,EUVO,CAAgCY,CjBuBbvC,AObc,CPa7B,EiBvBJ,CpBgCc,AoBhCuBqD,CjBuBb,AHStB,EoBhCF,CpBgCyC,CoBhCC8C,CVUCxF,GUV3C,CAAP,EVUwC,EAAkB,QPanB,GHSgBkB,IAAP,EAAaJ,CGTZxB,EAAV,EAAc0C,EAAd,CHS8BnD,CGTZ,KHSI,EAAgBmC,QAAhB,EAA0BtC,EAA1B,CAAb,CAA9C;AELJ,AHgBM,AInBI,AHSP,AOdG,AalBL,ACFD,AXYI,ASXJ,AHSEwF,GhBIA,CEcE7C,IQhBI,AMFAK,KjBkCK,AQxBAhD,AGRA2E,ERgBE,CQhBX,CPaa3E,AILX,ASVJ,CNEgB,AMFA,EbeEF,CAAH,EJmBM2B,AInBAb,EJmBV,AInBI,EJmBUc,AInBA4B,CDGC,CHgBf,AInBI,CAAP,CJmBqB3B,EAAlB,EAAsBC,EAAtB,AiBlCX,EjBkCqCC,EAA1B,AiBlC4B,EjBkCEC,EAA9B,EAAkCC,EGhBX,AHgBvB,EAAsCC,AiBlCAyD,EjBkCtC,CiBlC4B,CjBkCcxD,CiBlCCsC,CjBkC3C,AiBlC4B,CdkBI5B,CHgBcT,AiBlCA,EjBkC9C,EAAkD,GGhB3B,CAAkBlC,EAAlB,EAAsB;AACxD,AEDF,ALiBQ,AInBC,AHSR,AOdI,AGRCsB,AMFF,IZiBAiC,KFCK,ACLwB,CAApB,CabF,EZiBE,ADFA,EJmBEvD,AWhCA,CMFC0E,CAAL,CjBkCOtE,AiBlCAqF,ENEEtB,CMFT,CNEI,CXgCA,AWhCQ,AMFAI,CjBkCC,AiBlCb,CAAP,CZiBsB,ELiBX,EAAerE,CGhBdF,GAAGG,ACHE,KJmBN,CGhBN,AHgBD,EGhBmB,AQhBZ,EPagBmD,AObahC,EPavB,CCEa,CDFC,EObpB,EAAqC,ERgBb,EEDIiC,AMf5B,CAAT,KNe4B,CAAgBvD,EAAhB,EAAoBmB,GAApB,EAAyB0B,IAAzB,EAA+B;AFE7D,AEDF,Aa1BF,AlB2CO,AInBG,AILN,AQlBJ,ALUK,AMFF,AMZH,GNUE,GZmBI1B,CLeA,CGdEA,AKRA2B,KHOKD,CFCC,CAAV,AKRWE,EJKE/C,CCECG,EDFEL,CAAH,AILIkD,EJKErC,CCEjB,ADFW,EAAS2C,ECEEnC,ADFX,CAAP,CILK,CAAgB8B,GHOG,CAACJ,CGPpB,CAAsBK,GHOG/C,CGPzB,CAA2BD,IHOxC,EAA8C,GGPjC,EAAsC,CAAtC,CAAX;ALSA,AEDA,ALiBA,AInBK,AILL,AWrBJ,ARaI,QRgBI0C,AKRAoB,CJGK,CAJL,CCQGnB,AMfA,GHQGC,CHOV,CMfYqB,CRgBCjE,CQhBN,CHQQkE,AGRA,GHQL,EAAV,GLQuB,CAAV,CAAb,WQhBO,EAA+B9C,MAA/B,CAAP;ARiBA,AEDD,ALiBG,AInBA,AILF,AGRD,AMFD,AOdF,GbWE,KRqBMuB,AKRA,CAAC,ASVA2C,GjBkCG,EiBlCV,CdkBatF,CHgBCiC,KAAJ,CAAU,GGhBGjC,OKRP8D,GLQiB7D,AKR1B,CAAL,EAAoB,GLQC,GAAmB,CAA7B,CAAX,qDHgBQ,CAAN;AGfF,AEDF,AL9BA,AI4BM,AILF,AGRJsE,AMFD,AJID,CInByB,EAAzB,CJmBIK,ERaEtB,CMfCR,CRgBCF,EKRE3B,AKNA,IRaIA,CFCC4B,ACHA,CILC,AGRd,CHQI,AGRW,GNeG,CFCCC,AEDP,EQbS,CRaCH,KAAK1C,CFCd,CAAgB8C,IEDjB,CFCC,AQhBb,CRgBmCC,CEDC,CAApC,CMfsC,CRgBzB,CAA2BhD,ECHZJ,ASXC,CTWhB,KAAqB,AObcwB,CRgBnC,EAAsC,AUdbwD,CVczB,CAAX,CQhBoC,AEET,CAAahF,CFFc8E,AEE3B,EAAgBjE,CAAhB,EFFS,AEEU,EFFe,cPadA,CAAf,CAArB,IAA0C,6BAAe0C,CAAf,CAA1C,GAA8DD,EAA9D,GAAmE,6BAAetD,CAAf,KAAqB,6BAAea,CAAf,CAArB,GAAyC,qBAAQ,UAAUE,EAAV,EAAcD,EAAd,EAAkB;ADIjJkC,AEDF,ALiBD,AInBS,AILJ,AcxBN,AXgBI,ASfJ,AGFA,AVmBE,AYpBF,IHEIgB,AFCA6C,Ef8BElD,EMfE,CRgBC,AQhBA,AEEA9C,CVcL,CiB/BO,Ef8BE6C,AGPArC,AKNArB,CVcC,AQhBA4E,AEEL,CSlBMb,AXgBN,CAAOe,CPaC5E,ASXAW,CAAR,CLMUuD,CJKCrD,CCECM,AMfZ,AEEYrB,CTWJ,AkB7BKkD,AXgBlB,AEEF,ERaA,ADFsBpC,AObA,ASfA,EjB+BE,ACHT,EAAWyC,CAAX,CAAP,CILqBlD,AcxBhB,CAAiB2D,IFCI,CZuB9B,EAAiC,CcxBvC;AnBiCM,AEDJ,ADFO,AILD,AcxBR,AXgBM,ASfJ,AHaa,AJId,CAFsB,CAAvB,EShBIiD,EjB+BErD,GDJqH,AabnG6B,CdkBdjE,ACLwE,COXvEqD,ASfAgC,CZuBC,CJKC,CCEC,AMfR,CSfJ,AHaa,CGbCjC,AHae1E,CNEd,ASff,CHaa,CdkBI4C,AKRAoB,AcxBA,AFCAG,CHagB,CGbjC,CTeI,CHQiBD,AYvBA,GjB+BG9D,KAAP,AmBhCY,CnBgCC,GKRGe,CLQhB,AEDG0B,EFCgB,AKRf,CAAJ,CHOL,AGPF,CHOV,CDF0B/C,CAAf,EILgC,GJKX,OIL1B,EAAiD,GLQXI,SAAR,EAAmB,CAACiB,GAAD,EAAM0B,ACHdQ,CAAf,CAArB,EDG4C,CAAnB,ACHgB,CDGnC,CAAb,mBCHwD,UAAUxC,EAAV,EAAcyC,EAAd,EAAkB;ADI1EnC,AEDJuC,ADFQ,AILA,AcxBR,AXgBIpC,ASfF,AHaF,AOjBF,AEDA,QrBmCQmC,CiB/BCK,AFCAK,AHaA,EGbL,Cf8BF,CFCW,AclBAqB,CdkBP,AiB/BQrB,CTeC,CNeCnE,Ae9BZ,ChB4BaA,AILAgE,CcxBCd,ALcT,AJIM4B,CRaIjC,AYjBA7C,CbeCa,CILCqD,ASVZ,CbeQ,AkB7BR,ALcP,CKdqBhE,CjB+BCuD,ADFA9C,CAAP,EAAU2C,CCER,CAAH,ADFC,CCEf,ADFQ,EkB7BD,CdwBwBnC,GAAZ,CAAJ,CcxBqB,AXgBd,CHQef,IGRV+D,CHQZ,CAA4BH,AGRrB,CAAQ,EHQf,EAAiClB,IAAjC,CAAP,GcxBD,GAAoD,IXgBrC,EAA6BxB,GWhBiByF,GXgB9C,EAAqC,KAArC,CAAT,CWhB8C,AXgBvD,CWhB6ExC,CAAtB,EAAyB;AnBiChF,AEDJ,ADFO,AILA,AcxBL,AHDJ,ARiBK,ASfD,AHaH,SZiBQb,ADJ6C,Ae5B7CmC,ACEAnB,ChB0BI,AgB1BT,CEDOZ,EnBgCExC,ACHA,AgB5BAoD,Cf8BX,Ae9BE,KjB+BE,CmBhCcxB,CHDpB,CAAsBiB,EGCX,AHDX,CGCyBI,CAAd,AHDekB,GAA1B,EAA+B5C,CGCC,GHDhC,EAAqC,Kf8BTlC,CAAf,KAAqB,IkB7B9B,yBlB6B6C0C,CAAf,CAArB,GAAyC,qBAAQ,UAAUzC,EAAV,EAAc0C,EAAd,EAAkB;ADI3E,AEDJ,ADFS,AILFnC,AcxBL,AHDD,ARiBE,ASfD,AGLH,AIFA,CtB4B0B,CAA1B,CiBxBS,EnB8BL,CmB5BE,AHDAA,KRiBKG,CQjBC,CAAV,EXyBa,AcxBAyF,CdwBP,CJKS/G,AObb,GPagBF,CAAH,EAAMc,EAAN,EAAU0C,AkB7BrB,CAAsBiB,ClB6BX,AkB7BX,ClB6BI,CkB7BqB;AnBiC3B,ACHK,AILF,AcxBH,AHDF,ARiBC,ASfDoC,GTSA,GQXI1B,CCECjC,EhB0B+C,CAAzC,CDKFhD,AmBhCA,CHDC6C,Cf8BC,CDGCzC,EiB/BZ,CDFeD,ACEA,Cf8BFoD,CFCJ,CAAS,GgBjClB,ChBiCS,EAAeT,IAAf,AmBhCK,CnBgCZ,KiB/BF,EEDS,EAAeyB,AFCc,CED7B,ClB6BiBzE,AkB7BxB,ClB6BS,IAAoB,UgB5Be0E,IAA9C,OhB4BuC,UAAU3D,EAAV,EAAc;ADIpD,ACHO,AILJ,AcxBH,AHDD,ACEA8F,AIPF,ACAA,ACDA,AEDA,GzB6BS,AmBzBP,CnByBA,GiBpBK3D,EDFE7B,CXyBC,KWzBK8D,CCEb,ChB4BejF,AgB5BA,CDFf,Ef8BkBa,Ae9BA,Ef8BH,EAAOF,CAAP,EAAU0C,CAAV,CAAP,SgB5BR,CZuBuBW,GAAf,AYvBgC,CZuBpC,EAAyB,cYvBmB1C,MAAhD;AjBgCD,ACHQ,AILD,AcxBP,AHDGmE,ARiBF,ASfAkB,CjBkB0B,AmBzB5B,CnByBA,KiBlBO3D,EhB0B0B,AOXxByB,CPWI,Ae5BHN,EXyBEE,CJKC,Ae9BA,ARiBX,GSfA,CAAe,QZuBQF,GAAG/D,IWzBlB,CXyBe,CAAS,AWzBAqF,ECEhC,CDFQ,CXyBe,CWzBc5C,CXyBCC,AYvBA,EhB4BZnC,CAAf,CILY,AWzBmBQ,CXyBpC,EJKyB,Ae9BM,CAA7B,CAAN,CCE8CG,MAAV,EAAkBsD,KAAlB,EAAyB,GhB4BxB,UAAUhE,EAAV,EAAc;AyBtCvD,AzBuCU,AILF,AWzBJ,ARiBH,ASfG,AOVJ,ChBGwB,EAAxB,KQKQ6E,GCEG,IZuBIpB,AWzBAoB,CCECtB,ChB4BCnE,CDGF2C,AiB/BJ,CDFQ,ACEA,ChB4BC7C,CAAH,EAAMc,EAAN,CILSoD,CJKCX,CAAV,CAAP,AILK,CAAP,QYvBG,EAA6B/B,CDFzB,CAAX,EAAwC,ECEjC,EAAqC,KAAKoD,CAAL,CAAOE,KAAP,CAArC,CAAP;AhB6BK,AILF,AWzBDa,ACEH,GAFD,MhB4B+B,CAApB,Ee5BDA,Cf8BC,Ge9BG,EGCDsB,kBHDH,CAAN,Kf8BsB1D,CAAf,IAAoB,qBAAQ,UAAUC,EAAV,EAAc;A0BxCvD,A1ByCU,AILL,AWzBC,ARiBN,AYxBA,ACDA,AIFA,IjB2BIuB,QAAQ,KPaK7E,GAAGF,CAAH,EAAMa,CAAN,CObQ,CPaC2C,EAAT,CAAP,iBObuB,SAASuB,KAAT,CAAeH,CAAf,EAAkBP,EAAlB,EAAsB;APc9C,AILL,AWzBC,ARiBH,ASfA,AGTF,IAAI6C,KnBmC6B,AOXxB,ASfAL,ChB0BI,CIHF3G,EJKEA,AObAyE,ASfX,CZuBYrE,EJKEN,CAAH,AObJ,AYxBQ,CZwBC4E,CPaC/D,AILR,AGRF,AYxBU,CnBqCN,AILO,CGRCwD,CPaCd,CAAT,AObJ,CPCD,AIOG,AGRT,EHQwBnD,MehCM,EAAE4D,CfgCvB,CAAP,QehCwC,IAAZ,GAAmBmD,oBAAnB,CAAwC,UAAxC,CAAhC;AXuBA,AiB3BA,AzBaI,AIwBD,AWzBC9F,ARiBH,AoB9BD,AXeC,AGTD,AIJA,ADCA,CfyByB,ASzBD,CTyBxB,CHVE,AYfF,CRyBIwD,AWtBAuC,MXsBM,COfC,CAAP,WPemB,EWtBE,CAAC,aAAD,EAAgB,IXsBT,KWtBP,EAA2B,MXsBP,SWtBpB,EAA4C,UAA5C,EAAwD,KXsBtB,CAAC,KAAD,CAAd,UWtBpB,EAAgF,MXsB9B,SAASvC,CWtB3D,EXsBkD,AWtBgD,CXsBnC3E,EAAb,EAAiB6C,IAAjB,EAAuB,KWtBzE,CAAzB;AXuBE,AReC,AILF,AQlBD,AGPG,AIPH,GnBME,CYQEsC,EJQEhE,MAAM,CAAV,KDEa0D,CKVI,aAAa,qBAAQ,SAASO,WAAT,CAAqBb,CAArB,EAAwB;AJS9D,AoB9BF,A9B+CA,AEFC,AYvBC,AGPA,ACEF,AGTA,ACJA,ItB2CI7B,AkB9BAkE,AGTAO,EPcE,GJQGhG,AOfAgD,GAAG,ACEA,ClB8BC,EUjBEtB,KAAK1C,CWtBC,IHSI,CRavB,AViBwB,EUjBE,CIRboE,CAAT,CAAJ,EAAiB,AGPV,CIPyB,CJOCkB,GAA1B,CAAP,OCE+B,AGTa,CrBuCZ,QkB9BQmB,ClB8BClE,IkB9BV,CAAegC,ClB8Bd,AkB9BD,ClB8BiBvE,CkB9BCgE,EAAlB,EAAsB,ClB8BrB,EAAwBnE,EAAxB,EAA4B;AUhB1D,AViBF,AczBE,AGPH,ACEC,AGTA,MrBuCIG,EUjBE,CAACH,AQbA,EJKE,CJQC6C,CQbC8D,EJKT,EJQaxF,AViBA,AkB9BR,ClB8BP,AkB9BgBuD,CAAT,CRaG,AViBQ,CUjBX,AQbYP,CRajB,CQbK,CRae,AQbtB;ARcI,AiB9BN,ACAA,AGFA,A/BiDI,AczBD,AevBH,AXkBC,AQhBD,CRcyB,CAAzB,SlBgCW,EUjBE,KAAP,cViBanE,EAAR,CAAP;AUhBC,AViBF,AczBD,AGPF,AIPE,MPcI,CAACuE,CAAL,CGPOuB,AIPA5F,CPcC,QILK0G,CGTIK,KJOnB,CAAyB9C,EAAzB,EAA6BsB,GAA7B,EAAkCM,IAAlC,CIPS,CJO+B,AIPA,QAA/B,CAAP;AXuBE5E,AoBjCJ,AEDA,AhByBA,AhB0BE,AczBE,AGPF,AIPD,ACPD,AGDA,CJIkC,EAAlC,CLiBIuE,ECNEM,GjBgCG,EUjBE,AMTA,AFCA,CJQP,COfSD,GHOT,EGPcE,IAAL,EDMW,ACNtB,MjBgCc9F,MAAP,EAAe,OgB1BQ,SAASuF,IAAT,CAAc1F,ChB0BdG,CgB1BA,EAAkBwF,GhB0B1B,EAAgB,EgB1BR,AhB0BR,EgB1BmC,AhB0Bf3F,EAApB,CAAf,CAAP;AUhBC,AMTD,AhB0BD,AczBE,AGPD,CjB2BwB,CAA1B,OgBrBS,ACNA,CAACgG,KAAKE,GgBpBSyC,ChBoBtB,EAAmB,SDML3I,GAAGG,MAAV,EAAkB,YAAY;ANUrC,AiBjCF,AIFA,Af0BI,AiB3BW,AnB4Bb,AGPEsF,AYnBJ,ARYA,IAAI2B,EPcE,GJQG,AuBpCeuB,ChBqBdxE,CDMCnE,ENST,AIRWuE,AGPA,CDMCnE,AFCR,COdS,GrBuCAsC,AiCrDA,CjB2BJ,AiB3BuBlB,AnB4Bf,CEDCmE,AiB3BL,EAAsB9C,EZcbuE,EYdT,CjB2BJ,AFCT,CmB5ByC,CjB2BdlH,AFCA,GGPnB,AIPK,CAAkB2C,CJOC4C,GAAxB,AIPK,CLaJ,CAAP,ACNmCO,AIPAqB,IAAxB,CJO6BlB,CIPC,IJOnC,CAAN;APgBH,AMTE,AiB3BD,AnB4BE,AGPA,AIPF,CXa2C,CAAtB,CAAvB,AMFS,CAAP,EiBzBIhF,AZcAA,EJOEsE,GHOG,CmB5BC,AZcA,CYdV,AZcA,EJOaA,CHOX,GGPe,sBAAJ,CAAX,EAAwC;AapB5C,AEDA,AhB4BC,AiB3BC,AnB4BC,AGPGA,AiBvBN,AbgBE,ACVF,CNmBwB,CAAxB,IiBvBMmD,GZcGzH,GJOGsE,EgBrBE5C,CZcCA,CJOC,EPeD8B,CuBpCIxE,CZcCA,KYdN,CZcZ,EAA0B,CYdCqB,IAAI,CAAnB,CAAZ,ChBqBU,CAAN;AgBpBJ,AnB4BA,AGPI,AIPF,MYdEiE,AnB4BA,EOdE5C,IYdI,CZcC1B,GYdG4B,AZcR,ELaO2C,GiB3BH,CAAUkD,AZcAvB,IAAlB,EAAwB,EPcZ9C,CmB5Be,AnB4BzB,CmB5BgB,AnB4BpB,EAAkB,CmB5BeqE,KAAb,GAAqB,CAA/B,CAAV;ANCF,AIFA,AIFA,AFIE,AnB4BE,AGPC,AIPC,AEEN,IAAIf,KUhBK1G,EnB4BE,ASZA,EFFE,EYdEyH,CnB4BX,COdE,GYdJ,EAAoB,EVgBE,qBAAQ,SAASf,IAAT,CAAcC,KAAd,EAAqB9D,GAArB,EAA0B;AUftDyB,AnB4BD,AGPCO,AIPC,AEEH,MAAI1F,EUhBEa,GAAJ,AhBqBO4E,CMLC/B,GUhBGjB,AVgBb,CNKckD,IAAL,CgBrBUjD,ChBqBjB,QgBrBW,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BL,IAA3B,EAAiC1B,GAAjC,EAAsCA,MAAMK,CAA5C,CAAX;ADHJ,AIFA,AHMIL,AnB4BF,AGPC,AYvBH,AKHA,AbmBIA,AEEF,IMlBEiH,Ef8BE7D,ASZApD,ETYEkE,GmB5BG,AJFA,ARgBA,CYdP,AZcA,AEEQ,CAAV,GTYI,KAAe,CAAnB,EAAsB,Ae9BA,YAAY;AIGjC,AnB4BC,AGPF,AYvBA,ARgBC,AEED,SNKOlB,AMLAhD,ETYE,Ae9BAiH,Cf8BC,AGPA,CHOC7D,EAAEpE,Ae9Bb,ANkBa2H,CMlBCpD,CAAd,EAAiBP,Ef8Bf,Ae9BF,ANkBmBhE,EMlBE,INkBrB,EAA2B,INKpB,EAA0BsF,GAA1B,CAAP;AaxBF,ACDA,AIFA,AEDA,AJQE,AnB4BC,AGPF,AYvBG,ARgBF,ACdF,ACgBI,QAAInF,CUhBCmF,AJFAtB,ARgBA,EQhBL,CIEF,EJFYA,ARgBZ,CEEa,CMlBX,GNkBA,EAAiB;AUfpB,AnB4BC,Ae9BE,ARgBH,AEEK,CFXN,KPuBMI,EAAEpE,Ce9BCuE,CAAL,GAASA,Cf8BP,Ae9BF,Kf8Be,CAAjB,EAAoB;Aa/BtB,AKHA,AIFA,AtBqCI,AGPJ,AYvBI,AKNJ,AXwBK,Ae1BL,SrB+BS0B,AYvBAiC,Ef8BE,Ce9BP,Gf8BA,Ae9BW,KAAX,EZuBJ,CAAuBlE,EAAvB,EAA2BsB,GAA3B,EAAgCzB,GAAhC,EAAqCqC,UAArC,EAAiD;AHQ9C,AGPD,AYvBC,ARgBH,AEEI/F,ACLJ,IAAIwG,KPUK3C,CMLC7D,CCLC,CPUC,EMLEwH,MAAM3G,GAAN,CAAJ,ACLc,CDKpB,QNKK,EAA0B6C,IAAIqC,MOVP,IPUG,EAAgB,GOVVS,IAAT,CAAciB,CAAd,EAAiB/D,GAAjB,EAAsB,IPUEG,GAAG,mBAAH,CAAL,EAA8BA,EAA9B,CAAhB,EAAmDsB,GAAnD,CAA1B,CAAP;Ac5BF,AIFA,AIFA,AzBwCE,AGPD,AYvBC2C,ANkBEjH,ACLF,MViBIoD,Ce9BCvB,Cf8BC7C,CUjBC,EDKE,CAAP,ETYE,Ee9BJ,Cf8Be,Ae9BA,Cf8Bf,EAAkB,SUjBN,CAAC4H,CAAD,CAAL,EAAU/D,EKbjB,CLaO,CAAP,EKbsC,iBAAQQ,IAA9C;Af+BE,Ae9BF4D,ANkBC,ACLF,CAFuB,CAAxB,KKXOpF,If8BIuB,EAAEe,Ge9BX,CAAe,Uf8BN,CAAiB,CAAjB,KAAuBf,EAAEe,Ee9BlC,IAAwC,Qf8BR,CAAiBf,Ce9BCjD,Cf8BCnB,Ke9BX,Cf8BS,Ce9BS,Ef8BE,CAA5B,CAA9B;AuBvCJ,AGFA,A1B0CG,AGPH,AYvBI,ANkBF,Ae7BF,IrBkCImG,IYvBI,CAAC,ANkBAhG,GAAP,EMlBY+H,GAAV,CZuBc,AOVHvB,CKbI,MZuBMP,MAAP,KAAkB,WAAlB,GAAgCA,OAAOC,QAAvC,GAAkD,YAApE;AWdA,AdsBE,Ae9BIlF,ANkBL,CAXuB,CAAxB,EKCI6G,KdsBK,CctBC,IdsBR,Ce9Ba,KAAKhE,EAAL,CDQQ,ACRA,mBAAR,EDQgB,ACRa7C,MAA7B,EAAqC,CDQZ6G,GAAT,CAAarI,ACR7B,CDQgB,ACRzB,EDQyCa,CAAhB,EAAmB;AAChD,AIjBF,AGFA,ACAA,AGFA,AEDA,A3B4CC,AGPc,AYvBV,AKVL,CpBiBgC,CAAhC,EoBjBIkI,KNkBK/I,AXee8F,KWfVjF,CAAZ,CXea,AiBjCC,CjBiCgBX,CMLjB6H,CNKA,EAAqBpC,GAArB,EAA0B5C,GiBjCZ,CjBiCd,EAAgC,SiBjCN;ANmBxC,AXeC,AYvBE,AKVF,CNgBqB,CAAvB,IXiBM,KYvBK,AKVAgG,EjBiCE7I,EAAP,CYvBUmE,Ef8BDgB,Ae9BJ,CAAQ,CZuBC,AiBjClB,CAAmB3D,CAAnB,EAAsB2C,EAAtB,EAA0B,EjBiC1B,EAA8B,QYvBrB,EAA+B7C,MAA/B,CAAP;AETJ,AWNA,AzBuCItB,AYvBD,AKVC,GLKF,MZ4BO,AiBjCAmE,EAAL,GAAUA,EAAV,ENkBWgE,YXeCnI,EAAP,CAAL;AACD,AYvBDoI,AKVE,OLUGpF,EKVE8F,GAAL,GAAW,CLUb,AKVE,CLUa,mBAAf,IAAsC,UAAUxH,MAAV,EAAkBsD,KAAlB,EAAyB;AUfjE,ACAA,AGFA,A1ByCE,AYvBE,AKVA,AILJ,MrBsCM,EYvBE,CKVCmE,ILUIrE,AKVT,CLUI,CAAOE,CKVC,ILUR,CAAJ,AKVA,ELUmB,UZuBJ/B,IAAb,CAAJ,EAAwB;AACtB,AYvBE,AKVF,SAAK4C,EjBiCEI,AYvBAwC,CKVP,ELUE,CKVS,ELUE,EKVEtF,ELUb,GZuBkB/C,AiBjCT,CAAUwB,CjBiCd,AiBjCI,CAAX,CjBiCwBiE,GAAjB,EAAsB5C,IAAtB,CAAP;AkBrCJ,AMHA,AxByCG,AYvBGvB,AKVH,AUVH,efoBe,uBAAS,KAAK6C,EAAL,CAAQ,mBAAR,EAA6B7C,MAA7B,EAAqC,IAArC,CAAT,CAAT;AZwBJ,AYvBG,AKVHuH,ATkBF,IAAIb,EReE,MiBjCMhF,ATkBA,CReCH,KAAK,GiBjChB,CAAoB,GTkBG,cReZ,CAAP,CiBjCJ,IjBiC2C,AiBjCA,CTkBZ,SRe/B,AQfwCmF,ERee,GQfxB,CAAeD,CSlBKvD,ATkBpB,EAAkB3B,ESlBjD,ETkB+B,EAAwB;Ac1BzD,AGDA,AGFA,A5B6CI,AYvBA,AKVFgG,ATkBA,SAAO,EReEzC,AYvBA9E,CKVC0B,KLUR,IKVF,CAAoB,GjBiCGhD,EAAd,CQfE,CRegByF,GAAlB,EAAuB5C,IAAvB,EAA6B,GiBjCtC,IAA6C,CTkB7BkF,CAAL,CAAJ,EAAalF,IAAb,CSlBgDvB,ATkBvD,IReS,CAAP,CiBjC2C,EAAkB;AjBkC9D,AYvBA,AKVC,ATkBH,CAFwB,CAAzB,CIZE,MKJOmE,GAAL,GAAW,IAAX;AjBkCF,AiBjCE,AYdJ,M7B+CM5C,KAAKyD,AiBjCA,KAAKnC,EAAL,ATkBI6D,CSlBI,GjBiCb,KAAqB,IAAzB,EAA+B,OiBjCtB,EAA+B1G,MAA/B,CAAP;AjBkCA,AYvBF,AKVC,GAHD,MLaO8G,EZuBEtC,EYvBT,cZuByB9F,EAAhB,EAAoByF,GAApB,EAAyB5C,KAAKyD,WAAL,GAAzB,CAAP;AsB5CJ,AMHA,AEDA,A9BiDG,AYvBF,AKVCuC,AUdF,CfEwB,EAAxB,SKYY7F,MSRGjC,GTQb,CAAoB,GSRAkJ,SAAP,IAAoB,GTQjC,IAA2C,ESRDC,QTQW5I,ESRpB,CAAoBE,CAApB,EAAuB,ATQb,EAAkBoD,KAAlB,EAAyB;ASPpE,A1ByCA,AiBjCE,Ab0BJ,IAAI0C,EJOE,G0BzCG9F,ATQAwH,Gb0BG,CJOCnG,C0BzCC,ATQV,CSRK,ATQM+B,GcjBS8F,A/BkDNzE,CIPCpC,CsBlCCrC,ATQhB,CSRF,C1ByCI,IIPoB+F,CJOC,GIPf,KAAuB,EJOjC,EAAqC,MIP3B,IAAqC,CAACJ,cAAtC,GAAuD,SAASI,IAAT,CAAcvD,GAAd,EAAmB;A2B3CvE,ALUd,A1ByCG,AYvBJ,AKVI,Ab0BF,IQhBEsE,KmB5BoBoC,A3B4Cf7G,EJOEiC,AiBjCA,CLUC,IKVIiD,Ab0BA/E,GAAP,C2B5CM,AdkBJ,CclByBO,CAArB,CdkBQ,CclBgB,CnB4Bd,ARgBAP,EJOEhE,CiBjCCmE,Ab0BnB,CJOE,CiBjCY,CjBiCQsB,AiBjCA,Ab0BA,EAAtB,CJOE,EAAyB5C,AIPAgB,IJOzB,CAAP,EIPuC0D,GQhBV,CRgBG,CAAYvD,Ea1BzB,Cb0Ba,Ca1BgB1C,Ab0BlD,GQhBwCgH,GKVnB,ELUU,AKV2B,CLUZ5D,CAAf,EAAkBP,CKVc8E,CLUhC,EAAsB,IKVK,EAArC,CAAZ,GAAmE3H,MAA1E;AcjBF,A/BmDC,AYvBD,AKVC,Ab0BF,CAFW,Ea3BV,Cb6BE,K2B5CKuC,AnB4BA,IAAIuE,ARgBAb,G2B5CGvE,CnB4BP,ARgBL,CQhBc0B,ARgBAV,CQhBT,EAAYG,ARgBjB,EQhBK,ARgBc,CQhBrB,CmB5BO,CAAiBL,QAAjB,CAA0BZ,IAA1B,CAA+BqB,CAA/B,MAAsC,mBAA7C;ATIF,AMHA,AEDA,ACCC,A/BmDC,AYvBD,AKVCsE,Ab0BA,A4B9CF,AHEA,CjB0ByB,CAAzB,IZyBM,AIPAhF,Ma1BMb,CjBiCCH,AIPAmB,GAAP,EJOYyC,GiBjChB,CAAoBuC,Ab0BAhF,EJOhB,CIPJ,Ea1BA,Ab0ByB,EJOE,CiBjCC,SjBiC5B,CiBjCsCY,CjBiCC,IiBjCX,EAAiB;AJS/C,AbyBI,AiBjCA,Ab0BA,ISlBAyD,KIRK5C,CJQC,CbyBCW,AIPA,Ca1BP,CAAS,Ab0BT,KQhBWkC,AKVGQ,GAAd,EJQmB,EbyBE9I,AiBjCA4E,EjBiCd,EAAkBa,CiBjCzB,EjBiCO,EAAuB5C,IAAvB,EAA6B,KazBR,GbyBrB,CAAP,SazByC,4BAAc,CAAC,KAAD,CAAd,kBAA8B,SAASwF,GAAT,CAAarI,EAAb,EAAiB6C,IAAjB,EAAuB;AAChG,AORF,ApBiCG,AiBjCC,Ab0BD,A6BhDH,IbsBIzC,EPQEe,GIRG2H,GJQG,AORA,AHAR,CJQF,GIRc,CAAZ,QGAqB,qBAAQ,SAAS1I,KAAT,CAAeJ,EAAf,EAAmB8C,IAAnB,EAAyB;AVS1D,AGAE,AORA,AHAE,Ab0BF,IMlBEmF,ENkBEnB,Ea1BE,CJQC3F,AORAnB,ChB0BP,EgB1BUI,AhB0BAoH,Ca1BCsB,CPQC,CGACjG,CIRP,Ab0BN,CgB1BO,CAAS,EPQE1C,CIRC,CGAZ,EAAe2C,EPQtB,AIRwB2C,CPQC,CGAC,AORnB,CAAP,AHAmB,CAAStF,MAA1B,EAAkC,UPQH,SAAS8H,OAAT,CAAiBC,KAAjB,EAAwB;AACzD,AGAE,AMTJ,ACCC,AElBD,AMHA,AMHA,AlCyDE,AiBjCI,Ab0BJ,A4BjDF,CZqByB,CAAzB,EDCIkB,Ef2BE3B,ESlBEzH,AbyBA,CUzBC,EGAE6C,AIRAiG,Ab0BA,CJOCpC,CmBlCC,Af2BX,Ca1BI,EJQUvF,CIRC,CAAX,CJQK,CAAH,CAAJ,AbyBI,CAAc,CazBC,GMTG,KTSV,gBSTkB,SAASiI,MAAT,AnBkC1B,CmBlC0CC,AnBkChD,EmBlCgC,EAAoBxG,CTS1B,CAAZ,EAAe,ASTG,EAA0B,mBTSvB,QAAN,EAAgBqF,KAAhB,CAAf,CAAP,EAA+C,YAAY;AAChE,AGAE,AMTJ,AnBkCD,AiBjCK,Ab0BJ,AiB/BF,IAAIoB,EjB+BE5B,EMlBEvG,CSTC,EFCE4H,EJQE,AQbA,CXaC,CAAV,AORE,EJQA,CORS3I,AHAG,IAAZ,Eb0BkB+G,EiB/BE,KFITtE,IAAR,EAAc,CAACwG,EAAD,CAAd,CAAP,Af2BwC,KiB/BR,SAASC,MAAT,CAAgBtF,GAAhB,EAAqB,CjB+BAA,GAAb,CAAxC;AMjBE,AGAC,AMTJ,AWtBD,AKHA,AlB0BK,Ab0BH,A6BnDF,AZoBE,CFEwB,CAA1B,IEFMuF,CjB+BCzC,CMlBC7B,GNkBN,GMlBYiD,AWbA,CjB+BClE,GAAb,EMlBkB7D,ANkBA,MMlBhB,QWbe6D,GAAL,CAAZ;AXcE,AGAA7C,AUdJ,ANMG,Ab0BC,AiB/BF,GJFA,CMCEyI,EFCE3E,EjB+BE,GMlBG9D,AGAA,CAAP,AQbQoI,EEDE,GbcGtE,CSTFmE,AEJGjJ,EXad,EAAkB,EWbpB,GEDyB,AnBgCd2G,IAAL,EAAW9C,GAAX,MAAoB,CAAC0D,KmBhCM,SAASkC,CnBgChB,IAAoB9C,EmBhCb,CAAiBvC,CAAjB,EAAoBG,CAApB,EAAuB,AnBgCD,QAAjD,CAAJ,EAAgE;AMjB9D,AGAH,AS7BH,ACeE,AKlBF,AMHA,AEDA,AnB4BEmE,Ab0BIpB,A4BpDN,AXqBE,MAAI+B,GEDG9E,AnBgCA+C,CMlBC,CAACS,AadA3D,CAAF,ANMGvB,Ab0BA7C,CmBhCV,AFCW,EAAX,EXaegB,CNkBX,EMlBK,CORT,CPQoBf,AORA6I,Ab0BAnC,IAAhB,CMlBK,CAAiB,COR1B,GPQS,AORqB,EPQE5G,SAAvB,CAAL,AORsC,EPQE;AACtC,AGAN,AUdD,ANMG,Ab0BC,AiB/BH,CEHyB,CAA3B,IFGMiB,GRaG,EIRE,CILC,CAAV,CRaA,CHAa,G2B7BSgK,E3B6BhB,aORWpI,MAAMC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2B,KAAKuC,GAAhC,EAAqC,KAAKqD,GAA1C,CAAR,EAAwD/F,MAAMC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2B,KAAKuC,GAAhC,EAAqC,CAArC,EAAwC,KAAKqD,GAA7C,CAAxD,CAAP;APSG,AGAN,AEPD,AoB9BA,AlB6BG,Ab0BA,AKPH,AYxBE,CRI2C,CAAtB,CAAvB,AIDE,CFGEN,ANkBA/B,KMlBK,AMNAtF,IZwBI,EYxBE8D,GEDA2E,AFCb,EAAkB,ENME,INkBI,iBMlBI,SAASpB,EAAT,CAAYC,MAAZ,EAAoBC,CNkBlD,KMlB8B,EAA4B;ALQpDvH,AKPJ,AGNF,AmB1BA,AjCyDE,ACdF,AgBjBIqI,IHAAL,AbiBAxB,EDcEX,GWzBG,AMNA7F,ChBiBC,EgBjBN,CXaS,CAAP,CQbS,CHMCuH,AXyBd,AiB/Bc1E,ERaDqE,AyBvCSoD,AlCyDN,AKPHhF,EYxBK8C,GNMG,AVWA,GgBjBGpI,EHAE,CGAR,CAAJ,CAAZ,SNMY,CAAP,IVWuB,CUXc,IGNT,MHM5B,EVWoC,CUXcuH,IGNT,GHMgB,iBAAP,EAA0BD,CVW1B,CAAC,IUXD,AGNK,CHMvD,CGNyC,EHM6C,OAAOA,GVW3C,EAAqB,EUX6BD,EAAd,CVWpC,CAAd,GUXuE,UAArB,GAAkCC,EVWlC,IajBnE,CHM4GD,AGNxI,EHMiI,CAAUE,CVWnCf,GAAT,CAAa3H,CUXqB,CAAlC,AVWA,EAAiBgF,CUXqC,MVWtD,CUX6DyD,CVWnC,KUX4B,KAAkB,UAAlB,GAA+B,UAAUlE,CAAV,EAAa;ALQ5L,AIRL,ACCI,ASTJ,ACFA,AGjBA,AMHA,AIFe,ArBgCb,Ab0BEiD,A6BvDJ,ADAA,A3ByCE,AgBjBErG,IPKAoH,AURAsB,ACFAG,KatBoByB,ArBgCf5C,CZYChF,CUXC4E,AXyBAvB,AiB/BA,CILC,AJKR,CGHS,CVQC,GTYGlE,CUXCuB,AGNH4E,ADKb,CFCS,EAAUT,CuBjCN,CAAuBnE,CAAvB,CbsBU,CDEC,AcxBe,AjC4C/B,CSZiB,ATYAT,CUXCS,CAAP,CAAV,AXyBmBpE,CWzB1B,IVWM,CDcC,ACdyB+C,GDcG,CAAnC,ACdM,CAA+B8B,KoBtBR,CDEC,CVQC,ATYzB,CAAR,MoBtBwCgF,CDECH,CVQCtB,GWVX,CAAezB,CDEd,CAAgB9G,CVQf,CAAiBkI,AURlB,ACFD,EDEqBpI,ACFAQ,CDEpB,EVQC,AURsBK,ACFxB,CDEC,CVQyB,AWVAqD,CDEC,ECF3B,EAA+B;AfmB5D,AIRF,ACCC,ASTD,ACFA,AatBA,ArBgCD,AUdD,AvBwCI,ACdA,AgBjBD,CJxB0B,EF4BwH,AE5BrJ,CUeImG,EHMEL,ACFAxI,GXUG,AwBhCA,AjC4CA,EKJE,AchBAtB,ApBkCAwH,CuBxCC,EHME1H,CdgBV,AchBO,ACFI,CDEb,CCFA,ErBoCiB,CAAf,EAAkB,GuBxCG,GtB0BrB,GSZY,eadiB,SAASqK,KAAT,CAAe5F,CAAf,EAAkB,IbcvB,CAAZ,EAAe,qBAAM,QAAN,EAAgB2D,KAAhB,CAAf,CAAP,EAA+C,YAAY;AJSjE,AIRC,ACCF,AO1BF,AEiBE,ACFA,AWtBF,AGFA,ADEI,AXkBF,AvBwCIpB,ACdA,AgBjBJ,GXGO,CAAP,EcNIiD,CCFC,CXUC5I,CadCoD,ANSAiF,EGHExJ,ACFA+H,CAAT,CrBoCWb,ACdA,AgBjBX,CPKY,AURAvG,AGNA,CbcV,AURO,CAAT,ACFcqD,EEJd,CFIA,EAAmB,KatBKO,CADjB,KlC2DuBiD,GCdZxC,CDcP,CAAP,MCdsB7E,MAAf,EAAuB,YAAY;AKH/C,AIRG,ACCF,ASTA,ACFEmB,AatBA,ArBgCJ,AUdC,AvBwCK,ACdE,AgBjBP,CXC0B,AiBZF,ANCC,CXW1B,AiBZA,ANCA,EJeI4H,IHAIjE,CURC6E,CpBkCC,CqBpCC/B,CAAP,EXUUG,AURA6B,CnBoBC/J,CmBpBN,ACFOgE,CRUC,CZYCd,CmBpBC,CVQC/C,AURA,ACFA4H,CDEX,ACFO,CAAZ,ApBsBW,CAAQ,CUXb,ASTc+B,EVQpB,CTYW,CiC5Ca,CdwBCC,ApBkCdjD,ACdc9B,CYZC,CORN,EpBkCd,CWzBUS,ASTc,CAAV,ApBkCHzB,EWzBX,AVW2B5D,CmBpBC,ApBkC5B,CWzBesE,ASTvB,CTSQ,EAAkB,AVWC,CDcA,ACdc,CDcb0C,GCdD,EAAoBlH,EYZX,Eb0BCuH,EAAT,EAAaX,CCdd,CAAd,CYZgCoC,AZYvC,CDcsB,CAAxB,EAA4C,Ma1BZ,CAAoB1H,CAApB,EAAuB2C,EAAvB,EAA2B;AHC7D,ACCA,ASTH,ACFE,ASvBH,ACAA,AGFS,ArBmCP,AuBpCF,ApC8DQsD,A4B1DR,A3B4CO,CmBxBmB,CAA1B,CcvBE,IjC6CW,CAAP,CYVG,EHAEtG,ACCA,AXyBAsG,Ea1BEoB,Cb0BC1I,GU1BG8E,CJQFgD,AiBtBAkC,ANSAb,EPKX,AV0BI,EU1Bc,AGAb,CAAc9H,CAAd,Ab0BesF,Ea1BE3C,EAAjB,Ab0BD,Ca1BN,IFCiBsB,GAAR,EAAa,mBAAIf,CAAJ,EAAOgE,MAAP,CAAb,CAAP;ADAE,ACCH,AUXDpH,AatBD,ADHD,ApBmCC,Ab0BM,ACdH,CYd0B,CAA9B,CFCE,EAEG,EAFH,EAEOmH,AUXA3B,ApBsBA,CSZCoB,GWVR,EVSA,CDCc/G,ACLd,CULeb,CDEFuJ,CVQL,CWVR,CXUmBzJ,KAAX,ATYN,CSZuB,IAAjB,EAAuBF,SAAvB,CAAJ,EAAuC;AACrC,ACCP,AUXC,AGrBF,AaPA,AFCA,AnC+DMsH,ACdA,CUnBgB,CAAtB,OUHSlG,IpBsBI,CDcC,CU1BC,AWVb,ArBoCI,Ga1BS4H,CHAP,gBTYa,UAAUzD,GAAV,EAAemC,GAAf,EAAoB;ASXlC,AWVN,ArBoCI,ACdGnC,CoB7BiB,CAAzB,UpB6BYmC,GAAJ,GUXOY,CVWIxI,GAAGgF,QAAQ4C,GAAR,CAAH,CAAX;ASXFzG,A4BxCN,AFCA,ApCiEG,ACdK,aSZK,CAAP,CTYSsE,GoBtBAuE,ApBsBP;ASXH,AV0BH,ACdK,OAHM,EDiBJvC,ACdA,EDcP,ACjBW,EAGA,KsCrDW2E,etCqDNpH,OAAL,CAHA,CAAP;ASRF,AoBrCJ,AOJA,AEDe,AJEf,AnCkEC,A4B9DD,A3BgDI,CDXJ,QuC3CwBoH,E7B0Cb,KAAP,K6B1CW,CAAsBC,OAAtB,EAA+B;A7B2C3C,A6B1C+B,ANOnB,AjC6Df,ACdM,GStBG,CAAP,AVoCE9E,KiC7DoB4D,EjC6Db,ECdE,KgC/CE,CAAmBC,KjC6DV,IiC7DT,EAA8B,EhC+C3BpL,EAAL,EAASgF,KsCtDmB,EtCsD5B,CAAP,CsCtDuCsH,AvCoEbhF,KAAR,CuCpEiB,AvCoEzC,CuCpEoD+E,QAAQE,MAAnB,EAA2B,CAACF,QAAQG,MAAR,GAAiB,GAAjB,GAAuB,EAAxB,KAA+BH,QAAQI,UAAR,GAAqB,GAArB,GAA2B,EAA1D,KAAiEJ,QAAQK,SAAR,GAAoB,GAApB,GAA0B,EAA3F,KAAkGL,QAAQM,MAAR,GAAiB,GAAjB,GAAuB,EAAzH,KAAgIN,QAAQO,OAAR,GAAkB,GAAlB,GAAwB,EAAxJ,CAA3B,CAAP;A7B2CjC,A6B1CA,ANOC,AGPF,AnC0CE,AuC5CF,C9BgC2B,CAA3B,OuBvBS,SAASvB,AjC6DH9D,KiC7DN,CAAe1E,IAAf,EAAqB;AAC1B,AhC+CH,CAd4C,CAAtB,CAAvB,KgCjCQsD,KAAJ,EAAWmF,GvBmCA/C,A+BhCSwE,CRHpB,EAAiBxB,CAAjB;AIRJ,ACAA,AHCA,AFQI,QAAIjK,SAAS,ChC+CFqG,CgC/CX;AQXJ,ARYI,QAAIxG,MAAM,CAAV;ASZJ,ATaI,QAAIqK,OAAO3I,KAAK1C,MAAhB;;AIVJ,AMHA,AVeI,AGXJ,AX4BA,Ae9BA,IJEI4L,AX4BAvB,OQjBOrJ,ARiBA,GW5BG,GHWGqK,IAAb,EAAmB,CRiBC,GW5BG,kBX4BK,GW5BG,MX4BMhB,GW5BGuB,CX4BZ,CAAcvK,CAAd,EAAiBxB,EW5Bd,AX4BH,CW5BoB0E,CAAjB,AX4BkB,EW5BEP,EAApB,EAAwB;AKH3D,AReM,AGXJ,AX4BA,SW5BO,CHWC,ARiBA3C,CAAR,iBW5BWkD,CAAJ,EAAO,MHWO7B,KAAK1B,GAAL,CAAb,CAAJ,EAA6B,KGXVgD,EAAT,CAAP,CAAP;AMJF,APIA,AFYQgC,AGXP,AX4BG,AmBlCJ,CRI2B,CAA3B,EDCIuF,KV6BK,CAAL,MQjBYN,QEZQ,IFYIC,MEZMlH,AFYAtB,EEZV,EAAc,CFYC1B,GAAL,CAAN,CAAZ,GAA+B0B,KAAK1B,GAAL,CAAvC;AEXN,AFYMoK,ARiBF,SU7BG,GFYG,CAAJ,ARiBK,KW5BEQ,OX4BU;ACJzB,AW3BA,AQJA,AVOI,AFYIT,AJMR,AJWQ,ICLJb,AGNAK,OAAO,EHME,EOZE3E,ARiBAnG,GAAGkD,GQjBG/C,CRiBN,CAAQ,CIXC,CMlBC,CTwBC,COZlB,ARiBO,CAAP,cU7ByBqE,GNkBD,CMnBvB,CTyByB,OGNOsG,EHMEL,EGNX,CAAczK,EAAd,CHME,CAAgBA,AGNA,EHMhB,EAAoB;AACpD,ASxBE,AFYI,AJMN,AJWK,OAFD,ECHG,AGNA,MINMuL,GapBSqC,CboBLtC,IAAX,EAAiB,EEZE,ETwBb,CAAL,AGNMtL,EHMEA,CGNCG,CHMT,CAAP,ESxBmCmB,ENkB5B,EAAiBtB,EMlBC,ANkBlB,CAAP,CMlB2C;ATyB5C,AiB/BD,AROM,AFYIsB,AarBK,AjB2Bd,AJWG,CCPsB,AGNF,CHMxB,AGNA,OiBzBwBsM,ArBsCf,CAAL,GU7BSzJ,CWTE,CAAeO,CXSd,AWTD,CbqBEpD,CarBgB0J,CAAlB,EAAqB,GbqBZ7K,MAAd,IAAwBgG,GEZrB,EAA0B7E,CFYCiK,CAAN,CAAxB,GEZG,CAAP;AMNN,ANOK,AFYKA,AarBR,ArBsCI,KUjCG,IWLA,IrBsCI,EQjBE,CAAL,EPYKd,AqBtBSoD,AlBgBT/C,GiB3BM,ErBsCErJ,EAAV,EAAc;AiBpC3B,AGFA,AVUI,AFYK,AarBL,ArBsCI,AmBtCR,WEAWuJ,EAAE9H,ErBsCElD,EqBtCJ,CAAO,ArBsCAkD,IqBtCP,ArBsCI,CAAQ,CqBtCCwB,CXSC,CWTCtE,CrBsCX,EAAcqB,EqBtCL,ArBsCT,CqBtCiB,ArBsCxB,GU7B2BH,CWTX,EAAcpB,GXSb,EAAkB0E,IWTnB,CXSC,AWTd,CAAP,CXS8C;AjBuBlD,A6BlCA,AZYM,AFYC,AarBJ,AlBoBH,AHkBO,GqBxCL,C5BiCE6E,AUXAkB,GKPE,ARuBA,GU3BIgB,EPWE,CKCC,GfUG,AiBtBAxH,GAAG,MPWM,IVWI,SiBtBb,EAAwB7C,MAAxB,APWiB,EOXesD,EjBsBX,GiBtBrB,CAAV,CPWoC+F,IVWIlB,CUXb,CAAemB,KAAf,EVWI,AUXkB5K,CVWC0J,CUXvB,EAA0B,CVWtB,EAAyB;AAC5DA,AmB7BF,AFOM,AFYEpI,AarBP,AlBoBC,AHkBE,AuB1CJ,MpBwBMuJ,GVWG,AOOA,CAAL,GU7BSc,EFYErK,ALDA,EOXE,KFYKnB,MfUT,AeVL,IAAwB0C,KAAK1B,ALDfyJ,CVWCjB,CAAV,AiBtBA,CFYmB,CfUN,AeVlB,CLDO,COX4B,CPWd3J,EAAd,CAAb,wBOXuD2L,GAAd,CAA9B,GAAmDA,GAA1D;AjBuBF,AiBtBC,AFYE,ALDL,AHkBI,SGlBG,EVWE,EOOE,KPPKhC,CAAP,IAAY,AOOAlI,EAAV,EAAcC,EAAd,EGlBGkJ,AHkBe,EPPpB,GAAyBjB,AUX3B,CVWE,CUXY,EVWiBF,UAAUE,AUXf,CVWK,CAApC;AACD,AMNH,AWzBS,AFqBHxI,ALDF,AHkBI,AwB5CR,G/BmCS,AiB7BP,CXyBEiJ,CNMCV,IAFI,CAAP,CUTS,EKCE,CAAP,CRiBS1J,CDbC,ECaEkD,IAAH,CAAQ,IAAR,EDbc,ACaAzB,EAAd,EAAkBC,EAAlB,CAAP,WGlBe,GJKc,SAAS0I,OILnBS,EJKU,CAAmBhD,GILjC,CJKc,CILF3H,CJK2BI,GAAzB,EAA8B0D,GAA9B,CILQ,CJK2B,AILrC,CAAZ,CAAZ,EAAuCjB,MAAMC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BhD,SAA3B,EAAsC,CAAtC,CAAvC,CAAP;AVYF,AMNA,AWhBD,AFYI,ALDF,AHkBI,CUxCP,EPoBS,CAAP,EJOI2H,CCWA,EPLG,EMNE1H,MAAL,C0BJkBgO,I1BIF,CAApB,EAAuB,MNMT,qCAAY,CAAZ,EAAe,qBAAM,QAAN,EAAgB,sBAAOzE,IAAP,CAAhB,CAAf,CAAP,EAAsD,YAAY;AACvE,AMNA,AqB9BJ,AZ0BI,ALDH,AHkBG,AuB7CJ,CpBsByB,CAAzB,MVgBQ5G,COOC,CAAL,CDbOxC,ASJAgB,GTIP,CNMWpB,EeVX,OfUA;AACA,AMND,AuBhCH,AZgBA,AFYG,ARiBG,AyB/CN,GjBSE,CESE0L,OjBsBO,EOOE,EU7BE,GPWAjB,KHkBQlJ,CU7BCoK,CV6BX,EAAcnK,EU7BZ,AV6BF,CPPE,AiBtBeyC,CV6BCxC,CU7BhB,CV6BF,CU7BqB,CV6BC,KPPV+C,CAAV,EAAa;AACtB,AMNJ,AQDF,AMZA,AHHE,AFYD,ARiBO,A0BhDR,AFCA,IjBiCIxB,AMZAgJ,EdaE/K,AWhBA2K,KHeK,CRCCjE,AcbA,AHHA6D,CjBsBC,EOOE1L,EDbE,CAAL,ACaMkD,CDbhB,GCaa,CAAQ,COdC,CMZC,Eb0BV,EAAczB,CU7BC0C,CV6Bf,CU7BH,CAAV,AV6B+BzC,CPPdgD,CAAN,AOOE,EPPO5B,AOOenB,EAAtB,CAAP,CPPK,CAAP,GcPwB,CMZG,QNYMuB,CMZGgJ,GNYZ,CAAclM,CMZX,CNYH,AMZkBmM,ENYA,CMZf,EAAoBrH,GAApB,EAAyBqB,KAAzB,EAAgC;ApBoB5D,AMNH,AQDA,AMZA,AGVa,ANOb,AV6BK,KPTI,CMJL0B,AcbAsE,CpBmBCzC,AOKD,EOZG1J,AStBe+M,ANOf,EjBoBE,AMJA5M,CNIP,AcLQC,AMZA0E,GAAV,AGVa,CAAgBqB,CjBuBzB,AQDG,AMZQ,CNYC,AoBRMoI,E5BSJ,CAAlB,AiBvBa,CTsBN,CRCc,AiBvBevB,CTsBdjK,MAAMC,AStBf,EAAgCiK,KAAhC,ETsBS,AStB8BC,CTsBdjK,GStBzB,ETsBS,AStBoC,CTsBdC,IAAtB,CAA2BhD,SAA3B,EAAsC,CAAtC,CAAf,CAAP;AdQC,AMNC,AQDH,AMZG,AGVF,ANOE,AV6BA,COhBoB,CAAxB,CdIS,CAAP,EuBxBIiN,EjBuBE9C,CCaC,Ca1BC,Ab0BN,GgBpCS,CHUClI,IdaI,CAAC,AcbT,CAAU,EGVEgL,GNOG,CMPZ,CAAcC,WAAd,EjBuBYpJ,AiBvBe,ENOPQ,CXgBd,CAAD,EWjBT,EXiBwB,mBAAKrD,GAAL,EAAU6C,GAAV,CAAf,GAAgCA,CcbxC,CAAN,EdakD7C,GAAJ,CAAhC,GAA2C,yBAAW0G,KAAK,CAAL,CAAX,IAAsB,EAAtB,GAA2B,EAApF;ANOH,AMNGvH,AcbD,AczBH,AXeI,ANOA,AV6BE,AyBlDN,ChCiC6B,CAA7B,MuBnBQ2E,EjBuBEmF,GCaG,CgBpCC4C,ITsBC9J,AqBHSsL,E7BIJzL,EiBvBE5C,ChBoCCsB,EAAV,CDbauB,CWhBC,AV6BAtB,CgBpCvB,ChBoCS,EAAkBC,EAAlB,EDbO,ACaeC,CDbCqB,CWhBC3B,AV6BxB,EAA0B,EDbnB,CAAsB4B,CWhBf,EAAkB,CXgBzB,CAA2B2E,IAA3B,EAAiC,CAAjC,CAAV,EAA+CvH,GAA/C,EAAoD+J,OAApD,CAAN;AACD,AMNH,AQPE,AGVE,ANOE,AV6BE,A0BnDR,AHEA,ACDA,InB+BIU,IWjBI5J,CHUCgF,EROE,EKVE2F,CMPC,CAAV,AhBoCW9L,Ea1BEmM,AHHA,CjBsBF1C,AOOGvG,Ea1BT,Eb0BM,Ca1BQiJ,Ab0BA,CKnBC,EQPf,Cb0BM,Ea1BchG,Ab0BA1E,EAAd,EAAkBC,EAAlB,Ea1BsBoD,Ab0BAnD,CU7BxB,CV6BE,Ca1Bc,AHHWL,CV6BCM,Ea1BEkD,Ab0B5B,CAAP,CKnBwB,CQPH,AHHhB,CAAP,EGG2CqB,KROR4E,AQPvC,IRO8B,CAAcrG,CAAd,EAAiBsG,CAAjB,EAAoB;ANOlD,AMNA,AQPD,Ae3BD,AZiBI,ANOC,AV6BE,Ca/BkB,CAAzB,GHFS,CXoBH,CCWA,EKjBG,EWjBE7J,MAAM8D,CajBOyJ,EbiBpB,EAAkB,SjBuBLvN,GAAX,CMNeuD,CAAZ,GNMgB,CMNC,SAASuG,KAAT,GAAiB,KNMTjH,GAAT,CAAvB,EAAsC;AACpC,AMNA,AWjBE,ANOF,AmBzBW,A7BsDX,QDbIsG,C8BzCgBoE,A7BsDf,CgBpCCvI,AhBoCN,CKnBOzB,EAAEtE,CNMC,C8BzCC,CAAgBsE,C9ByCd6F,A8BzCF,CxBmCJ,AQPI2B,CROI,AwBnCelB,CbkBdgC,AalBL,EAAsB,C9ByCvB,AMNH,CNMahJ,CMNC9D,AKVA,EXgBX,CAAV,AiBvBwBiB,GAAR,CAAd,EXiBK,AWjBuB,CNOCG,ILUI0J,EAAE5K,AKVhB,EAAkBwE,GLUJ,CAAQ,CKVtB,EAAyB,CLUX,EAAc1E,SAAd,CAAnC;ANOAoK,AMND,AsBnCH,AXkBQ,ANOF,AmBzBJ,A7BsDI,AyBrDN,GpBgCS,GAEH,ENMEnJ,C8BzCC,E9ByCL,EWhBS,AV6BA,CU7BC,CXgBCb,AiBvBA2M,GjBuBX,A+BnBoB4B,GdJH1N,AalBA,E7BsDEM,CgBpCR,CAAP,AhBoCK,EAAcC,EAAd,EAAkBC,EAAlB,EAAsBC,EAAtB,EAA0BC,EKnBvB6C,AKVWE,AV6Bd,CKnBP,CLmBqC,CKnBxBoG,CAAb,CAFJ,AKRY,CAAD,GAAuB,sBAAQc,GAAR,EAAaxK,MAAb,EAAqB,CAACsD,KAAD,CAArB,CAAvB,GAAuD,sBAAQkH,GAAR,EAAaxK,MAAb,EAAqBsD,KAArB,CAA9D;AXiBF,AMNH,AWjBM,ANOF,AmBzBD,A7BsDI,CKvBgB,CAAxB,MwB/BQ+J,G9ByCGrE,GAAP,A8BzCU,C7BsDCtK,G6BtDX,A7BsDckD,IAAH,CAAQ,IAAR,EAAczB,EAAd,EAAkBC,EAAlB,EAAsBC,EAAtB,EAA0BC,EAA1B,EAA8BC,EAA9B,CAAP;ADZL,A6B3CH,ANWe,ANSTV,ANDG,AmBjBL,A7BsDG,A8BzDP,Af2BA,GhBaE,AWpBA,CKOE0L,Gf4BE,EDXG,AuBhCegB,EOTbnJ,AdwBA,ECNE,AalBAtE,CbkBP,IXiBS2K,A0BDS+D,AFlCb,CAAQH,GAAR,EPSI,AOTSzO,AdwBA,COfgB4N,QOT7B,EPSI,AOToBc,EPSiB5O,EAArC,AOTJ,CAA6B,CPSgB,IPexB,KcxBkBuE,CAAV,EAAa,CdwBZsI,IAAT,CAAcvM,GAAd,EAAmB;AhBkB/C,AmBvBJ,AITE,ANSG,ANOJ,AmBzBK,A7BsDF,A0BvDJ,AFCA,ATwBE,CLVF,GQIIkN,KITK,AtB6CA,Ae9BAlN,Cf8BL,CDbO,E8BzCE0K,EAAE9H,EXkBE,AHMA,EcxBJ,CAAOyL,CPSC,APeZ,EcxBI,CdwBW,CcxBCpK,CAAZ,CAAP,GXkBwB,AHMrB,EhBiBQpD,CgBjBgBb,EhBiBtB,EAAWA,GAAX,CgBjB8BwM,ChBiBd9I,GAAhB,CAAP,IgBjB6B,CGNK,EHMe,OGNNwJ,IHMd,GAAkC3J,GGN7B,CAAoB4J,GHMgBzK,CGNpC,EAA0B,MHMG,CAAiBc,QAAjB,CAA0BZ,IAA1B,CAA+B5C,GAA/B,EAAoC2C,KAApC,CAA0C,CAA1C,EAA6C,CAAC,CAA9C,CAAjE;AhBkBC,AmBvBD,AavBF,AzB4CA,AgB9BI,ANSA+J,AalBC,A7BsDC,AmBtCN,AMlBA,AV0BC,CAFuB,CAAxB,ETiBI9B,AavBAwC,CUlBO,CAAP,EPWIvN,CJSC,CCFC,EbuBE,AUrBAgB,ChBoCC,IsB7CIjB,CUdO6O,AhBuBN,CEACjP,AFAf,CEAK,EAAaa,CAAb,AFAcwF,AhBoCA1E,AmBtCA,EDEE,AZqBA,ANeZ,EsB7CctB,AtB6CAuB,CgBpCvB,ChBoCS,EAAkBC,EsB7C3B,AtB6CS,EAAsBC,EAAtB,EAA0BC,EAA1B,EAA8BC,CmBtCZ,CnBsClB,CMfoB,CNec,MmBtCP4L,EbuBExC,CavBX,CAAapL,CAAb,EbuBE,AavBc,CbuBCE,EAAf,EAAmB;APGnD,AmBvBG,AZqBF,A0B7Ca,AVeX,ANSAiN,AalBD,A7BsDK,AmBtCN,CpBS2B,CAA7B,C8B9BE,KPcM9M,ChB8BC,A0B7Ce4O,AbsBf,CHEC5N,AGFArB,CDEC2N,ACFT,InBsCazN,CkBpCCF,AFAA,CEAL,AFAP,CNOW8L,AV6BG1I,Ae9BH2J,CGNIlM,AITA,CJSR,AITP,CNSiByM,CMTC,AtB6CP,CAAQ,CkBpCC,CAAC,CAAd,CcxBI,AhC4DA,CgC5D4BrH,CdwBd0H,AlBoCAhM,EMfbzB,ANeD,CgC5DA,AhBwBX,ChBoC6B0B,CkBpCCf,AZqBfR,A0B7C8B,CdwBpB,AlBoCd,EkBpCsBL,AlBoCA6B,CkBpCR,ClBoCd,CMfN,CNegCC,CkBpCC,AZqBf5B,CYrBE,AlBoCd,CMfN,CAAP,ANe2C6B,CkBpCC,CAA1C,AlBoCW,EAAkCC,EAAlC,CAAP;AiBpCR,ACCG,AStBH,ACDA,AtB4CC,A0B7CC,AVeI,ANSF,AalBH,A7BsDM,AmBtCN,AWtBD,CxB2CyB,AavBF,CbuBvB,AavBA,CDEE,CDCEyL,EevBE1K,ChC0DA,EgBlCG,GCDG,CevBC,AVeA7C,ANSA4H,EgBxBX,ChBwBE,CMTE,CvBgCSwC,AkChDS6E,EjByBJ9I,KCDK,ADCrB,EAAuB,mBCDM,SAASoH,KAAT,CAAepH,KAAf,EAAsB;AACrD,ACCD,AcxBC,AVeG,ANSCiH,AiB1BS,AjC8DX,CkBxC0B,CAA9B,IcpBMnH,GfuBGE,AgBzBe8I,AjC8Df,CgC5DP,AhC4DE,QiBrCc,AXsBH/D,AUrBGtD,AGFH8F,GHET,CCDG,AgBzBM,CAAuBD,EjB0BbP,CCDC,CgBzBX,EAA6B3I,CAA7B,EjB0BiBwI,AiB1BelK,ChByBdsD,GgBzBlB,EAAsC,ChByBdoH,ADCApH,KCDb,CDCmByB,GAAN,CCDU,ADCjB,EAAmBoF,OAAnB,CCDvB,CDCmDC,ECDE9G,GDC9B,EAAmC,CCDCoH,GDCpC,CAAP,CCDqC,EAArD,ADCkEpH,GCDG,GDCGyB,GAAN,CAArE,cCD+EzB,KAAP,EAAc,EAAd,EAAkB,EAAlB,EAAsB,IAAtB,CAA5E;AACD,AczBD,ACEE,AVeE,ANSC,AiB1BH,AjC8DI,CiBvCmB,CAAzB,IgBvBMhF,EXiBE6C,CUfC,CAAC,CAACiC,CCFC,CAAV,AjC8DW,CsB7CC/F,IJSCsN,AcxBGzH,AEHMmJ,KFGDjJ,AhC4DAxE,CsB7CCtB,CtB6CX,EgC5DK,AhC4DSuB,EgC5DjB,AhC4DG,EgC5DkBwE,AhC4DAvE,EsB7CE,AtB6CpB,CsB7CC,CUfZ,AVeE,AtB6C+BC,EgC5DE,AhC4DxB,EAA0BC,EAA1B,EAA8BC,EAA9B,EAAkCC,EAAlC,EAAsC;AYnCnD,AoBxBIc,AVeA,ANSA,AiB1BF,ACFa,AlCgEP,IYpCJmJ,EqB1BE/G,GDEG+J,AEJeE,EZmBb,ANSA9B,CJAC,AqB1BAvK,CDER,CAAUoD,ChC4DCjG,EiC9DEG,ChByBFoN,AjBqCGrK,CgC5DCiD,GhBwBf,AkB5BW,AlCgEA,CiC9Db,ACFoCzB,AlCgEf,CgC5DnB,AEJW,CtB4BU,CsB5BgB,ClCgE1B,EAAcjD,EAAd,EAAkBC,CsB7CbsC,CtB6CL,EsB7CJ,AtB6C0BrC,EAAtB,EAA0BC,CsB7Cb,CtB6Cb,EAA8BC,EYpCX,AZoCnB,EsB7CoBmC,AtB6CclC,EAAlC,EsB7CwBgM,AtB6Cc/L,EAAtC,CAAP,IYpCuC,GUTZ,CAAP,KAA2B,UAA5C,GAAyD/B,GAAGI,GVSV,CAAC,CUTM,CAAS,IAAT,EAAeF,SAAf,CAAzD,EVSkD,CUTmC8D,CVSZ,GUTgB8J,IVSvC,CAAd,KUTiD,EAAgB1N,KAAhB,CAAsB4D,GAAtB,EAA2BjB,EVSpB,IUT0BC,KVSjBgJ,IUTW,CVSpB,AUToC/I,CVSrBjD,EAAf,EAAmBiM,AUTC,CAAsB/I,IVS1C,AUToB,CAA2BhD,CVSrB,QUTN,EAAsC,CAAtC,EAAyCC,SAAS,CAAlD,CAA3B,CAA5F;AVUF,AoBxBC,AVeA,ANSA,AkB5BD,AlCgEK,AyB5DP,AKHA,GRWE,ANCA,GJeI,CZkCA,MYlCO8L,KAAP,KAAiB,UAArB,EAAiC;AAC/B,AuB9BJ,AHME,AVeD,ANSC,AiB1BA,ACFA,AlCgEE,MkChEEkD,GFIGtM,ACFA1B,AjC8DA,CgBpCC,AhBoCN,CYpCO,EoBxBT,CEJYiO,CDECnK,GAAb,EAAkB,CrB0BCV,AsB5BAG,CtB4BV,AsB5BG,EtB4BU,AsB5BAyK,KAAV,ClB4BChJ,AkB5Be,KlB4BpB,CAAR,WkB5BY,CAAZ;AtB6BI,AgB3BN,AIGC,AhBwBG,AiB1BA,ACFF,AlCgEI,QiC9DEsH,CjB0BC,AkB5BA0B,ItB4BInP,AqB1BAuE,AjC8DA,CiC9DL,ErB0BQ0H,AqB1BApJ,CjB0BZ,CoBEoByM,AF9BN,GDEGnO,CrB0BCoD,AsB5Bb,CtB4BO,AZoCO9C,CYpCV,AqB1BG,CAAR,ACFiB,AlCgEZ,CYpCa8C,AqB1BtB,CrB0BS,AsB5BJ,AlCgEkB7C,CYpCrB,AqB1BsB,CjC8Df,CkChEiByN,ClCgECxN,EAAlB,EAAsBC,CkChEC,CAAN,AlCgEjB,CkChEX,ClCgEqCC,EAA1B,EAA8BC,EAA9B,EAAkCC,EAAlC,EAAsCC,EAAtC,EAA0C;AYnClD,AQPL,AJOM,AiB1BA,ACFL,AlCgEO,IoB3CJ2L,CRKA,QIESR,AiB1BA,EjC8DEnN,EoB3CE,AanBX,CjB0BY,AhBoCAkD,EgBpCL,CAAP,ChBoCS,CAAQ,IAAR,EAAczB,CoB3CC,CpB2Cf,EAAkBC,EAAlB,EAAsBC,EAAtB,EAA0BC,EAA1B,EAA8BC,EAA9B,EAAkCC,EAAlC,EAAsCC,EAAtC,EAA0CC,EAA1C,CAAP,IoB3CR;ARQG,AmB9BH,Af8BI,AiB1BC,AGPL,ApCqEO,A8BlEP,O9BgEM,EgBlCG,OAAL,EIPW2L;ARQb,AyBlCF,ArBkCM,AiB1BFxM,AjC8DA,SYpCK,AZoCA,CAAL,CiC9DO,CAAP,CjB0BSgM,KAAK,EAAL,CAAP,YJAa,KAAV,EAAiB,mBAAInN,EAAJ,EAAQiM,KAAR,CAAjB,CAAP;AACD,AIAG,AiB1BD,AjC8DG,CY3CyC,CAAtB,CAAzB,MIOS,IhBoCI,EgBpCT,GsBjCoBuE,KtCqED/O,EAAV,EAAcC,EAAd,EAAkBC,EAAlB,EAAsBC,EAAtB,EAA0BC,EAA1B,EAA8BC,EAA9B,EAAkCC,EAAlC,EAAsCC,EAAtC,EAA0CC,EAA1C,EAA8C;AmCrE3D,AnBkCM,AiB1BJ,AjC8DM,SiC9DC,IjB0BI,CiB1BX,CjC8DajC,EgBpCEqN,CJAFrB,AZoCG9I,GgBpCL,CAASiD,AhBoCP,CAAQ,IAAR,CgBpCamH,ChBoCC7L,EAAd,EAAkBC,EgBpCX,AhBoCP,EgBpCF,AhBoCwBC,CgBpC/B,ChBoCS,EAA0BC,EAA1B,EAA8BC,EAA9B,EAAkCC,EAAlC,EAAsCC,EAAtC,EAA0CC,EAA1C,EAA8CC,EAA9C,CAAP;AgBnCJ,AiB1BH,AGVD,AEDA,AtCyEO,OAFD,EgBlCG,QAAL,CuBnCoB0O;AFDxB,ArBqCM,AhBoCF,SAAK,EAAL,EgBpCS,2BAAaxK,KAAb,CAAP;AACF,AuBvCJ,AvC2EM,A8BtEN,a9BsEa,KwC3EWyK,KxC2EDnP,EAAV,EAAcC,EAAd,EAAkBC,EAAlB,EAAsBC,EAAtB,EAA0BC,EAA1B,EAA8BC,EAA9B,EAAkCC,EAAlC,EAAsCC,EAAtC,EAA0CC,EAA1C,EAA8CC,EAA9C,EAAkD;AgBnCzD,AwBxCS,AxC4EP,AuBjDR,IAAIe,KiB3BoB2N,GjB2BZ,CPaCzK,EwBxCE,AxC4EAnG,CwC5EgB6Q,CAAhB,CxBwCT,AhBoCY3N,CwC5EgB,GxC4EnB,CAAQ,EuBjDE,EvBiDV,EAAczB,EAAd,EAAkBC,EAAlB,EAAsBC,EAAtB,EAA0BC,EAA1B,EAA8BC,EAA9B,AuBjDmB,EvBiDeC,EAAlC,EAAsCC,EAAtC,EAA0CC,EAA1C,CuBjDgC,CvBiDcC,EAA9C,EAAkDC,EAAlD,CAAP,sBuBjDuD,OAAhB,EAAyB,SAASe,KAAT,CAAe8K,SAAf,EAA0BC,OAA1B,EAAmCnL,IAAnC,EAAyC;APG/G,AoB5BF,AIDE,ACDF,AzC6EO,AuBjDL,MiB3BIiO,CxC0EA,EuB/CG/N,MAAMC,CiB3BC6N,EAAEE,MjB2BT,CiB3BO,AjB2BS9N,CiB3BC,IjB2BjB,CiB3BO,AjB2BeC,EiB3BE,EjB2BxB,CAA2BL,GiB3BpB,CjB2BP,CiB3BgCkO,CjB2BChD,MiB3B1B,CAAiC,EjB2BxC,EAA4CC,GiB3BrC,EAA0C,EjB2BjD,CAAP,EiB3Bc,EAAiD;AxByChE,AwBzCe,AxC6EZ,AuBjDH,CAF8C,CAAtB,CiBzBtB+C,AjByBH,OiB1BgB,CACL,KADK,EACE,KADF,EACSA,OADT,CACiB,KADjB,EACwB,KADxB,EAC+BA,OAD/B,CACuC,KADvC,EAC8C,KAD9C,EACqDA,OADrD,CAC6D,KAD7D,EACoE,KADpE,EAC2EA,OAD3E,CACmF,KADnF,EAC0F,KAD1F,EACiGA,OADjG,CACyG,KADzG,EACgH,KADhH,CAAd;AFCa,AtC6ET,SsC7EkBP,GtC6EZ,IAAIrO,CsC7ED,CIFSyP,AJES/O,Af4BlBI,GvBiDH,CsC7EG,AtC6EO,EsC7EiBnD,CAAxB,EAA2BqB,GAA3B,EAAgC,iEtC6EnC,CAAN;AqC5EN,AKHe,AJGb,AECA,ACDF,AzC8BE,IyC9BE6P,EHAEP,GIHkBmB,AJGtB,AECO,CCDC,CHACvK,IAAT,AECayJ,ICDIE,CCHJ,CAAqBtM,CAArB,ADGL,CDCaqM,ACDAvP,CCHgB,ADG7B,EAAgB,IDCX,CAAgB,IAAhB,EAAsB,KAAtB,CAAN,GAAqC,GAA5C;AEHA,AHCa,AHCf,AECE,AECD,ACDC,AzC6ED,CAjDuB,CAAxB,O0C/BS,AHCemP,AEEf,CAACnP,IAAI,EAAJ,EFFK,AIFSqQ,CJEU/R,AEEf,CFFJ,CGDM,CHCgB+C,AEE3B,GAAe,CFFV,CEEN,CFFkC,GEEZrB,CAA7B;ACFE,AHCF,AIHa,ALKb,AGAD,AfsBD,CexBA,GfwBI4M,EYtBE,GCFG,AIHeyD,EDEb,CAACnN,CJGC7B,CIHCzC,AhByBA,EiB3BC,CAAiBJ,CLKd0Q,AtC6EHlG,C0ChFH,ACFG,CDEK,CCFgB3H,GDExB,CCFG,ALKT,CIHoB3C,CCFgB,AjB2Bf,GYtBG,ECFZ2C,GGDN,CAAR,AHCK,EAAe/C,CAAf,CDEP,CCFyB,CAAlB,ADEiC,KCFT,CAA/B,AbwBiC,SAASsO,OAAT,CAAiBvL,IAAjB,EAAuB;AgBxBvD,AHCF,AIHC,ALKE,AZsBF,GgB3BA,GCAI1B,GjB2BG,GiB3BG,ALKA,CKLV,KCDsB2Q,CNMLhS,CAAf,aZsBe+C,IAAV,IAAkBA,KAAKwL,KAAL,CAAW,EAAX,EAAeD,OAAf,GAAyBE,IAAzB,CAA8B,EAA9B,CAAlB,GAAsDvL,MAAMC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BL,IAA3B,EAAiC,CAAjC,EAAoCuL,OAApC,EAA7D;AgBxBD,ACFC,ALKI,AMPS,AHOf,AfsBC,CAF0B,CAA3B,EepBI6C,EELEhM,GCFkB6M,ENOb,CKLCjP,KAAK1C,CCFF,CNOT,AMP4BoE,AHOf,CGPJ,EAAsB,CDEnC,GFKwB8I,KAAKrK,SAAL,CAAekO,WAAtB,KAAsC,UAAtC,GAAmD,SAASD,YAAT,CAAsBE,CAAtB,EAAyB;AdoBhF,ASvBf,AODE,ALKM,AMPN,AHOA,AjBuBF,IAAIlD,EmB5BE3M,GhBwBkBiN,AiB1Bf1K,AHOAsN,EAAED,AjBuBA,CcvBCpR,GKLG,ChBwBA,AiB1BCkD,CDEd,CLKgB,AZsBHoL,CCHmB,AWnB1B,EAAa,CGAZ,EAAP,AjBuBsB,CoB9Bf,CAAiBtK,QAAjB,CAA0BZ,IAA1B,CAA+BqB,CAA/B,KpB8BwB,CoB9Bc,YpB8BD,KoB9B5C,yBpB8B4D,MAAhB,EAAwB,aAAa,qBAAM,CAAN,EAAS2J,QAAT,CAArC,CAAtB,CAAxB;AGHE,AWnBQ,AMPT,AHOA,AITD,CJOmB,GAEf,EdmBEhO,OcnBO+Q,GdmBG9Q,EHID8N,IGJT,GcnBF,CAAsBkD,CdmBC,AcnBvB,CdmBF,CcnB2B,CdmBC;AAC1B,AgBxBF,ALKQV,AGAR,SELOtP,AFKAgQ,CdmBC,CcnBCC,GdmBGjP,CgBxBC8C,CLKC,EKLd,ChBwBQ,CAAU,AgBxBA,ALKAnF,CAAV,IGAD,KAAqB,GAArB,GAA2BkR,IAAIG,EAAEE,WAAF,KAAkB,CAAtB,CdmB1B,AcnBD,CdmBL,EcnB2D,GAAtD,GAA4DL,IAAIG,EAAEG,UAAF,EAAJ,CAA5D,GAAkF,GAAlF,GAAwFN,IAAIG,EAAEI,WAAF,EAAJ,CAAxF,GAA+G,GAA/G,GAAqHP,IAAIG,EAAEK,aAAF,EAAJ,CAArH,GAA8I,GAA9I,GAAoJR,IAAIG,EAAEM,aAAF,EAAJ,CAApJ,GAA6K,GAA7K,GAAmL,CAACN,EAAEO,kBAAF,KAAyB,IAA1B,EAAgCC,OAAhC,CAAwC,CAAxC,EAA2C1O,KAA3C,CAAiD,CAAjD,EAAoD,CAApD,CAAnL,GAA4O,GAAnP;AdoBC,AmB9BH,AHMI,ALKM,AGAT,AhBiBc,CgBrBf,OEDQjD,ClBsBgBmO,EkBtBbtL,ElBsBI,GkBtBC1B,AlBsBe,CajBdA,EKLN,CAAH,CAAJ,EAAmB,ALKA0B,KAAK1C,MAAlB,EAA0B;AXoBlC,AS1BF,AOEMmB,ALKM+F,AbiBV,MAAInH,GEEG,IgBxBIoB,GlBsBGnB,GajBG0C,CKLC1C,ElBsBd,EEEQC,AWnBUe,EKLlB,CLKa,AbiBQ,CajBf,AbiBV,CEEO,CAAW,AgBxBU0B,AlBsBA,IEErB,CgBxB0B1B,ChBwBT,EgBxBI,CAAxB,oBhBwB4BjB,SAAR,CAAjB,CAAP;AACD,AgBxBI,ALKO,AOZZ,ApB6BI,AsB9BJ,UtB8BU,IAAIiC,EajBEkF,EGAD4J,ChBiBL,CAAU,KajBK,CAAT,IAAc,IAAI5J,IAAJ,KAAaoJ,GAA/B,EAAoC,SbiBtC,CAAN;AkBrBAtP,ALKU,AbiBX,WkBtBQ,CAAP,MKFoBiR,GVOHjR,GAAP;AQbd,AHSG,ALKU,AbiBX,SAAO,qBAAOjB,UAAU,CAAV,EAAaC,MAApB,EAA4B,sCAAcD,UAAU,CAAV,CAAd,EAA4B,oBAAKA,SAAL,CAA5B,CAA5B,CAAP;AW1BF,AOKE,ALKUiB,AUhBZ,AvBiCC,AKVc,SaZNG,AbYeuN,KAAT,CaZb,EbY8B,EQPb,CAAP;AKJX,ALKU,AROT,AiBvBF,AEDA,MnBwBM3O,UAAUC,MAAV,KAAqB,CAAzB,EAA4B;AKC9B,AGPU,ARON,IKAAkP,MLAM,IAAIlN,EKAE,CGPC,CAAC,CAAR,AROA,CAAU,SKAS,qBAAQ,QLA3B,CKAoCkN,ALA1C,SKAiC,CAAmBvP,CAAnB,EAAsBa,CAAtB,EAAyB;AezB9D,AJEA,AXwBE,AGPO,AOhBT,AfuBG,IevBCoR,KPKI,KOLM,CPgBC,IAAIjS,MAAMA,CAAV,COhBY,CPgBC,WOhBW;AjB+BxB,AOPb,AGPQ,AUnBV,AHGE,AfuBA,MKAIA,GPOkB0O,AEPf,EevBEuD,CVuBCpR,CAAV,EAAa,EPOA,CiB9Bb,CAAiB+D,CjB8BgB,AiB9BjC,EAAoBP,EAApB,EAAwB,IfuBVjE,UAAU,CAAV,EAAaC,MAApB,EAA4B,uCAAeD,UAAU,CAAV,CAAf,EAA6B,oBAAKA,SAAL,CAA7B,CAA5B,CAAP;AFQA,AuBnCF,AhB4BI,AGPM,AOhBN,AfuBH,AiB1BD,AEDA,MrBkCMA,GiB9BGiE,EAAL,GAAUA,EjB8BEhE,AiB9BZ,CPgBagB,KVcX,CUdiB0B,IVcI,CAAzB,AUd0B1C,EVcE,IUdpB,EAA0B;AVehC,AOPA,ACrBJ,AEcYkH,AOhBR,SAAK3C,CjB8BC,AiB9BN,GAASA,CjB8BCvC,AiB9BV,KjB8BM,AUdSU,CVcC,IUdI1B,GAAL,CAAP,iCVcF,CAAN;AACD,AsBpCH,AEDA,ANGA,AX2BI,AGPQ,AOhBT,WVuBQrB,KGPK,CHOC,CAAN,IAAW,CGPCuH,GHOGvH,CAAJ,AGPN,KHOgB,AGPA,IHOIa,CAAhC,GGPY,IAA4B0G,SAASA,IAAzC,EAA+C;AVezD,AOPC,AGPW,AUtBd,AHME0K,GVmBA,GPWIvN,GOPG,CUvBCxB,GjB8BGD,MAAMC,AiB9BjB,CAAkB,CPgBC7B,GAAP,IVcD,CAAgB8B,KAAhB,CAAsBC,IAAtB,AiB9BX,CjB8BsChD,GiB9BG,MjB8B9B,CAAX,UiB9BiDsE,IAAjD;AjB+BA,AuBtCF,AEDA,AlBgCI,AGPS,AOhBXuN,MjB8BItD,IiB9BIzL,GjB8BGwB,KAAKJ,CiB9BhB,CAAkB,CjB8BP,EAAX,kBiB9BA,IAA2C,iBAAQ9C,MAAnD;AjB+BA,AGHa,AIJX,AGPQH,AOhBV4Q,SjB8BO,AGHejD,Cc3Bd9L,CVuBClD,MJII,AIJEA,CAAN,CGPQ,AOhBjB,Cd2BiC,AOXvB,AOhBQ,EVuBEa,MAAMA,CAAxB,GPOa,OiB9Bf,IAAyC,OjB8BlBP,GiB9B4BkB,EjB8BpC,CAAc,GiB9BY,CjB8B1B,CiB9B4CsD,CjB8BxB,IiB9BM,EAAyB,8BjB8BpBJ,IAAX,CAApB,CAAR,EAA+CiK,IAA/C,CAAP;AACD,AGHC,AmBpCF,AEDA,AEDA,ARIA,AX8BG,AGPQ,AOhBP,AEPJ,AEDA,MlBmCMvO,Kc3BK,Kd2BKC,Ac3BAuE,CAAL,CAAOE,Id2BZ,Cc3BK,Id2BgB,Ac3BA,Cd2BzB,EAA4B,Ec3BET,EAAL,CAAQ,mBAAR,EAA6B7C,MAA7B,EAAqCsD,KAArC,CAAhB,GAA8DtD,MAArE;Ad4BA,AMXJ,AFOC,AGPS,AUzBV,AHSG,CVa0B,CAA7B,CUfE,CRkBEyO,MNWM,GMXG,CNWC5N,GOXG,CAAC,CPWR,AOXA,CPWU,MMXM,qBAAQ,SAAS4N,KNWjC,CAAN,AMX8B,CAAgBjQ,CAAhB,EAAmBa,CAAnB,EAAsB;ANYrD,AoBtCH,AEDA,AEDA,AlB6BE,ACAO,SDAA,SFOM0O,aEPEvP,CAAR,EAAWa,CAAX,EAAc,EAAd,EAAkB,EAAlB,CAAP;ANYA,AMXD,ACAO,AOhBN,CRcwB,CAA1B,ONaS,Ac3BAoR,OAAP,Sd2Ba3R,KAAN,CAAY,IAAZ,EAAkB,uBAAQF,SAAR,CAAlB,CAAP;AACD,AmBvCD,AEDA,AEDA,ARIA,AR0BQ,AOhBP,AWfD,CXG2B,EAA3B,YP4Be2C,GDAAkN,ECAKW,OAAL,CAAa5Q,CAAb,EAAgBqB,GAAhB,CAAP;AU3BR;AGDA,AIFA,AnBkBA,AEcM,AOhBN,AYjBA,IZiBI6Q,KTEKzC,MSFM,YTEf,CAA4BC,ASFA,STE5B,EAAuCC,SAAvC,CSFoC,CTEcC,MAAlD,EAA0DC,ASFbqC,MTE7C,EAAkE,ASF9B,CAAkBtN,CAAlB,EAAqBP,EAArB,EAAyB;ATG3D,AEcI,AOhBJ,MTEIrE,GSFG,CTEC,CEcC,EOhBEiS,MPgBP,COhBG,CAAYrN,CAAZ,EAAeP,EAAf,CAAP,gBTE2BqL,SAAnB,CAAR;AchBF,AGDA,AKHA,AZMA,AVeE,AEcI,AOhBL,AWlBD,CXgB4B,CAA5B,ITIM7O,IAAI,CEcC,SAAL,uBFduB8O,SAAnB,CAAR;AEeI,AU/BN,WV+BW,OOhBIuC,GPgBT;AahCN,ACAA,AEDA,ACDA,AIFA,AvBuBE,AEcI,AmBpCN,WrBsBWpC,AEcA,EFdT,CAAY/O,EAAZ,EAAgBD,EAAhB,EAAoB,AEchB;AFbF,AEcI,WFdG0O,IEcIzM,IFdIhC,CEcC6P,CFdT,EAAY9P,EAAZ,EAAgB8O,AEcZ,CAAa5P,CAAb,EAAgBqB,GFdG8B,AEcnB,CAAP,IFdmB,EAAhB,EAAgC0M,OAAO1M,KAAP,EAAhC,CAAP;AwBxBJ,AxByBG,AoBvBH;AlBsCM,WAAK,QAAL;AYlCN,AKHA,AGDA,AGFA,AfQA,AVmBE,AEcM,AmBvCR,YnBuCYnD,MAAM,IAAV,EAAgB;AFbtB,AEcQ,AUnCK,SZqBN,AYrBesS,CZqBd,QYrBK,CAAmB7N,CAAnB,EAAsB8N,IAAtB,EAA4B,UZqBnB,UAAU1R,CAAV,EAAakP,KAAb,EAAoB;AetB5C,AQJA,AGFA,A1B6BI,AEcM,AUnCR,MAAIyC,KZqBK,CAAC,EYrBE,GVmCGzP,KAAK6N,CUnCC4B,KAAT,CVmCG,AUnCYC,CVmCCzS,AUnChB,CVmCG,CUnCe,CVmCCqB,GAAhB,CAAP,GFdgByO,EAAd,EAAkBC,KAAlB,EAAyBlP,CAAzB,CAAR;AACD,AEcM,AUnCL,GZmBM,EAELA,CAFK,EAEFb,AYrBA0S,CZmBE,CAAR,GYnBWH,KAAK9H,MAAL,CAAY,CAAChG,CAAD,CAAZ,CAAT;AOLJ,AKFA,AGFA,A3B+BC,AEzBG,AUIA,AQNJ,ACDA,IDCI6P,ORMO,KQNK,aAAa,MRMR7B,CAAV,EAAaC,EAAb,CQN8B,GRMX,YAAnB,GAAkCJ,UAAUG,CAAV,EAAaC,EAAb,CAAzC;AVoCD,AUnCA,AQND,GRGA,QQHS4B,SAAT,CAAmBC,OAAnB,EAA4BC,QAA5B,EAAsCC,KAAtC,EAA6CpQ,EAA7C,EAAiD;AKHnD,ACDA,AEDA,A5BiCe,AEcb,AkBzCE,SpB2BoBmL,AoB3Bf+E,OpB2BM,AoB3BX,CpB2B4BvU,CAAjB,CoB3BIuU,CpB2BgB1T,CAApB,EAAuB+O,GoB3BlC,GpB2BW,EAA+BC,MAA/B,EAAuC;AACpD,AEcA,AUnCA,AQNE,MpB2BE,GEcGxO,AkBzCAmT,MlByCMzR,EkBzCX,GlByCgB1C,AkBzCAmU,MlByClB,EAA0B,AkBzCxB,GpB2BYxU,CAAV,EAAaa,CAAb,CAAJ,EAAqB;AmB7BvB,AQJA,A3BkCI,AEcA,AUnCF,AQNE,ACJJ,AQJA,MjBcM8R,EVmCE,CkBzCC8B,EpB2BE,GoB3BP,CpB2BA,EYrBa,AQNAA,KAAb,KRMuBvQ,GVmCZnB,AUnCE,EAAe0E,GVmCZpG,CUnCH,EVmCF,AUnCuB,CVmC9B,EAAkBrB,CAAlB,CAAJ,EAA0B;AFb3B,AEcG,AUnCF,AQNA,SAAKqE,ERME,AQNP,ElByCShD,CkBzCCgD,ElByCR,AkBzCF,cRMY,UAAUuO,CAAV,EAAa;AVoCxB,AUnCC,AQNF,ATkBJ,AmB5BA,InB4BIP,KSlBKqC,IRMI,ADYA,ESlBT,GAAc,EAAd,MTkBsB,QCZN9B,CAAP,IAAY,IAAZ,GAAmBJ,CDYE,KCZItO,IAAI0O,ADYCP,CCZL,CAAN,CAA1B,GDY4B,CAAgB1E,IAAhB,EAAsByE,UAAtB,EAAkC;AXUlE,AEcE/Q,AUnCC,AQNF,ATkBD,KCdS,CZuBL2O,CYrBCvI,EDYE,ETuBE,CAAP,AUnCQtE,EZqBE,GYrBP,GAAa0P,IAAb,EAFI,CAAP,IDcY,GXSG7S,CAAL,CAAZ,qBWT0B2N,IAAZ,CAAP,EAA0ByE,UAA1B,CAAP;Ae1BF,AEDA,AGFA,A7BqDG,AUnCA,AQNDkC,ATkBD,CAFyB,CAA1B,CCdE,SQFUpR,SAAV,CAAoB,mBAApB,IAA2C,iBAAQwB,IAAnD;ApB4BA,AEcA,AkBzCA4P,MpB2BItE,GEcG,CAAC,CAAR,CkBzCU9M,IpB2BI,EWTDmP,GSlBb,CAAoB,cpB2BDxR,CAAL,CAAd,EAAuB,GoB3BvB,IAA6C,UAAUW,MAAV,EAAkB;ADNjE,AQJA,AKHA,AhCyCI,AEcH,AUnCC,AQNE,ACRJ,AQJA,ACDA,QVaQsG,ERME/D,CZqBC,AoB3BP,KpB2BA,CYrBab,SAAP,CAAiBc,QAAjB,CAA0BZ,IAA1B,CAA+BqB,CAA/B,CAAR;AZsBC,AYrBC,AQNA,SRMK,AQNAqD,GAAL,IAAY,KAAK4M,MAAjB,ERMA,AQNyB;AFQ7B,AatBA,AnBqBM,AqBtBN,AbgBM,IFOFpN,MEPM,GRMG,EMCE,aAAa,CEPbQ,GAAL,EAAU,KAAK4M,MAAf,CAAJ,EAA4B,IRMkB,gBMCpD,GNDyDlC,KAAL,EAAY/N,CAAZ,EAAe+J,IAAf,CAAoB,IAApB,CAAvC,GAAmE,IAA1E;AWLN,AvB2BE,AYrBE,AQNIhN,IGAJwT,EvB2BEhV,GYrBG,CWNC,CvB2BC,IAAL,EoB3BW,CFOFsH,ClBoBIzG,GoB3BGwD,CGAC,CvB2BC,AoB3BP,CRMb,AQNqB,GpB2BvB,EAA4B,YuB3BH,CAAC,CAAL,AHAN,CGAjB,CHA8C7C,MAA7B,EAAqC,KAAKkT,MAAL,CAAY5M,GAAZ,CAArC,CAAT;AcjBR,AlC6CI,AYrBE,AQNE,AUhBR,W9B2CW,CoB3BCtG,CRMC,GZqBT,EuB3BWwT,CXMI,AQNA,mBRMKxC,GQNZ,CAAJ,CRMW,CQNyB,CRMb/N,CAAZ,EAAegG,MAAf,CAAsBkI,SAASlO,CAAT,EAAY,sBAAO,UAAUmO,CAAV,EAAa;AZsBtE,AYrBK,AQNEpR,eRMM,IQNGA,KRMKsR,EQNE,ERMV,CAAaF,CAAb,gBQNG,CAAT;AWjBV,ACAA,ApBuBQ,AqBxBR,AbmBU,AepBV;AnCgDE,AYrBK,AQNE,MpB2BH,CYxB+C,EAG5C,IZqBI5S,EAAE,cYrBDyE,CAAL,CAH4C,CAAZ,CAAtB,EAGC+J,CZqBP,CAAP,EYxBa,CAGM,EZqBiB,EYxBvB,CAAN,GAGoB,GAH3B,CZwBA,IAAkD,OAAO3N,EAAE,qBAAF,CAAP,KAAoC,UAA1F,EAAsG;AkC/CxG,AlCgDI,AYrBA,AQNG,AgBtBP,AvBuCA,IAAImD,KDXK,EZqBE,IaVI,GbUGhE,EAAE,OYrBhB,CCWwB,abUV,CAAP,KAAoC,EaVX,QbUzB,CaVkCgE,GbUgBhE,EAAE,GaV3B,CAAkBQ,GAAlB,EAAuB,YbUE,EAAyBK,CAAzB,CAAlD,IAAiF,OAAOA,EAAE,qBAAF,CAAP,KAAoC,UAArH,IAAmIA,EAAE,qBAAF,EAAyBb,CAAzB,CAA1I;AACD,AYrBG,AQND,APiBH,SAAO,IDXI,KyB3BWyW,EzB2BJhS,CAAP,KAAa,OCWPjE,CDXN,ECWJ,CDX4B,CCWb,EAAf,CAAP,aDXoDgS,MAAM/N,EAAE+I,OAAF,EAAN,CAAjB,GAAsC,GAA9D,GAAoE/I,EAAET,QAAF,EAA3E;AUHN,ASvBA,AnB2BI,AQNA,AevBJ,AtBwCC,AiBrCD,CjBmC4B,CAA5B,ESbI8Q,KVIK,AQNAJ,KEEK,CFFV,GAAc,IAAd,ERMA,GUJuB,wBAAS,UAAU/O,GAAV,EAAeoP,IAAf,EAAqB;AACvD,Ae3BF,ArCoDE,AYrBI,AQNF,MpB2BE,GsBzBGpP,EFFE,EpB2BE3F,AYrBA,EUJE,AtByBAiQ,CsBzBb,AFFc5L,EAAL,APiBIL,COjBI,EpB2Bb,KAAoB,EYrBE+O,MAAMtO,EZqB5B,AYrB8B+I,IZqBI,AoB3B7B,EAA+BhM,CRMR,EAAN,EZqBmBX,CoB3BpC,CpB2BsCoP,AYrBAuC,AQN7C,MpB2BoC,AYrBeQ,GAAN,CAArB,CZqBgC,EYrBE,QZqB5D,EAAsE,WYrBH,2BAAavO,CAAb,CAAP,CAAjD,IAA4E,GAAnF;AKIN,AKPC,AEJD,AUtBA,AlCmDI,AYrBA,AqB7BJ,AKHA,AlB0BG,AgBzBH,CdyB2B,EAExB,AFfD,CHsBEwP,AKTuB,AEFvBgB,ASrBAgB,CXuBJ,IVMS,EZqBE,CiClDC,IhBgCI,AOXA,ExB6BEjW,EAAEiQ,IYrBhB,CqB7BqB,CjCkDd,GiBlBkB,AOXA,ExB6BE,MiClDM,IjCkD1B,IAAkCjQ,EAAEiQ,GiBlBV,AOXA,GxB6BQ,CAASpP,CAAT,CAAlC,GiBlBmCoT,AOXAgB,CxB6Bc,OAAOpU,CiBlB9B,AOXA,CPWmByS,AOXAjC,AxB6BapB,CwB7BhC,CPWA,COXsBpG,CPWC,AOXvB,EAAyB,AxB6BF,KAAoB,UAArE,IAAmFhJ,EAAEoP,MAAF,CAASjQ,CAAT,CAA1F;AiBjBF,AOXA,AdUF,AVmBG,AYrBG,AqB7BJ,AbuBAsU,IVQEnC,KOCK,AOXAtI,ESrBEoM,CbuBC/S,CVQC,AEFA,CYRC,ESrBZ,CAAexB,CXyBFoT,AEJN,ASrBP,CrB6BI,CqB7BczQ,CbuBlB,CIFoBwF,ASrBpB,AbuBoB,EavBE,EvB+BE,EcVEA,CAAnB,GAAuBwH,CAAvB,EPWWiC,COXgBzJ,CAAlC,CPWqBxJ,GGTrB,GHSO,CGToC,CHSdiT,EAAtB,APD0B,COCjC,MGTqD9R,MVQP,AURH,EAAkBsD,KAAlB,EAAyB,mBVQR,CAAC,QAAD,CAAd,qBAAoC,UAAU6I,IAAV,EAAgByE,UAAhB,EAA4B;AIDhH,ACFA,AEKC,AOXA,ACFD,AGNA,AGdA,AQJA,A7BoCE,AEFE,AqB7BA,AbuBA,Ae1BJ,ClBiC6B,AOXA,CPW7B,AOXA,EVUI3H,ACFAyI,AURAgC,AGNAO,IRUI3N,CVQC,AEFA,AqB7BAzD,ElB2BE,AkB3BP,EnB6BS,AchBA,CHMC,AQnBAA,AbuBA,EavBV,GbuBeoQ,KLIK,AKJV,CAAW3P,CNMC,AchBA,AhBgBtB,CaVuB,GLIb,CAAV,EVQesN,UAAV,EKJuB,EDEE,AchBA,AlBkBD,CeZE,MVQMc,EDEEzI,AchBAgL,CHMCP,CVQZ,CAAc/B,GDEZ,AchBA,CdgBgBnT,AchBAgH,CdgBhB,ACFF,AURG,CAAiB9G,CXUCW,ACFA,CDEnB,AWVC,AGND,EdgBsB,AWVAb,AGNAkE,AlBkBf,CeZN,EAAwBrD,AGNzB,CHMC,CGN0B,CHMC,IfYX8E,GAAV,EAAemC,GAAf,EAAoB;AID3D,ACFA,AURA,AGNA,AlBkBE,AVmBF,AYrBI,AqB7BF,AbuBA,MNME,ACFAgD,AURAd,AGNAxI,ElBkBEmM,CuB/BCjM,AbuBAgT,CpB2BC1E,AiClDN,CRmBO9P,EfYEkS,AEFA,AqB7BA1Q,ClB2BC,AURA1B,AQnBV,CRmBO,AGNI,A5BqCb,AoB3BE,CKJF,ALIc8H,CQVd,CXmBamM,AOXAgB,AgBzBS2B,CpB2BpB,CRMgBnS,CAAP,EQNU,CVQCqD,EEFE,CFEb,CAAL,AURoB4M,CNMb1U,AJEX,CIFE,CAAJ,AJE6B,EIFZ,CFAN,AQNU,CAAY8H,ERME,CQNd,KAAoB,CAACA,GAAD,EAAM,ELIvB,CAAZ,CHEuC0K,CGFxB,AKJyBgC,KRMK/P,EAAE+I,CQNlB,CAAvC,KRMuD,EAAN,CAAhB,EGFJ,CHEyC,GAA7D,GAAmE,GGFrC4F,CHEyC3O,CAAJ,EGF/C,EAAgB,CHEyC,CAAC2J,QAAX,GAAsB,IAAtB,GAA6B3J,EAAET,QAAF,CAAW,EAAX,CAAvG;AECF,ACFA,AURF,AGNA,AMjBF,AxBmCM2B,AVmBF,AYrBA,AqB7BD,AKNH,AlB6BI,AgB5BJ,MXwBMsE,CGNC,CdgBC,CdqBC,AYrBA,AQNAyK,CVQC5M,CKJCsL,AURAlT,AGNA+H,CAAT,ClBkBI,CeZQpH,CAAH,ALIP,CLIY,AURd,AGNcqD,ARUA4D,CLIL,ALIMsK,EKJE/R,AadjB,ARUE,CpB2BA,C4BrCiB,ARUA,CAAjB,GLIA,CHEA,AQNsB,EVQEyH,GIFXjH,AJEA,AURc0T,CNMvB,AJEF,CIFF,EAAiB,GMNK,CAAa,KAAKG,MAAL,CAAY5M,GAAZ,EAAiB,CAAjB,CAAb,EAAkChD,KAAlC,CAAtB;ANOE,ACFH,ACIH,ASZE,AGNEtD,AlBkBC,A2BrCU,AGFf,AxC0DI,AYrBE,AqB7BJyU,AbuBE,GLEyB,CCMzB5C,CDJCF,GkB3BGjQ,CRmBC8G,AYzBeyM,ArCwDf,CezBoB,CAAf,AaZHxO,ARUAzG,CLET,AaZE,CdgBSxB,AFAA,CaVCiK,CXUCQ,CWVN,AGNOvG,A5BqCZ,CgBnBa,AqBrCF,AJMb,AbuBE,CiB7B6BxC,AJMf,CRmBC,AYzBJ,CZyBK,AGNAuG,AhBgBAxD,CEAP,AWVJ,AGNO,ASnBoBiO,AzBmCvB,CEAS7R,AchBlB,CdgBS,AuBnCE,CvBmCT,AWVkBmJ,CYzBgB,CzBmCd,GaVGC,CTYC,CSZN,GAAU,AbUrB,CaVW,EbUa,AqB7BnC,CRmBoC,CAApC,EQnBuC,UjB+BH,EJFeuI,KqB7BJ9N,CrB6BUD,CIEZ4O,CJFc7F,CqB7B3D,MrB6ByD,EIErB,AJFe,CIEK9L,AJFrB,CIEC,EAAuB4R,AJFa,EIEpC,CJFzB,CIEoD,EJFe,qBAAO7O,CAAP,CAA1E;AECD,ACFH,ACIA,ASZD,ACLD,AEDG,AGjBH,AQJA,A7BuCI,A2BrCF,ArCwDE,AYrBA,AqB7BFwR,AQTF,ArBgCG,CKRwB,CAA3B,CLGE,CMJEd,EViBEzT,EiB/BEwB,ClB2BC,AsBjCA,ArCwDA,AYrBA,CIEC,CNACyC,CMAT,EAAY,ANAV,GgBjBa,A1BoCb,AiClDF,CAAgB,WINJjE,AzBmCV,CGFYoJ,AWbc,GWpBZ4H,EtBiCT,CsBjCYrS,CtBiCE,EkB3BrB,GINY,CJM6B,EINbqS,GAAGrS,CtBiCE,EWbG,GWpBR,GAAYqB,CAA5B,EXoBiCyT,AOdI3T,CINL,CAArC,EAAwCkR,EAAxC,AJMP,CINA,GXoBoC,CAAoB0C,KAApB,EAA2BC,MAA3B,EAAmC;AZgBrE,ACFA,ACIA,AUjBF,AEDA,AlBkBC,A2BrCF,ArCwDK,AYrBA,AqB7BJY,AJWF,GnBeiC,CmBf7BP,CnBoBC,CgBjBCJ,ChBY2B,CKCzBjU,AkB3BA6B,CLaC1B,AlBkBA,CIFC,AEEA,AhBmBA,E0BpCE,CdeC,AiBlBA,CfkBCoF,ACFA,ACIAvE,AUjBZ,CXaE,CadY2E,C5BqCChH,AiClDf,CRmBakV,AQnBG,CjB+BR,AhBmBShF,CgBnBC,AYlBX,CAAP,EdgBQ,CAAc,AFAlB,EiBlBoB,GnBoBZkC,CVmBJ,KAAyB,EiClDjC,EvB+BO,CALwB,CAAxB,AuB1BgC,IjCkD/B,E6BvCwB,CfkBDvR,CAAT,AdqByB,EiClDEW,EnB6Bb,GelBKkU,CIXF,EAAkB5Q,GJWzB,CAAgBpB,CIXT,CjB+B/B,CAAN,AiB/B8D,EJWhC,EAAuBiS,CfkB/C,CAAN,GelB8B,E7BuC6B3V,A6BvCC+C,E7BuCCmN,E6BvC/B,EAAoC,O7BuCrB,MAAiC,SAA5E,EAAuF;AcpB1F,ACFC,ACID,AUjBD,AEDA,AcxBF,AhC0CE,AVmBM,AYrBJ,AqB7BA,AbuBF,Ae9BF,ANkBE,AOnBF,IDCImG,ETqBEhV,AGHAG,EIXE,CLaCA,ARUA8S,ELIEjT,CWbC,ASrBA,CTqBV,AOdWK,CAAL,CLaN,A5BqCa1B,A6BvCAiD,EdgBEkQ,AkB3BA,CAAb,AbuBF,EavBkB,CjCkDCtS,A6BvCAqC,C7BuCb,CevBe7C,EoBlCE,IpBkCrB,CchBW,CdgBgB,AchBA8C,KAAhB,CMlBsB,ANkBAC,IAAtB,CAA2BL,IAA3B,EAAiC,CAAjC,CAAb;AfmBA,ACFI,ACIJ,AUjBA,AEDD,AlBkBC,AVmBK,AYrBD,AqB7BA,AbuBL,Ae9BC,ANkBAvB,CDLwB,ARdG,CQc7B,CRdA,GNqCM,AEEAE,AUjBA6T,GGHGK,CdgBCzC,AHEA,CqB7BCzR,AEPA2U,CnBsCC,AiB/BN,CjB+BJ,EAAa,AapBb,CdgBchV,AkB3BA,AEPd,ANkBcqC,CHGC0R,AdeA3Q,AqB7BX,AEPW/C,CAAf,CpBkCQ,AHESsC,CuBpCCK,CpBkCC,AchBnB,CdgBQ,AoBlCR,CTqBqBhE,AGHAsV,CdgBCrV,ALIdqN,AyBtCc,GvBoCd,CFER,AmBpBA,CdgBQ,AWbR,CZec3N,ACFc,ALIdoS,CIFV,CAAJ,AFA8B,EEAZ,ACFV,EAA0BhS,ILIlC,CAPA,CEKI,EAAsC,CGFlC,CAAJ,EAA0C;ADG5C,ACFI,ACIJ,AUjBF,ACFF,AOpBA,AKHA,A7B0CC,AVmBK,AYrBE,AqB7BF,AKVN,AGFA,AEDA,ARMI,ANkBF,CnBW8C,CAAtB,CAA1B,CiBVIoV,AWtBAkB,IxBuCI,CYfCrV,ASrBAgD,ANkBA7C,EboBE,AmBtCP,CvBoCQyR,CqB7BCzR,CEPC6C,CpBkCC8O,AWbAoC,AGHb,CSrBc,AHGZ,EPoBWE,ChBgBIhR,AqB7Bb,ElB2BepD,AYfA,AfiBA2C,EIEE,AUjBrB,CXaa,CWbU,CXaC,CAAX,EAAc1D,AHEV,A0BvCU,E1BuCrB,CEAUO,CAAV,CAAJ,ACFW,AYfmB,CZeC,CDEb,GCFP,EAA0BT,AuBrCA,SvBqC1B,CAAP,IYfkC,SAASoV,cAAT,CAAwB7H,IAAxB,EAA8ByH,KAA9B,EAAqCC,MAArC,EAA6C;AbkBjF,ACFC,ACID,AUjBF,ACFF,AaxBa,AxC8DX,AYrBI,AqB7BH,AKVH,AlBiCF,Ae9BI,ANkBH,CAJyB,CAA1B,ETgBIV,EOXEW,EDEE,CAAC,Ac1BesB,AxC8Df,AmCzDAlV,CAAL,CGHOgV,CXsBC,AfiBAzD,CEACjT,AEEA,AmBtCA0B,CRmBX,AQnBE,GrBoCab,AEEAyS,AIRA,CNMX,AJESnB,AVmBX,CgBnBS,CsBzCX,CtByCI,AJFe,A0BvCAzQ,CEFN,AFEb,CEFoCiM,CFEdtJ,EAAtB,CEFa,CFEa,CEFgBqO,CpBmCd,CoBnCf,Ed0BI0C,Ac1B6B,K5ByCxC,CcfiB/T,Cdee,EcfrB,CAAV,EAAsBgU,MAAtB,CAAD,ANS8B,CAAR,EAAW,CMTC,CAAC,ANSb,EAAe,SAASV,UAAT,CAAoBJ,EMTZa,KNSR,CMTc/T,CNSemT,EMTrB,CAAV,EAAsBc,GAAtB,ANSE,CMTzC,CNSgFb,CMTb,INS1B,EAA8CpQ,EAA9C,EAAkD;ANO1F,ACFChD,ACID,AUjBCiU,ACFJ,AIpBF,AWNA,AFEE,AxC8DE,AYrBM,AqB7BN,AKVA,AlBiCF,Ae9BE,ASRJ,K5B4CI,CWjBEjU,AaxBAA,GxC8DG,AsC5DAgD,AlBiCA,Ae9BAiS,CTqBChB,ASrBN,CFOO,AKVP,CXsBQ,AaxBA5C,CzBuCC,AYfX,APWW4B,Ae9BA,CpBkCP,AWbQjU,AYxBAgE,AHGV,CKLWhE,CPYCgE,AKVZ,CtC4DA,AYrBa4O,CqB7BN,AJWIyC,CIXI,CPcb,Cc1BM,A5ByCF,CQND,CAAcnB,CMTCa,Ac1BA,CAAtB,Kd0B4B/T,ANSrB,EAAuBmT,CMTR,CAAlB,IOdK,EAA6BhT,AbuB/B,EAAiCiT,IavB/B,CbuBF,CavBuC3P,CbuBCT,EAAxC,CAAP,CavBS,CAAP;AnB8BA,ACFC,ACIF,AUjBE,ACFH,AaxBA,AxC8DE,AYrBK,AqB7BN,AKVC,AlBiCH,Ae9BE,Cf4B2B,CAA9B,Ca3BE,GNkBIkR,GaxBGlU,AxC8DA,AsC5DA2H,CxBuCC,EwBvCN,ExBuCUpC,CwBvCC,CEFC,AFEZ,CXsBawO,AaxBR,AxC8DL,IwC9DiBzH,E1ByCX,AajBatN,CbiBC,E0BzCEqS,GbwBxB,AaxB2BrR,GAAH,CAAL,CAAnB,EAAkC,Y1ByCHR,CAAT,IAAc,kBAA5B,CAAN;AACD,ACFA,ACID,AUjBEQ,ACFF,AY1BF,ACEIA,AxC8DE,AYrBC,A0BvCH,AGLJ,AEDA,ARSEgV,AUVF,ATKA,GrB+BS,CAAP,IoB1BMnT,CnBsCC,AWnBA7B,AWtBA4H,CtC4DC,C0BpCC,Ac1BA,Cd0BP,Ac1BA,AxC8DQ,CsC5DR,EXsBWsM,CWtBC,CHGd,Cf8BaZ,Ae9BG,CnCyDC3U,CAAP,CsC5DR,EXsBF,EAAuB,A3BsCA,KgBnBV,EhBmBiBa,CAApB,IAAyB,AmCzDnC,IAAuC,SnBsCrBa,CAAL,EAAQ,KmBtC0BgD,InCyDF1E,AmCzD7C,CnBsC+BuT,ChBmBgB/F,CgBnB1B,EAAcgG,EAAd,EAAkBC,AhBmBM,EgBnBxB,AhBmBc,EgBnBQC,AhBmBe7S,EgBnBrC,AhBmBuC2M,EgBnBbmG,EAA1B,EAA8BC,ChBmBO,CgBnBrC,ChBmBc,CgBnBoBC,AhBmB/C,CAAJ,CgBnBiB,ChBmBoD,CgBnBdC,EAAtC,EAA0CC,EAA1C,EAA8CC,EAA9C,EAAkD;AFDvE,ACFD,ACIG,AGfJ,AOFG,ACFC,AaxBD,AxC8DK,AYrBF,AqB7BJ,AKVE,AHGFqC,CpBqBsB,CAAxB,EIEInC,ELaElU,EajBE,AQnBAkD,CRmBC,AMZA+S,AKVAtQ,ExBuCE,CEECvF,AsBzCR,C1BuCS,CqB7BX,CnB6BI,AKbS,AnBkCA,AsC5DA,EHGb,CAAgB,CrBoCC,AFAAuS,A0BvCA1P,CtC4DX,EgBnBc5C,EsBzCP,CAAUqB,CAAV,CAAX,CtByCA,AGfwB,APaA+C,CAAT,EAAY,MejBRkJ,EQnBrB,ERmBO,EAAoByH,AQnBc,ErBoCZpV,EAAE,EKbG,AQJDqB,EfiBCoD,CejBP,AfiBE,CejBtB,AfiBU,EejBsB4Q,AfiBD7G,GObK0F,CPa1B,CAA0B,AuBpCM1S,CRmB1C,CAAD,EfiBW,CAAN,CObuB,AQJgB,AQnBlD,ChBuBoD2S,AQJD,CbiBtB,AFAsB,CEAlC,CAAjB,CFAI,CEAoD,AKbtB,EAAyBC,GAAzB,EAA8B,gBQJCzG,IAAd,EAAoByH,MAAM/T,GAAN,CAApB,EAAgCiU,GAAhC,CAAjD,EAAuF;AbkBvF,AEEE,AGfJ,AOFA,ACFIA,AKPN,AUtBA,AIFA,ANOE,AxC8DK,AYjDL,AqBDD,AKVE,AHGDe,ASXF,CXEyB,EAAzB,CDqBIL,IGZI9S,ChBuBC,AOFAoS,Ac1BA,CbwBCpG,CbiBClP,AEEA,CAAL,AUjBJ,CZeW,AkBxBA,CLOP,CAASoV,EQnBb,CpBkCalC,AoBlCG,GRmBG7R,GAAN,CAAT,CKPoB,IQjBX,CrB4BC,AqB5BP,EAASA,C1ByCP,EAAyBR,CAAzB,AqBpCT,CrBoCE,C0BzCoB,CAAf,CLKgC,CKLd6R,EAAlB,CAAP,ERiBgC,IGZiBlR,KHYRwU,CGZF,EAAkBlR,GHYzB,CAAgB9E,CAAhB,AGZO,EHYYa,AGZa,CHYhC,CbWN,CAAZ,AaXwC,EbWzB,qBAAM,QAAN,EAAgBuT,GAAhB,CAAf,CAAP,EAA6C,YAAY;ALc/D,AEEK,AGfJ,AOFH,ACFI,AKPH,AQjBD,AxC8DK,AYrBL,A0BvCCsC,AHGE,CTU0B,CAA9B,MPaQ1T,CaXChD,AGZAsW,CAAL,EGHQpT,CNeCrC,CAAX,AGZY,CnBsCC,AGfAT,AgBvBX,InBsCekT,EAAJ,AsBzCb,CtByCoBC,AsBzCA,EtByCP,AGfX,CHeI,gBsBzCN,IAA2C,iBAAQ7O,IAAnD;AxBwCA,AEEI,AGfF,AQJArD,AKPH,Ae1BD,A/CuEI,AiClDJ,AKVEqV,AHGE,CHUsB,CAA1B,ECHIR,EnB6BElW,EKbEqU,AgBvBAxI,CnCyDC,EcrBE,AEEA,AWnBA,CXmBL,AWnBF,AWtBQ3I,CLUC,CEPC,CrBoCR,AdqBF,GmBlCc,AOFHiS,CZeI,AqBpCAzT,CAAL,CGHZ,CnB0BE,AmB1BkB,GHGG,CFOC,AEPZ,GAAeF,MAAf,GAAwB,KGHpC,AHGyC6C,ErBoCZrE,AqBpCO,CAAQ,CrBoCbyK,AmB7BC,AKVa,MxBuC5B,CAAjB,EAAwC,AmB7BCyL,CKVc1U,KLUvB,CAAgBE,AKVH,CLUb,CKV+B,AHG3B,CFOe2C,CEPc7C,CFOjC,EAAuB,GEPnB,EAAqCsD,KAArC,CAAlC;ArBqCA,AEEI,AGfJ,AQJD,A3BsCG,AiClDJ,AKVE,AHGA,SFOK,AKVAa,CtC4DC,CcrBC3F,AKbAmU,AnBkCA,AmCzDA,CGHP,CxBuCS1J,AmB7BAwL,EjB+BE,AsBzCA,CHGCvU,ChBuBCpB,AgBvBN,CHYI0V,ACLN,CnB6BE,AEEQ1C,AiB/BA5R,AKVf,CxBuCgBb,AmB7BX,CnB6BE,AEEI,AmBtCM,CrBoCjB,AEEkB0S,AGfX,AchBWlP,AEPX,ChBuBYgQ,CHeR,AiB/BN,CAAP,CjB+BwBb,AmBtCA,EnBsCX,CAAP,CGfG,CgBvBoB8C,ChBuBC,AgBvBN,InCyDLtW,AmCzDe,EnCyDbwN,GmCzDkB9L,CAA9B,GnCyDU,AmCzDwB,EnCyDlC,EAAuBb,EmBlCG,AnBkCD2M,OAAF,EAAvB,CmBlCoCtN,AnBkCzC,EmBlC+B,AnBkCW,EmBlCG,GgBvBG2L,GAAT,CAAlC,GAAkDA,GAAzD;ArBqCD,AEEG,AGfA,AQJJ,AY9BF,AGFA,AIFA,A9CwEQ,AiClDP,AKVG,AGTJ,AEDA,AKHA,AbgBG,AUdH,AfwBA,CGL0B,CAA1B,CETE,CMREgL,AEDAK,AbuBArB,KHSKP,EXmBE,AsBzCA,CtByCL,AWnBJ,CRIWpV,AWbA,E9B+CE,CmBlCCI,AmB1BA+D,EAAL,CAAQ,CtC4DX,CmBlCK,AsBnCQ,CtBmCCgQ,CwBpCC,GbuBG,GXab,EAAkBrR,GsBnCG,CtBmCrB,CAAP,AwBpC8B,ILUzB,EAA+BxB,IGTI,CXsBZ,CQbvB,AKVqC,CLU5C,ORauCqU,MAAT,CAAgBxU,GAAhB,EAAqBoD,CAArB,EAAwB1B,IAAxB,EAA8B;AhB2B9D,AEEM,AGfH,AQJJ,A3BsCM,AsC5DJ,AGTD,AEDA,AbuBA,CHFgC,CAAlC,CWdE,EnB2B8B,EAEzBqR,CLaC,CgB1BC,CXWuB,CAArB,AsBjCAyC,AEDAK,C7BiDCtQ,AKfR,GHiBW,GiB/BAsP,CjB+BI5C,EFFX,AEEO,CFFO,AEEAC,EAAP,CyBlDb,CzBkDwBC,AyBlDAtT,CEDxB,C3BmDa,AyBlDb,AED0ByN,E3BmDE8F,AyBlDApP,CXsBd,Cd4BD,AyBlDb,AEDA,C3BmDM,CyBlD0B,AEDAA,EAAhC,EAAoC,Q7BiDPrE,CAAT,IAAc,EgB1BbyE,CAAP,CAAP,EAAkBpD,GAAlB,EAAuB0B,IAAvB,CAAP,iDhB0BM,CAAN;AACD,AEEK,AGfH,A4BxCH,AEDA,AjD2EM,AsC5DJ2T,AGTE,AEDA,ARaF,ASfF,AdyBC,ChBMyB,AgBRA,ChBQ1B,AgBRA,CXSS,CAAP,KsB7BO9R,AEDAP,ARaAgS,CMZL,CzBkDO,A2BnDP,C3BmDE,AsBzCMnT,CGTChD,CEDCmE,ARaZ,CMZE,CEDA,EhBgCWmR,GWtBb,CAAoB,mBAApB,IAA2C,UAAUhU,MAAV,EAAkBsD,KAAlB,EAAyB;AtB0C9D,AGfP,AnBkCG,AsC5DA,AGTA,AEDA,ARaH,ChBe2B,AgB9BH,ChB8BzB,CgB9BA,KGYQ,CtC4DC,AyCrEAgS,AEDAnJ,ILUI1E,AKVT,E3BmDW,ChBmBX,A2CtEY0E,CLUZ,AGTA,C3BgDWlD,AgB1BAoL,Cd4BIvC,AsBzCA,CGTC,AEDhB,C3BmDW,CAAOC,AyBlDlB,EzBkDW,EAAWC,EAAX,EAAeC,EAAf,EAAmBC,EAAnB,CAAP;AACF,A8BxDN,A9C2EM,AsC5DAlS,AGTF,AEDA,AKNJ,AEDA,STQS6C,AEDA8S,E3BmDE,AyBlDP,CzBkDE,ChBmBOnX,CyCrECqE,CzCqEC8L,AsC5DA,CGTX,EtBmCW+D,AwBpCX,C3CsES,CsC5DO7P,CKVC2I,CLUN,CAAQ,CtC4DCnM,EAAEsP,IAAb,A2CtET,I3CsE8BnQ,EAAEoQ,MsC5DrB,CtC4DmB,CsC5DU5O,ItC4DIX,EAAEuP,AsC5DnC,EAAqC,KtC4D9C,AsC5DmDzK,GAAL,CAAS,KAAKqD,GAAd,CAArC,CAAT;AtB0CE,AhBmBJ,AsC5DC,AGTF,AEDC,ARaJ,IAAIuN,KnCyDK,A2CtEAa,IRaI,EnBsCE,EhBmBX,EgBnBe9D,EAAJ,CAAOC,C2BnDlB,C3BmDW,EAAWC,A2BnDA,ARaA,EnBsCX,EAAeC,C2BnD1B,C3BmDW,EAAmBC,EAAnB,EAAuBC,EAAvB,CAAP,MmBtC0B,SAAS4C,MAAT,CAAgB7U,CAAhB,EAAmB2C,EAAnB,EAAuB;AnBuCnD,A0BvDN,AKHA,AEDA,AEDA,AnD+EM,AsC5DF,AGTFwS,AEDC,ARaD,SGHO3N,AHGA,CnCyDC,CgBnBC,CAAL,AhBmBMlJ,CmCzDCqW,CnCyDC5J,AsC5DV,CAAW3H,EGTE5B,CNYR,CAAUxB,CnCyDP,AsC5DR,AHGK,EAAa2C,EAAb,CnCyDgBxD,AmCzDvB,CMZA,CzCqEyB4L,AyCrEA,MzCqEf,IAAyBzM,EAAE0M,MAAF,CyCrEnC,IzCqEgD7L,AyCrEA,EzCqEE6L,MAAxC,IAAkD1M,EAAE2M,GyCrENjI,IAAxD,GzCqE4D,KAAiB7D,EAAE8L,UAArE,IAAmF3M,EAAE4M,SAAF,KAAgB/L,EAAE+L,SAArG,IAAkH5M,EAAE6M,MAAF,KAAahM,EAAEgM,MAAjI,IAA2I7M,EAAE8M,OAAF,KAAcjM,EAAEiM,OAA7J,CAAJ,EAA2K;AgBlBzK,AhBmBA,AsC5DJ,AGTF+J,ANYD,CAFyB,CAA1B,SGDWrV,ItByCI,AhBmBA,EsC5DX,AGTa0B,EzBkDEoQ,ChBmBX,CgBnBO,CAAOC,EAAP,EAAWC,AyBlDxB,CAAyB,CzBkDZ,EAAeC,EAAf,EAAmBC,EAAnB,EAAuBC,EAAvB,EAA2BC,EAA3B,CAAP,GyBlDN,IAAkD,UAAUpS,MAAV,EAAkB;AzBmDhE,A8B3DN,AMHA,ApDiFO,AsC5DJ,AGTC,AEDF0V,GLIA,MGHOJ,EzBkDE,CAAL,KyBlDF,CNYWP,CQbIrT,CFCC,IAAhB,IEDF,CAA2B,mBAA3B,IAAkD,iBAAQwB,IAA1D;A3BoDM,AhBmBF,AsC5DJgS,AGTE,AEDFQ,WFCS,CHSChU,GtByCG,CyBlDCmB,EAAL,CzBkDQiP,AyBlDA,AEDApQ,E3BmDJ,AsBzCb,CtByCoBqQ,AsBzCArK,EtByCP,EAAWsK,CsBzCxB,CtByCa,A2BnDb,CAA2B,C3BmDCC,AsBzCA,EtByCf,EAAmBC,EAAnB,EAAuBC,EAAvB,AsBzCyB7O,AGT7B,EzBkD+B8O,AyBlDApS,EzBkD3B,CsBzCe,CtByCgBqS,CsBzCC,CtByChC,AyBlDJ,CzBkDH,AyBlDJ,CEDF,IAAoD,iBAAQrS,MAA5D;A3BoDI,A+B7DN,AEDA,AEDA,AnDuDE,AsCjCE,AGTD,AEDD0V,AKVF,AEDA,AGFA,GZWE,COREU,KVoBKjS,EtByCE,CAAL,AsBzCF,CAAS,IUpBI,CVoBCqD,CKVC9F,ELUf,IAAqB4B,GKVvB,CAA2B,CLUzB,AUpB0B,YAAY,MLUxC,IAAkD,UAAUtD,MAAV,EAAkBsD,KAAlB,EAAyB;A3BoDrE,AevCR,AOFI,AGTF+R,AEDE,AKVF,IjBsBEf,IYZIuB,CLUCrO,EUpBE4O,CVoBP,GtByCW,CsBzCC,CPEC,AOFb,AGTa1U,EzBkDEoQ,EAAJ,A2BnDM,AKVnB,ChC6DoBC,AgC7DA3O,CAApB,ChC6Da,CgC7DUP,ChC6DCmP,AyBlDxB,AEDE,CFCuB,AOXzB,ChC6Da,CgC7Dc,ChC6DCC,AevCA,EfuCf,EAAmBC,EAAnB,EAAuBC,EAAvB,EAA2BC,EAA3B,EAA+BC,AyBlD5C,EzBkDa,EAAmCC,AyBlDA,CVWZ,CfuCvB,CAAP,OevCuCgC,AUXatU,MAAV,EAAkBsD,EVW9B,CAAoBiD,EUXR,EVWZ,AUXqC,EVWX7D,GAA1B,EAA+B;AfwC/D,AevCJ,AqB1BF,AEDA,AtDqFE,AsC5DE,AGTA,AEDA,AKVA,A3B6CJ,IAAI0Q,ErBmCEvT,EsC5DE,AKVA,CAAC,AKVAgD,CjBsBC0D,CfuCC,AyBlDA,AOXP,ChC6DE,AhBmBM6H,CsC5DC5G,CKVCoO,AKVA/S,CjBsBChE,AVuBA,CiBzBP,AGTQuE,AOXZ,CPWO,CAAOE,CzCqECzE,E+B1DjB,AOFmB,EGTV,EzCqEC,CsC5DcsF,CGTC,CzCqEC,A2CtExB,AtBmCwB,CrBmC1B,AsC5DmB,CAAStF,AKVA,EFCE0W,IHS5B,EAAkC,AGTX,CAAYvV,MAAZ,EAAoBsD,GpBkCX,CAAR,CoBlCD,CAAhB,ApBkC4B,EAAX,CoBlC4B,CpBkCb,IoBlCkBkS,KAAL,CAAWxV,GpBkCX,GoBlCA,EAAmBsD,KAAnB,CAApD,iBpBkCkE,EAAd,uBAA8B,SAAS8P,QAAT,CAAkBL,OAAlB,EAA2BC,QAA3B,EAAqCC,KAArC,EAA4C1R,IAA5C,EAAkD;ALiBhI,AevCJ,A/B0DF,AsC5DI,AGTH,AEDG,AKVF,A3B6CF,GoBpCA,MVaO,A/B0DA1B,AgDhFAuD,A3B6CA,CUvBL,AiBtBA,CVoBOoE,AKVAoO,EKVExS,CVoBP,AUpBF,ChC6DW,ChBmBC,CAAd,AsC5De,CAAX,CtByCa0O,AhBmBA,EgBnBJ,CAAOC,EAAP,C2BnDT,C3BmDoBC,EAAX,A2BnDa,E3BmDEC,CKhBb,CLgBF,A2BnDT,E3BmD4BC,EAAnB,EAAuBC,EAAvB,CKhBYhO,CLgBeiO,EAA3B,AKhBE,ELgB6BC,AKhBdgB,ELgBjB,CKhBE,CLgBiCf,CKhBb,CLgBtB,EAAuCC,EAAvC,CAAP;AACF,AevCA,AGAN,AazBA,ADCA,AGFA,AEDA,AIFA,AvDuFI,AsC5DE,AGTJ8C,AEDG,AKVF,A3B6CC,AgCnDJ,InB4BIV,CSdA,G3CwEIvG,AqBnCA9H,GLgBG,AkBvCA,AIFAmB,AKVA,E3BmDL,AevCO/E,CVuBCuQ,CrBmCCpT,AsC5DT,AKVS,CZYT,CUXW6B,CzCqET,AsC5DU,EKVEyK,AtBmCAkH,EiBzBd,CjByBQ,CavBU,AlC0DA7U,A2CtET,AtBmCX,CrBmCA,A2CtEqB,CFCvB,CzCqEyB,AyCrEAgX,GEDGG,EFC5B,GAAiC,IEDpB,EAA0BrS,IFCItD,CPWZ,ASZlB,CAAJ,EAAsC,EFCd,EAAkBsD,KAAlB,CPWW,COXc,2BPWA,CAAC,MAAD,CAAd,mBAAgC,SAASqR,IAAT,CAAczU,CAAd,EAAiBgR,EAAjB,EAAqB;AlBwC3F,AevCJ,AGAF,AlC0DI,AsC5DD,AGTDlR,AEDE6V,AKVJO,A3B6CEjS,QAAImC,CUvBC,AGAA,CHAL,CVuBA,ErBmCS+H,AyCrEA,AOXA3M,EhC6DE,AKhBAqR,ILgBIjB,A2BnDA,C3CsECjS,CgBnBL,CAAOkS,AgC7DpB,ChDgFW,A2CtEP,AKViB,A3B6CA,CLgBR,EAAWC,EAAX,ChBmBc3S,CgBnBC4S,AkBvCf2C,AlC0DT,EgBnBS,EAAmB1C,CkBvCd1O,AOXC,CzBkDN,EAAuB2O,AkBvCvB,CAAS,ClBuCT,AkBvCA,AOXWtP,EzBkDgBuP,AkBvCflS,AOXN,AOXnB,A3B6C0BoG,CavBb,AOXc,CzBkDd,AkBvCN,CbuBc,CLgBuB+L,AkBvCfzF,ActBe,C3B6CbzI,CLgBlB,EAAmCmO,AKhB3B,ELgBR,EAAuCC,AkBvC7C,AbuB+BpO,ELgBzB,AkBvC0B+M,ElBuCiBsB,AkBvCjD,AbuBmClM,CavB1C,ClBuCa,CAAP,AKhBgC,CoBlCnB,ApBkCE,CoBlCV,AOXyCpD,EPWHlD,ApBkCAgT,E2B7CjD,IPWW,EAA8C,ApBkC5C,EAA8CK,GoBlCGiC,ApBkCjD,CAAX,OoBlCS,CAAT;AzB8BA,AelBE,AGAL,AkB7BD,AEDA,AEDA,AxDyFK,AsC5DF,AGTC,AEDC,AKVHc,A3B6CE,CazB0C,CAAtB,CAAxB,AIPE,MGFOd,EpBkCEnR,EUvBE,AiBtBAzC,C3B6CT,GoBlCA,GAAgB,EAAhB,AOXF,CAAqB,ejBsBC6E,KAAK,CAAL,AiBtBtB,CjBsBW,GiBtBmC,CjBsBb,gBiBtBqBvG,MjBsBduG,AiBtBxC,KjBsB6C,CAAL,CAAP,EAAgB,CAAhB,EAAmB7D,GAAnB,CAAtB,GAAgD,sBAAO6D,KAAK,CAAL,CAAP,EAAgB7D,GAAhB,CAAvD;AfwCH,AevCC,A/B0DA7C,AyCrEA,AEDA,AKVFuW,A3B6CC,GLPY,AKGN,CLHA,CAAP,AKOG,EAJI,EsB/BAT,AtBmCApU,ErBmCE,AyCrEA,CzCqEP,CgDhFSG,A3ByCJ,CAAP,EoB9BcmB,EPWD8R,AOXJ,AEDP,CFCe,EEDErR,CKVnB,CAAqB,GLUnB,YFCO,EAA6BtD,EOXtC,IPWS,AOXmC,EPWEsD,KAArC,CAAP,EOXoDtD,MAAV,EAAkBsD,KAAlB,EAAyB;AhC8DtE,AevCK,AoB9BN,AIFA,AEDA,AzD2FG,AsC5DD,AGTC,AEDC,AKVA,A3B6CH,CLjB6B,AKW0B,CLXxD,AKW4B,CoBhC1B,ApBgCF,K2BvCQ,CVoBC4R,CPECX,CYZCsB,EKVEzS,CAAT,EAAY,CjBsBCmD,COFf,IPEoB,CAAL,CAAX,AYZkBvG,MAAb,GAAsB,KAAK6C,EAAL,CAAQ,mBAAR,EAA6B7C,MAA7B,EAAqCsD,KAArC,CAA7B;AZaE,AOFL,AGTC+R,AEDC,AKVG,CVTuB,EAA7B,AKUE,OZqBQ1I,AiBtBA,KAAKvJ,CAAL,CjBsBO3B,AUXAC,AOXA4B,ChC6DFuO,AKhBAuB,I2B7CL,CjBsBa1R,AiBtBjB,EAAmB,CPWvB,CAAyB6T,KVWV,CAAgB5T,AUX/B,GAAkC,EVWnB,CAAsBC,IAAtB,CAA2B2E,EUXEvG,EVW7B,EAAiC,CAAjC,CAAX,AUX8B,EAAkBsD,KAAlB,EAAyB;AVYvD,AgB7BN,AEDA,AGFA,AEDA,AEDA,AxD4FE,AyCrEE,AOXI,AUbR,AbsBA,AQnBA,IRmBI6J,KJEKmI,CVWC5S,A/B0DA8L,C6CvEC,GdaG+F,C/B0DZ,AgDhFavU,EPWX,CVWM,AUXQ0N,GOXV,CPWJ,CVWmB,AUXApK,CIFC,GdalB,CUXF,CVWyB,ccbD,CAAC,CAAL,CAAxB;AdcQ,AQVR,AvCoEI,AsC5DJ,AGTI,AEDF,AKVK,ITYH2R,ADQAE,KtC4DK,A2CtEAO,EFCE1V,GzCqEP,C+B1DW0C,AQVA,EDQE,AGTb,CVWI,AcbOyK,OFCb,GJE0B,EDQE,oBCRO,CDQC,SAASgI,GCRG,ODQZ,CAAoBjV,CAApB,EAAuB2C,EAAvB,EAA2B,aCRD,EAAd,0CAAtB,CAA5B;ARWO,A4BrCP,A3D+FM,AsC5DJ,AGTC,AEDF,AKVK,CLZ8B,EFoBlC,AEpBF,IZgCM,EOAG,CtC4DCrE,CgDhFC4E,ChDgFCyL,AgDhFN,CjBsBO,AOFAqG,EUpBE,ChDgFL,C+B1DO,CQVFD,CSZT,EhDgFe5V,CsC5DZ,CtC4DcwP,AsC5DA3O,CAAd,EAAiB2C,CtC4DpB,CsC5DG,CtC4DoB,AsC5D3B,aPE0B0D,KAAK,CAAL,CAAX,CAAJ,EAAyB;AAC9B,A/B0DA,AsC5DP,AUpBI,CVkByB,CAA9B,aPIe,A/B0DA,KAAP,iB+B1DcgO,IAAP,EAAaD,WAAW3H,IAAX,EAAiBjK,IAAI6R,IAAJ,CAAjB,CAAb,EAA0C7R,GAA1C,CAAP;AACD,AoBlCP,ACDA,AGDA,AEDA,AzD+FO,AyCrEL,AEDF,AKVI,AUhBJ,AEDA,IjB2BIoT,GZUS,EUTJT,EOXE,EjBsBE,GiBtBGxS,EVoBDsS,AUpBJ,CAAQ,IPWjB,CEDsB,aAAa,CKV1B,EAA6BnV,MAA7B,EAAqCsD,KAArC,CAAP,ILUyC,SAASwS,iBAAT,CAA2B3J,IAA3B,EAAiCtJ,EAAjC,EAAqC;AZa1E,AUXP,AEDC,AKVC,CPd+B,EAAlC,AOME,MLkBO,IAAI6S,EZYE,cYZN,CAAqBvJ,IAArB,EZYYoI,AYZe1R,EAA3B,CAAP,CZYa,EAAYyR,WAAW3H,IAAX,EAAiBjK,IAAI6R,IAAJ,CAAjB,CAAZ,EAAyC7R,GAAzC,CAAP;AACD,AuBrCP,AEDA,AGFA,AEDA,A7DmGM,A2CtEL,CAFoC,CAArC,W3CwEauL,mBAAmBzP,EAAEsQ,OAAF,EAAnB,EAAgCzP,EAAEyP,OAAF,EAAhC,EAA6CV,OAAOnF,MAAP,CAAc,CAACzK,CAAD,CAAd,CAA7C,EAAiE6P,OAAOpF,MAAP,CAAc,CAAC5J,CAAD,CAAd,CAAjE,CAAP;A+BxEJ,A/ByEE,AyCrEJ,AOXE,IPWEoW,KzCqEK,AgDhFAW,KhDgFL,I2CtEWN,CKVb,GPWoB,aAAa,qBAAQ,SAASL,eAAT,CAAyB/W,EAAzB,EAA6BmE,EAA7B,EAAiC;AVY3E,A/B0DK,AyCrEJ,AOXD,AUnBD,AEDA,AEDA,AlB6BA,CbH8B,AiBvBA,CjBuB9B,CiBvBA,CJ0BIkT,KHGK,CzCqECvX,A4CxEA,E5CwEEqQ,CyCrECwG,GzCqEH,KAAWhW,EAAEwP,A4CxEA,I5CwEjB,AyCrEG,CAAmBnQ,CzCqEC,CyCrEpB,EAAuBmE,EAAvB,CAAP,SGH6B,SAASkT,GAAT,CAAaC,MAAb,EAAqBzU,IAArB,EAA2B;A5CyElD,AyCrEP,AGHC,CHCiC,CAAnC,IGDM1B,MAAMmW,G5CwEG,G+B1DA1B,E/B0DP,C4CxEa,CAAT,GAAa/S,KAAK1C,MAAL,GAAcmX,MAA3B,GAAoCA,MAA9C;AQxBF,AOJA,AEDA,AEDA,A/DuGO,AgDhFP,AJQE,AMTF,IFCIK,AEDAE,KNSK,AMTA,STYMd,AOXG,IEDI,SFCS,EJQZlU,IAAV,IAAkBA,EMTG,GNSE0U,MIRO,AJQZ,AMTYM,CNSA1W,CMTT,CAAYrB,CNSf,AMTG,CNSrB,CMToCa,CAAf,CNSgBkC,CIRE8U,AEDA,INSGxW,GAAL,CAA5C,GIRqC,CAAqBuD,CAArB,EAAwBP,EAAxB,EAA4B;ANOnE,AMNE,AJQD,AMTC,CNMqB,CAAvB,EFCIuS,KMNK,AEDA5W,IFCI4X,CEDC/W,CAAZ,KROkB,GMNX,CAAe+D,CAAf,EAAkBP,EAAlB,CAAP,GNM+B,sBAAS,aAAa,4BAAc,EAAd,oDAAtB,CAAjC;A1C2EM,AgDhFL,AYvBD,AEDA,AEDA,AdwBC,CFD8B,AEDT,CFCtB,AEDA,WlDmFaoL,K0C1EEmH,AEEAW,c5CwEiBvX,EAAEwJ,MAAF,EAAnB,EAA+B3I,EAAE2I,MAAF,EAA/B,EAA2CoG,OAAOnF,MAAP,CAAc,CAACzK,CAAD,CAAd,CAA3C,EAA+D6P,OAAOpF,MAAP,CAAc,CAAC5J,CAAD,CAAd,CAA/D,CAAP;AACF,SAAK,SgDhFMgX,AEDAE,ElDiFX;A6DxGJ,AEDA,AEDA,AjE2GI,A0DvGJ,IAAIe,K1DuGK,G0DvGG,I1DuGR,S0DvGqB,YAAY;AZsBrC,A9CkFI,A0DvGF,IZqBEpB,K9CkFK,E0DvGEoB,KAAT,C1DuGE,A0DvGalU,CAAf,EAAkBP,EZqBE,AYrBpB,EAAsB,WZqBW,sBAAS,aAAa,4BAAc,EAAd,8BAAqC,SAASqT,eAAT,CAAyB/J,IAAzB,EAA+B5K,IAA/B,EAAqC;AACjI,AavBF,AOJA,AlE6GI,A0DvGA,AMLJ,MlB0BMvB,G9CkFG,A0DvGA6C,EAAL,GAAUA,CZqBC,CYrBX,CZqBF,C9CkFE;A8CjFF,A9CkFE,A0DvGA,AtByCJ,IAAImS,EUpBEnV,G9CkFG,A0DvGAuD,CAAL,CtByCO,CUpBC,CAAV,AYrBWA,CAAT,G1DuGA,OoC9DoB,sBAAS,aAAa,4BAAc,CAAC,MAAD,CAAd,mBAAgC,SAAS4R,IAAT,CAAc9U,CAAd,EAAiBgR,EAAjB,EAAqB;AWxBnG,ADKE,AiB3BF,AEDA,AEDA,AnE+GI,A0DvGA,AEJJ,AEDA,A1B8CE,IWzBEiF,AapBAuB,AEDAG,EhB0BElU,G9CkFG,A0DvGA4T,AtByCA,GUpBGhW,EYrBR,EILY,ChB0BC1C,A9CkFb,A0DvGa,AEJA,CboBC,IWhBd,CZqBF,MgB1B2B,CFCC,AxB6Cf,CWzBgB,AXyBtB,EAASqB,IAAI,CAAJ,G0B9CuB,A1B8Cf0M,CwB7CgB,OxB6CxB,GAAmB1M,CWzBG,AXyB/B,EAA+BgR,EAA/B,CAAP,QWzBmD,4BAAc,EAAd,EAAkB,aAAa,iDAA/B,EAA0D,aAAa,gDAAvE,CAAtB,CAA/B;ADME,A9CkFE,A0DvGD,AEJD,AEDA,A1B8CD,CAF6C,CAAtB,CAAxB,GUlBMvN,G9CkFG,E4D3GE+T,AEDAG,GhB0BG,CAAZ,A9CkFE,E8ClFa,CCLF1B,EerBb,CFCA,AEDmB/S,CFCCA,AEDpB,CFCA,CEDsBP,CFCCA,CEDvB,CFCA,CED0B,CFCC;Ad0BzB7C,Ae3BJ,AKHA,AEDA,ApEiHI,A0DvGFsX,AEJE,AEDA,QJKI5V,C1DuGC,A4D3GAmB,AEDAA,EhB0BE,AczBP,AEDA,ChB0BA,EczBUA,AEDAA,EhB0BEtB,A9CkFZ,A4D3GA,AEDA,CJKF,CAAgB,AtByCHyT,GUpBM,CAAL,CAAZ,cYrBF,IAAuC,iBAAQ9R,IAA/C;AZsBE,ASZJ,AvD8FI,A0DvGFoU,AEJE,AEDA,IPcAR,IGTIpV,C1DuGC,A4D3GA0B,AEDAA,CFCL,AEDA,ChB0BOvD,ASZA,EKbEuD,AEDAA,CFCT,AEDA,GhB0BaO,A9CkFb,A0DvGF,CAAgB,EZqBd,EAAkB,ESZE,eGTtB,IAAyC,EHSX,QGTqB3D,CHSZ8W,IAAT,CAAc1T,AGTH,CHSX,CGT6B,CHSZH,CAAjB,EAAoBgO,CAApB,EAAuB;ATajD,ASZJ,AUnBF,AEDA,AEDA,ArEmHI,A0DvGA,AEJA,AEDD,AEJH,AXsBA,IWtBI+G,AXsBArB,IKbI,CHSC,AvD8FA,A0DvGA,AEJA9W,CdyBC,CAACsM,CczBP,EFIUoL,CEJC,APiBA,CPQC,AczBA,CAAZ,EFIA,C1DuGA,C0DvGiB,AMTA,OXsBO,GEJZnU,EAAEH,CAAF,ASlBkB,CTkBzB,CTYYjD,CSZCoD,EAAE6N,CAAF,CAAb,CTYO,ASZd,CTYS,EAAmB1P,CkB9BgB,GXsBV,CPQD1B,GAAL,CAAnB,CAAL,EAAoC,CORG8W,QAAT,CAAkBzW,CAAlB,EAAqBgR,EAArB,EAAyB;APSrDlR,ASZP,AvD8FG,A0DvGEA,AEJF,AEDF6X,AEJA,AXsBA,CENsB,CAAxB,OvDgGS,A4D3GAN,APiBA,EWtBES,CFICtW,EFCR,CdyBW1B,AYrBA,EEJE,GFIG6C,C1DuGhB,A8D5GF,ChB0BoBhE,AYrBP,AEJX,AEDkB,CJKC,EMTrB,CAAwBuE,CAAxB,ClB8BM,CkB9BqBP,AXsBf3C,EWtBZ,ClB8B8BqB,CkB9BC,CXsBd,CAAL,EPQuB1B,CORdqR,EPQS,CAAxB,AgB1BN,ATkBwBrS,CKbX,EAA6BmB,CILC,ETkBtB,GKbR,ALaoBE,CAArB,CKbsC,ELab,CAA9B,EKbgD,ALafgR,CKb3B,CAAT,ALaG,CAAP,ESlBmDhO,IAAnD;AhB2BK,AiB/BP,AKHA,AEDA,AtEqHI,A0DvGC,AEJF,AEDD2U,AEJE,AXsBH,CAF2B,CAA5B,OrD4FS,AgEhHAhV,EAAL,CFIQnB,EEJEmB,EAAV,ETkBWiU,GOdb,CAAoB,M9D4GlB,e8D5GF,IAA6C,UAAU9W,MAAV,EAAkB;AhB2B3DH,AQbN,AtD+FI,A0DvGA,AEJF6X,AEDE,AEJA,IViBAd,KtD+FK,AgEhHAxT,CAAL,CNSO,AILA,EhB0BE,AczBA1B,AILA0B,ClB8BP,AkB9BF,CViBW,CIRCP,AILAA,EJKL,AILA,ATkBI8T,CKbI,AILA,E9D4Gf,C4D3GF,CAAqB,KNYK,YIRjB,AILA,EJK+B3W,AEJxC,AEDwC,IFCI,CEDC6C,CJKpC,CJQyB,AIRhC,AILsC,CAAQ,SRaJgU,IMZQ3T,ENYlB,EAAkB3B,AMZpD,EEDwC,ERaN,AQbmCvB,ERaX,IQblB,EAAqC,KAAKmN,IAA1C,CAA/B,CAAP;AhB2BC,AQbH,AYrBF,AGFA,AEDA,AvEuHI,A0DvGD,AEJDuK,AEDC,AEJC,GNIF,AIFA,MReO,AtD+FA,AgEhHA7X,GAAL,CJKS6B,EILE,CAAC,CAAZ,KhEgHA,A4D3GF,CAAqB,QNYP,aMZd,IAA8C,ONYvBmV,GMZiC7W,INY1BnB,EMZgB,EAAkB,ENYlD,EAAwB0C,IAAxB,CAAP,EAAsCsV,MAAtC,CAAP;ARcC,AQbF,AEDD,AxDgGI,A0DvGFS,AEJE,AEDFO,AEJE,CVewB,CAA5B,EECId,IEPIrV,AEJA,C5D2GC,A4D3GA,AILAuW,GFIGvW,ENYE,AIXA6V,EILV,CNSF,CAAgB,CEJd,AILe,CAAC,ChEgHhB,A4D3GiB,AEDnB,AEJE,CFIkB,KNYK,UEPzB,IAAuC,AILvC,IAA2C,GNYV,GEPgBvX,IILIA,ENYX+W,AEPH,EAAkBzT,EILd,EAAkBA,CNY5B,AEPM,CFOWkC,CEPc,EILrB,CNYV,CMZmC,CNYZwR,IAAvB,EAA6BC,IAA7B,EAAmC;AVepE,AGNF,AORE,ASrBF,AEDA,AKHA,AxEyHI,A0DvGA,AEJEjX,AEDF,AEJD,IfwBCsW,ISfI,AILA,ChB0BCtW,AUdA,AxDgGA,I0DvGIoD,AILAA,CJKL,AILA,ChB0BN,AYrBaE,AEJA,AEDAA,CboBC,EKPDsT,EIRP,AEJY/T,AEDZ,CJKJ,AILA,C9D4GA,A4D3GW,CFIQ,AEJA,AEDA,MboBM,EORbmU,KAAKxR,IAAL,CAAP,CIXM,CJWayR,CIXgBjX,IJWXwF,EIXlB,CXmBuB,CORV,AIXwB,CJW3C,AIX4C,CJWnD,AIXa,CAAT,SXmB6C,4BAAc,CAAC,WAAD,CAAd,wBAA0C,SAAS8Q,SAAT,CAAmBnK,IAAnB,EAAyB+E,EAAzB,EAA6B;AHOzH,AGNC,AORD,AxDgGG,A0DvGE,AEJD,AEDC,AEJJ8G,ClBgBuD,AUF9B,CVEQ,AUFnC,CVEA,GGQMnY,GjDwFG,E0DvGE0X,AILApK,CboBC,CAAV,EapBI,CJKA,CMTWzL,CFIC4B,CJKC,I1DuGf,A0DvGE,AILA,GEJJ,CAAyB,mBAAzB,IAAgD,iBAAQJ,IAAxD;AfyBA,AmBhCF,AEDA,ACDA,AEDA,AzE2HI,A0DvGElD,AEJF,AEDC,AEJHgY,MfwBIrU,GjDwFG,E4D3GE,CXmBCuN,GAAGrS,ASfA,CEJCgE,CILCnB,ClB8BFwU,AUdAa,AIXJ,CAAQ,EXmBjB,EjDwFE,GgEhHF,CAAyB,WNSH,EEJb,EAA+B/W,CFIb6C,EAAL,CAAQ,EEJrB,AILT,CJKE,GILgD,UAAU7C,GNStC,EAA6BA,CMTD,EAAkB,GNS9C,EAAqCsD,KAArC,CAAT,CAAT;ATgBJ,AEJF,AMHA,AzD+FI,A0DvGC,AEJF,AEDC,AEJA,GJAF,CToBEkT,AMHAU,KROKrX,AjDwFA,E8D5GEG,AEJA,EboBE,AMHA,EROE2D,CexBCd,CFIZ,CboBK,AexBE,CAAQ,GfwBGsJ,AjDwFlB,ImD5FsB,AMHA,CROC+E,GAAGrR,GAAH,CAAL,CAApB,EAAmC,GexB1B,EAA+B,KboBR,AMHA,AOjBagD,EAAL,CAAQ,MboBP2T,AMHAU,MNGT,AMHA,CNGgB9T,AMHA+T,CNGhB,EAAmBzN,CAAnB,EAAsB,AapBd,EAA6B1J,MAA7B,CPiBR,COjB6C,CPiBZoX,IOjBiBa,EPiBlD,EAAyC,GOjBjC,CAA/B,CAAP;AfyBApY,AEJF,AMHA,AY3BF,AKHA,A1E6HM,A0DvGF,AEJF6X,AEDC,AEJA,GFDD,AEDA,GPmBI1X,GNGG,EFIE,ASfAA,CTeP,CWnBS0B,EHYE,EAAb,ACRE,KEJF,CAAqB,YTeF0B,CAAZ,IAAiB,ESfxB,IAA4C,GTeXqT,OAAT,ASf8BzW,GTeX,GSfC,EAAkBsD,KAAlB,EAAyB;AXoBpE,AEJC,ACLJ,AKEE,AzD+FE,A0DvGD,AEJC,AILF0U,GNGA,CNYEtB,EKEEW,GGZGxX,ETeEuD,CCLC,AQVR,CTeStE,GSfG,CAAZ,AILa4C,CboBN,CAAQ,CMHjB,EAAoB4E,CNGX,EAAc1H,ACLA,AKEvB,COjBA,CPiByB2M,AOjBA,IPiBzB,GNGS,KAA4B7B,EAAE5K,KAAF,ACLN,AYf/B,CboB6C,GapBG,CboBX,EAAcF,ECLX8X,KAAT,AYf2B1W,CZeZiD,CDKT,ACLN,CDK7B,CCL+C,EYfD,EAAkBK,KAAlB,EAAyB;AfyBzE,AEJC,ACLD,AKEA,Ac9BF,ACAA,AGFA,A3E+HM,A4D3GF,AEDF,AEJE,GbkBK,GAEH,CMHCgD,CGZC,CXmBC,AGTArD,AUXA4U,AEJAhY,CPiBP,EOjBE,CJKSuD,CRUC,AKEAgU,AGZN,CAAO9T,CILC,CAAZ,CZeK,AUXP,ELaA,AGZM,CAAJ,CRUkB,AKEA,CGZC,MRUML,CHSdpD,CGTgB,EHStB,EAAW+M,KEJLxJ,CAAT,EFIG,AEJSsG,CAAZ,CFIwBwH,AEN5B,EFMO,CAAP,GGT2B,CAAP,KAAmC,UAAhD,GAA6DjO,EAAE,oBAAF,GAA7D,GAAyFA,KAAK,IAAL,IAAaA,EAAEyL,WAAF,IAAiB,IAA9B,IAAsC,OAAOzL,EAAEyL,WAAF,CAAc,oBAAd,CAAP,KAA+C,UAArF,GAAkGzL,EAAEyL,WAAF,CAAc,oBAAd,GAAlG,GAA0IzL,KAAK,IAAL,IAAa,OAAOA,EAAEyT,KAAT,KAAmB,UAAhC,GAA6CzT,EAAEyT,KAAF,EAA7C,GAAyDzT,KAAK,IAAL,IAAaA,EAAEyL,WAAF,IAAiB,IAA9B,IAAsC,OAAOzL,EAAEyL,WAAF,CAAcgI,KAArB,KAA+B,UAArE,GAAkFzT,EAAEyL,WAAF,CAAcgI,KAAd,EAAlF,GAA0G,uBAASzT,CAAT,IAAc,EAAd,GAAmB,wBAAUA,CAAV,IAAe,EAAf,GAAoB,wBAAUA,CAAV,IAAe,EAAf,GAAoB,2BAAaA,CAAb,IAAkB,YAAY;AHUve,AEJA,ACLG,AKEAoU,AzD+FE,A0DvGJ,AEJI,AEDL,AEJG,CfiB+C,AEDzB,AW7BG,Cb8BA,AED7B,CFCA,Aa9BA,KEaQ,CNSCC,ENME1Y,AQVA2Y,E5D2GE,AgEhHAnU,CNSX,AMTM,CAAOE,CJKT,E5D2GA,C4D3Ga,CRUf,AYfI,CPiBa6T,AOjBjB,EJKE,AILiB,cPiBc7Q,GAAhB,CAAjB;ALDD,AKECiF,AgBhCJ,AGFA,A5E6FE,A0DnED,AEJKvL,AILA,CNbmB,EN0Bmc,AM1B5d,EN0B0c,MKI/b,AOjBAiY,IJKI,GXmBA3B,AEJAE,AMHGa,AOjBZ,GAAe,KAAKxX,GAApB,GPiBF,MGZoB,KAAKgD,EAAL,CAAQ,mBAAR,EAA6B7C,MAA7B,EAAqC,KAAKH,GAA1C,CAAT,CAAT;ARWJ,AKEEG,AGZC,AEDL,AEJK,IFID8X,OLaOxR,GAAP,GKba,CLaCiF,SAAS,GKbG,OLaZ,GAAsB8L,WKbF,ILaiBD,KKbRU,ELaexR,GAAP,CAAf,CAAtB,GAAoD+Q,AKbhC,CAAoBjU,CAApB,EAAuBP,EAAvB,EAA2B,ULauB0I,SAAS,QAA3B,GAAsC2L,OAAOG,cAAP,EAAuBD,OAAO9Q,GAAP,CAAvB,CAAtC,GAA4E8Q,OAAO9Q,GAAP,CAA9I;ALDF,AKEC,AiBlCH,ACDA,AEDA,A7EmIE,A0DvGF,AEJI,AEDF,AEJE,INSAkR,E1DuGEzI,CoDjGC,CAJL,CUPO,EFCE/O,AILAA,ENSE,AILA6X,C9D4GC,G4D3GV,AILA,KFIK,CAAczU,CAAd,EJKiB,AILAP,EAAjB,CAAP,K9D4GiBrE,CAAL,CAAZ,W0DvGgC,SAASgZ,MAAT,CAAgBpU,CAAhB,EAAmBP,EAAnB,EAAuB;ANOxD,AKEC,AzD+FA,A0DvGA,AEJC,AEDF,AEJE,CZSsB,AUPK,CVO9B,AUPA,CFJE,AIJA,GhEsHIkM,GyD/FG/O,ACRA,G1DuGGnB,C0DvGCyY,EDQX,GzD+FI,A8EpIkB4B,ApB6Bf,CAAU9V,CAAV,EAAaP,C1DuGC,C0DvGd,CAAP,kB1DuG0BxD,CAAL,EAAQR,MAA7B,EAAqC;AyD9FtC,AEVD,AYxBA,AvEiII,A8ErIW,ApB8Bd,CDDyB,ACDA,CDC1B,ACDA,ECAI4Y,KmB5BoByB,EnB4Bb,A3DyGA,KAAP,EoDjGWxC,A0BpCA,AhByBAoB,CgBzBmB7U,CAAnB,EAAsB,EnB4Bb,sBAAS,aAAa,4BAAc,CAAC,MAAD,CAAd,mBAAgC,SAASwU,IAAT,CAAc/Y,EAAd,EAAkB6C,IAAlB,EAAwB;AACpG,A3DyGC,A8ErID,AlB0BA,AILA,MLOI1B,GmB5BGoD,AlB0BAyU,AILAM,CcrBP,EnB4BU,CAAV,KFUad,ACRAM,CEJb,IILA;ALQA,AEJF,AexBA,AGFA,ADEC,AlB0BA,AILA,CJnB6B,AIDI,EJClC,AIDA,CHuBII,EFIEjU,MAAMpC,IEJI,CFIC1C,MAAf,MEJ2B,sBAAS,aAAa,4BAAc,EAAd,wBAA+B,SAAS+Y,SAAT,CAAmBlZ,EAAnB,EAAuB6C,IAAvB,EAA6B;AFK7G,AEJA,AKPF,AlEoHE,IkEpHE6W,ELOEvY,A7D6GAmP,G2DzGGnP,GEJG,CAAV,CKPY,CPWC8D,GAAb,EAAkB,G3DyGGyK,IkEpHI,GlEoHGnF,MAAP,CAAc,CAACzK,CAAD,CAAd,CAArB,QkEpHkC,aAAa,wBAAU,IAAV,CAAtB,CAA3B;APYI,AEJF,AczBF,AEDA,AGFA,AhFyIE,A4D3GF,AILA,IJKImZ,AILAO,EHGEvU,A7D6GAsL,E2DzGEvQ,GAAG6C,CEJCA,IFII1B,CEJChB,CKPFuZ,ANSG,CDEP,CAAH,CAAJ,CKPkB,CLOC,AEJrB,A7D6GqB/J,OAAOpF,C4D3GC,IILI,ChEgHZ,CAAc,CAAC5J,CAAD,CAAd,CAArB,W4D3GqC,IILI,KJKKsY,IILIO,OJKb,CAAqB9U,CAArB,EAAwBP,EAAxB,EAA4B,AILxB,CAAyBO,CAAzB,EAA4BP,EAA5B,EAAgC;ALQrE,AEJJ,ADEA,AILA,SHGOhD,ADEA,AILA,ILOI0B,ACFAmW,AILAM,EHGErU,GFIG9D,AEJhB,EAAkB,CFIP,CAAP,CCFG,CAAeuD,CAAf,EAAkBP,AILlB,CAAmBO,CJKnB,AILA,CJKP,CIL6BP,EAAtB,CAAP;ALQG,AEJD,AEJJ,AORA,ASjBA,AEDA,AjF2IEhD,A4D3GD,AILA,CJG8B,AILI,CJKnC,AILA,EDCIkY,AORAU,ITYI/Z,A7D6GAqQ,G6D7GGxN,G7D6GG1C,C+DjHC,CFICgB,ASZA,GTYL,CAAH,A7D6GA,C6D7GJ,EAAmB,A7D6GA,CAArB,I+DjH0B,CORC,qBPQQ,AORA,SAAS4Y,IPQI,KORb,CAAmB9G,KAAnB,EAA0B,ePQC,EAAd,uBAA8B,SAASoG,QAAT,CAAkBrZ,EAAlB,EAAsB6C,IAAtB,EAA4B;AJSxG1B,AEJE,AEJJ,AORA,AtEyHA,M+DjHIA,AORAG,GtEyHGH,E2DzGE,CAAP,AIRQ0B,CFIC1B,ESZE,CTYT,A7D6GU,C+DjHChB,AORf,AtEyHA,C4D3Ga8Y,AILAO,ChEgHI,I+DjHP,GAAc,CAAxB;AJSC,AEJE,AEJH,AILF,AGHE,AUnBF,AEDA,AlF6II,ImEtHAG,EGHExY,EtEyHEyG,C+DjHCzG,EILE,CGHC,CAAV,CtEyHYkP,E+DjHE,CAAd,EAAiB,C/DiHClP,GAAN,CmEtHU,AnEsHpB,qBmEtH4B,SAASwY,IAAT,CAAc3Z,EAAd,EAAkB;ARcjD,AEJGmB,AEJA,AILF,AGHA,AtEyHE,C2DlH0C,CAAtB,CAAxB,KICQnB,A/DiHA,CmEtHC,AGHAmB,CtEyHC,C6D7GC,AEJA0B,CFIP,GSZWoQ,CPQC9R,GAAL,CAAH,CAAJ,AORiBhB,EPQE,IORrB,EAA2B,AtEyHdyH,EmEtHC5H,CnEsHN,EmEtHSG,AnEsHCQ,CAAV,KmEtHD,AnEsHiB2O,EmEtHC,MnEsHO3O,EAAEiH,EmEtHC9H,CAAV,AnEsHO,CAAR,CmEtHca,CAAb,AnEsHeb,EmEtHC,AnEsHC8H,GAAF,CAAhB,EAAwB0I,cAAxB,EAAwCC,cAAxC,CAAlB,CAAJ,EAAgF;A6D5GjF,AEJG,AEJN,AEDI,AGHAjP,AatBJ,AnF+IM,IiErHFmY,IEDI3W,GGHGmQ,EPQEpQ,A/DiHA,EmEtHEE,EGHE5B,CXgBF4X,AIRG5X,A/DiHZ,EiErHc,AKJT,CPQE,AILQ6B,CJKf,AORgB,CAAX,CAAP,IAAwBiQ,EHGb,CAAgBhQ,EFCE,CKJC9B,EHGnB,CAAsB+B,AGHT,EAAW,CAAX,CHGb,AGHX,CHGsChD,SAA3B,EAAsC,CAAtC,CFC2B,AEDtC,aFCmD,4BAAc,EAAd,4BAAmC,SAASuZ,aAAT,CAAuBzZ,EAAvB,EAA2B6C,IAA3B,EAAiC;AJSzH,AEJG,AEJH,AEDEC,AGHA3B,AtEyHC,MiErHCA,GJQG,AMTA,CNSC,AMTN,CNSF,ASZS,CLIC0B,AKJR,EHGUlC,CAAV,EFCaR,MAAL,GAAc,CAAxB;AJSD,AEJGgB,AEJF,AEDE2B,AGHD,ASrBH,AEDA,AGFA,ApFiJI3B,C6DvH+C,CAAtB,CAA7B,MIESA,AEDA,CAAL,CJKO,A/DiHA,C+DjHP,A/DiHA,EmEtHUrB,CAAV,CFCY,CAAd,EAAiB;AFKhB,AEJC,AEDA,AGHF,AtEyHC,QiErHKE,CKJCsB,ELIEuB,AEDA7C,GAAGI,CGHZ,CLIce,EJQD+X,CIRJ,AEDA,CFCH,AEDY,CFChB,EAAmB,CEDZ,EAAepW,IAAf,CAAP;AJMH,AEJK,AEDH,AEJH,ACCC,AUvBD,AEDA,ACDA,AEDA,ArFmJE,C+DzHgD,AORrB,CPQD,AOR5B,CPQA,AIFS,CAAP,AECE+W,KrE0HK,IiErHI1Y,AjEqHX,GiErHI,QILkB,aAAa,qBAAQ,SAAS0Y,iBAAT,CAA2B7Z,EAA3B,EAA+BgE,GAA/B,EAAoC;AJM5E,AEDJ,AEJC,ArE0HD,CmE7HuB,CAAxB,IEGM8V,UAAU,ENSDT,AORAU,kBDDM/V,GAAL,CAAd;AJME7C,AILF,AiB3BF,MjB2BMA,KJKK,CAAP,AILQ,CAAV,KFIawY;AFEZ,AILD,AILF,IAAIS,KJKKjZ,AILA,MJKM2Y,OILO,CJKC3Z,MAArB,EAA6B,YILD,SAASia,EAAT,CAAYta,CAAZ,EAAea,CAAf,EAAkB;ARW9C,AILE,AILF,AUtBF,ACAA,ACDA,AEDA,QlB6BQiH,CJKC,AQVA9H,CRUC,CAAR,EQVWa,CJKCmZ,AILZ,QJKoB3Y,GAAR,CAAV;AJMH,AILGnB,AILH,ACFD,CTGuD,AQHjC,CRGW,AQHjC,CRGA,CSHIqa,GLOGrW,GKPG,CLOC4D,GAAJ,CAAH,EAAaA,GAAb,EAAkB5D,CKPC,ELOnB,mBKP2B,SAASqW,GAAT,CAAava,CAAb,EAAgBa,CAAhB,EAAmB;ALQ9CQ,AKPF,AcxBF,SdwBSrB,ELOE,CAAP,EKPUa,CAAZ,GTYa8Y,AQVAW;AJMZ,AKPF,CAFsB,CAAvB;ALUE,AgB/BF,ACAA,AGFA,SpBiCSpW,GAAP,MKPaqW;ALQd,CAToC,CAArC;ADYA,AILA,AW5BA,AIFA,AGFA,ItBqCIT,AILAK,UJKU,EILE,EHGDJ,SDEY,EILE,oBJKO,CILC,UAAU7Z,EJKE,AILZ,EAAc6C,IAAd,EAAoB,sBJKQ,SAAhB,EAA2B,SAAS+W,OAAT,CAAiB5Z,EAAjB,EAAqB6C,IAArB,EAA2B;AACrG,AILA,AKVF,IAAIgT,ETeE5Q,AILAiV,KKVK,CTeCrX,AILA,EAAV,GJKe1C,MAAf,CSfsB,mBAAI,CAAJ,CAAxB;ATgBE,AILA,AgBhCF,AGFA,AFCA,IDCIob,EpBqCEpa,AILAA,KgBhCK,CpBqCC,AILA,CJKV,AILA,KKVa0U,MWtBS,YAAY;ApBsClC,AILA,ASlBF,AOdE,IPcEkF,ETkBE9V,GJKG9D,CavBC,COdCoa,ChBgCC1Y,GJKGoC,AoBrCb,EhBgCe9E,CJKf,AoBrCgB,EpBqCE,GILlB,ASlBqB,mBAAI,CAAJ,CAAvB;AbwBIH,AILF,AGTF,ACCA,ASxBA,AGAI,AIJJ,AFCA,If0BIsa,ACCAC,GRaG1X,EILE1B,CGTC,EPcEA,AQbA,GRaL,AILQ8D,CJKX,EILF,ASlBa8V,ETkBK,GGTG,ECCE,qBAAQ,SAASR,GDD1C,ECCiC,CAAezT,IAAf,EAAqB9C,GAArB,EAA0B;ARcvD7C,AILA,AIRF,AYxBE,QhBgCIgZ,CIRCrT,AYxBA0U,EpBqCE,CAAP,KQbaxX,CJQC7C,AGTHmZ,AkBzBSqC,CLEpB,CZwBF,EYxBoB,EhBgCE,CAApB,IgBhCyBlB,GAAP,KAAe,UAAf,GAA4B,IAAIA,GAAJ,EAA5B,GAAwC,IAA1D;ApBsCD,AILC,AIRH,AYxBG,AGLJ,Cf2ByB,CAAzB,OYtBSC,EhBgCEvB,IgBhCP,GAAc,EAAd,ChBgCiBlV,GAAV,IAAiBjF,GAAG6C,KAAKsX,UAAU,CAAf,CAAH,EAAsBtX,KAAKsX,OAAL,CAAtB,CAAxB,EAA8D;AJMhE,AILIA,AOjBN,ASfG,AKPH,IdsBIM,KXsBK5X,IAAP,EWtBa,EPiBE,CAAX,AIRS0X,UGTa,wCAA5B;AXuBC,AILI,AsBxCL,AFCA,AHEA,CrBkCiD,CAAtB,CAA3B,eWdeE;APkBXP,AgBhCF,QhBgCMlL,IAAJ,CAASnM,KJKE+W,AILG3W,KAAL,CAAW9B,GAAX,EAAgBgZ,OAAhB,CAAT;AACAhZ,AgBhCF,AGRF,AIFA,ALGA,UlBuCUgZ,OAAN;AACD,AgBhCD,kBQkBsB6C;AxBetB,AUpBF,AMZE,INYEhC,KVoBKd,GAAP,EUpBY,aAAa,wBAAS,UAAUzU,GAAV,EAAeoP,IAAf,EAAqB;AVqBxD,AUpBC,AMZA0G,AKXF,AGFA,CxBgC6B,CAA7B,KgBnBOvY,ENYE6R,IAAP,GMZA,CAAe/T,GAAf,GAAqB,UAAUuG,IAAV,EAAgB;ANatC,AMZG,AKXW,AFAf,ACAA,AKHA,CfwB2B,EAExB,IAFwB,CAA3B,CWrBwBsV,ELWb,CAAChB,MhBgCG1B,AsB5CA,GNYM5S,CKXN,CAAuB4T,ELW1B,AMZUpX,ENYK,EKXZ,ELWH,AKXkC,CCDjBiZ,CNYI,IAArB,CAAR,AMZW,KAAyB,UAAzB,GAAsCjZ,OAAOiZ,MAA7C;Ad0Bf,AQbG,AKXD,GLSA,CReEpC,EaxBEO,ObwBO,GaxBG,EXuBDD,EWvBb,EAAoB,IbwBI,qBAAQ,SAASN,MAAT,CAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,OAAnC,EAA4C;ATgB9E,ASfE,AaxBE,AKLJ,AHEA,IxB0CIb,KSfK,CaxBC,ItBuCI,AsBvCAtT,SAAJ,CAAc,GtBuCG,ISfXwP,KAAKpR,GAAL,CAAS6V,STeW,CSfDxa,MAAnB,EAA2Bya,ITeM,GSfCza,GaxBxC,CAAN,EbwBY,EAA0C0a,QAAQ1a,MAAlD,CAAP,EAAkE,ETeV,OSfmB2a,ETenC,EAA2B,GSfD,GAAmB,OTeL,wBAAS,UAAUrV,GAAV,EAAe4B,IAAf,EAAqB;AACrH,ASfE,AMTJ,AEJE,AKXC,AGLH,IVoBI+T,EfwBE3V,KSfKkV,ETeE,AexBA,IfwBX,EAAiB,ESfEva,KAAV,AMTe,CNSC,IAAhB,EAAsBF,SAAtB,IAAmC0a,CMTZ,MNSmBxa,GMTVgb,ENSG,CAAa,GMTzB,CNSY,AMTIja,ENSejB,CMT/B,EAAqByU,GAArB,EAA0B9R,CNSd,CAAnC,EMTuB,CNS4CgY,CMTZ,ONSoBza,KAAR,CAAc,IAAd,EAAoBF,SAApB,CAA1E;ATgBAuF,ASfD,AILH,AEJEtE,ACFF,ACFE,AGdF,AMHA,AEDA,GnB6BS,CAAP,AIHEqD,AGNA6W,IDEIla,EfwBE,CapBC,CboBP,EexBU0B,ECFE,GDEG1C,KFIK,CEJhB,IAAqBgB,ACFA,ODEO,CAA5B,GAAgCA,GAAhC,EFIsB,CAAN,AEJsB0B,EFIb,CAAC,CAAV,AGNa,CHMrC,AEJmD1C,MAAjD,ECF4Ckb,SAAT,CAAmBla,GAAnB,EAAwBma,IAAxB,EAA8BzY,IAA9B,EAAoC;AhB2BtE,ASfF,AGTD,AGAE,ACFA1B,ACFA,AKXA,CboBwB,CAA1B,EGLIuP,EGAEpP,AOfAsb,ENaEzb,MJEM,AIFA0B,CDECE,AOfAc,GTmBAW,CGNIrE,EDEE6C,COfCiY,GNad,EJEmB,CUfZ,CNac9Z,AMb3B,CPea,CAAgB8B,KAAhB,ACFqB,CDECC,ACF7B,GAAgC/B,CDEzB,CAA2B0B,CCFlC,GDEO,ACF+BA,EJEX,AGAa,CAAjC,CAAb,CCFiD1C,MJEPuQ,AIF1C,OJEiC,CAAiBuK,MAAjB,EAAyBzI,EAAzB,EAA6B;AZyB9D/M,AYxBA,AGAAnE,ACFA,ACFA,AKXA,AKRF,AEDA,M7BgDM0N,AsBvCA7N,GVeG,AGAAuU,ACFA,ChB0BP,CAASrO,CgB1BCkD,AMbA,CAAV,EtBuCA,AexBA,CHAciI,AGAArR,ENSDuZ,AOXN,CJEUhK,AGAjB,ACFiB3N,EDEE,CAAnB,EAAsB4R,CCFC3R,CJEhB,CGAP,IHA6B,GIFZ,CAAgBC,KAAhB,CJEV,AIFgCC,IJEI,AIF1B,CJE2B,AIFAL,IAA3B,EAAiC,CAAjC,EAAoC1B,GAApC,CAAV,EAAoDma,IAApD,EAA0DvY,EJEZyP,EAAT,CAArC,CIFgExP,EJEZwP,GAAG9B,IIFG,CAAgBzN,EJEtB,CAAWgY,EIFL,CAAsB/X,GJE5B,CAApD,AIF0D,CAA2BL,EJEZ,EIFf,EAAiC1B,GAAjC,CAA1D,CAAP,cJEyFqR,EAAT,EAAayI,MAAb,EAAqB,CAArB,CAAhF;AZyBA,AYxBD,AGAC,ACFD,ACFCM,AKXA,AGRF,CbqB2B,AIHE,CJG7B,AIHA,IMVMpb,CLWC6C,EjB4BEyC,AexBAnE,GfwBP,GexBA,AOfapB,CLWb,CAAeoa,GAAf,GAAqB,EKXEna,MAAvB,ELW+BkH,IAAV,EAAgB;AjB6BtC,AexBA,AEJG,AKXF,AITF,AEDA,AEDA,C9B4CyF,AevB/D,CAA1B,Cf6BG,IANsF,CAAxC,CAAtB,AsBjClBlG,CtBiCT,CiBtBWwa,IKXIxb,GVeAuQ,AIFA2K,ECFKhU,CKXlB,EAAqB,CLWZ,EAAe,KAAf,EAAsB,IAAtB,CAAP;AACD,AKXC,GLSF,KKTMkF,SAASrM,CtBuCF8Z,AexBAoB,SOfYja,GAAV,CAAb;AACA,AFPJ,AOJA,AEDA,AEDA,QTaQoL,UAAU,IAAd,EAAoB;ALYtB,AKXI,AGXN,WHWW,IAAIsQ,OAAT,IAAoBtQ,MAApB,EAA4B;ALYhC,AKXM,AIZR,AMHA,AdqBA,IAAI0P,QINQ,CJMC,aAAa,KINTY,OAAL,EAActQ,MAAd,CAAJ,AJM0B,EINC,OJMQ0P,MAAT,CAAgBjc,EAAhB,EAAoB6C,IAApB,EAA0B;ADM1D,AKXQ+Z,AHIV,ADEE,ICFET,EDEEN,KCFK,CDEC,KINKgB,OAAP,AHIc,IGJItQ,GJM1B,IINiCsQ,OAAP,CAAlB,sBHIV;AFQE,AKXO,AMdT,ACDA,ACAA,ACDA,AEDA,AfuBE,MAAIvb,SAAS,EAAb,CCFa6a;AFQb,AKXK,AGdP,APoBE,MAAIhb,MAAM,CAAV;ADMA,AKXG,AIfL,ACAA,AOJA,AhByBE,MAAI+a,WAAJ,EAAiB7U,IAAjB;ADMA,AKXElG,ADAJ,IAAIsb,OCAO,CAAP,MDAc,aAAa,sBAAS,aAAa,8BAAgB,aAAhB,EAA+B,SAASA,WAAT,CAAqBC,SAArB,EAAgC7Z,IAAhC,EAAsC;AJYxH,AKXC,ADAD,AQlBF,AEDA,ACAA,ACDA,AEDA,AjB2BE,MGNIuS,GHMGjU,GGNG,EAAV,CHMa0B,KAAK1C,MAAlB,EAA0B;ADM1B,AKXA,ADAA,AHMEkH,MGNElG,GCAGyb,EJME/Z,CGNC,CAAV,ECAA,CJMc1B,EkB5BQ4c,ClB4Bb,CAAP;ADMF,AmBlCa,AduBd,ADAC,AHME7B,MGNE/b,GevBkB4d,MfuBTlb,GevBA,AlB6BG7C,CkB7BgBuE,CAAnB,AfuBKpE,CHMCkH,CkB7BgB,GlB6BnB,CGNhB,AHME;ADMF,AmBlCA,AXKF,AJkBE,AHME,IOxBA4V,IPwBIpB,CDKCN,AmBlCA1X,AfuBA1C,GHMGL,CDKV,EIXaX,AHMP,CkB7BQ6C,AlB6BAkZ,IOxBI,CJkBlB,EAAqB,EevBd,CAAiBpY,ClB6BlB,CAAJ,EAA0B,IkB7BrB,CAA0BZ,IAA1B,CAA+BqB,CAA/B,MAAsC,iBAA7C;AnBmCD,AmBlCA,AXKC,AJkBE,AKnBJ,AQJA,ACDA,AEDA,AbsBA,ANSMjD,CD7BkB,EAAxB,COoBIyb,IHGI5b,IGHI,CNSC6N,GGNG7O,CHMV,CAAYkH,IAAZ,COxBiBtE,EJkBE,AGHA,CHGrB,EInBgB,AJmBQ,kBGHK,SAASga,KAAT,CAAenV,GAAf,EAAoBtH,GAApB,EAAyB;ACdxD,AJkBI8U,AGHJ,ANSG,MMTCpR,IHGIgL,EGHE,EHGN,AGHJ,CHGanM,KAAK1B,GIlBG,AJkBR,CAAT,SIlB2BqR,EAAV,EAAcjO,CAAd,EAAiB;AR8BxC,AQ7BIiO,AJkBC,AQtBL,AEDA,AEDA,AKHA,AdwBExO,ANSE7C,KGRA,CGDEyG,CCfCoH,ER6BE2M,AOdP,ECfE,AJkBO,AHMA,COxBCpX,APwBR,COxBA,ADeSjE,GAAX,CPcF,CAAkB+G,IAAlB,EAAwBuU,SAAxB,EAAmCC,GAAnC,EAAwC;AHCxC,AGAE,AQ7BE,AJkBEzG,AGHJ,ANSC,IJKC8F,EGAErO,GOdG7I,CHGCgL,CIlBCwD,CDeT,CPcW,AQ7BT,CJkBE,CAAS3P,CPWC,IGAIwE,AIXAlG,GAAL,CJWb,AIXI,EAAoBub,GPWG,MOXvB,ePW+B,SAASxB,SAAT,CAAmBzN,IAAnB,EAAyB+E,EAAzB,EAA6B2I,EAA7B,EAAiC;AACpE,AGAA,AQ7BC,AJkBE,Ac3BL,AEDA,AEDA,Af0BC,ANSC,CMbuB,CAAzB,CChBoB,GRkCdW,GHAG,AILAxa,KDKP,CCLA,CDKcya,OAAd,QHAe,UAAUxX,CAAV,EAAa;AAC1B,AGAF,AQ7BA,ALWF,ACOIpD,AHMH,CAfyB,CAA1B,EEEIib,MHkBMvP,CHAC,AOXA,CAAP,EJWF,IOdakQ,CJJI,aAAa,ONkBPtP,IAAd,EAAoBlJ,CAApB,EAAuB4W,EAAvB,CAAP,EMlBoC,SAASiB,YAAT,CAAsBC,KAAtB,EAA6BC,KAA7B,EAAoC;ANmBzE,AGAC,AQpCgB,ALkBlB,ACOC,AiB9BH,AEDA,CfMA,EXkCS,EAEJ9J,CMlBC+J,CNgBG,CAAP,CGEO,OGlBP,CHkBE,CGlBcC,AFaHP,YEbb;ANmBD,AGAG,AQ7BJ,ALWE,ACOA,CPO2B,CAA7B,EWzBIiB,ELWEb,GHkBG,AIXAjH,GDPGjV,ACOV,KJWE,CGlBE,GKXe,ALWAmc,MAAMnc,MAAzB,EAAiC;AHmB7B,AQ7BJ,ALWEoc,ACOH,AkBhCD,AEDA,CpBoBqD,CAAtB,CAA/B,cDMiBF,CNkBFnB,IMlBX,CKXmB9L,MADF;AR+Bf,AQ7BJ,ALWEoN,UHkBMnV,QIXKoV,CJWI,AGlBAH,CHkBT,GQ7Ba,CR6BC,AGlBpB,IHkBwBjV,IAAJ,CQ7BSvH,CAAV,EAAaa,CR6BC,AQ7Bd,CR6BeuN,CQ7BC,OR6BjC,EAA0C;AACxC,AQ7BJ,ALWD,AexBH,AEDA,AGFA,AEDA,GtByBE,MAGO,EKXEpO,CR6BC+b,GQ7BGlb,CR6BC+a,AQ7BZ,MR6BQ,CAAW,IAAX,CAAJ,EAAsB;AACpB,AQ7BP,ALWCa,GKfiB,cRiCJ,AGlBAD,IHkBP,CGlBN;AHmBK,AQ7BP,ALWEE,AkB3BJ,ACDA,AEDA,AEDA,S1B8CQ,MAEO,IGlBIH,KAAf;AHmBM,AQnCW,ALiBlB,CKjBH,aRmCcT,SAAJ,EAAe;AACbC,AQ7BZ,ALWE,AoB9BF,AIFA,InBqBIsB,KLWK,OHkBOzB,KQ7BK,CR6BT,CAAW,IAAX,EGlBE,EHkBiB,IAAnB,gBGlBU,wCAAgBa,UAAhB,CAAR,EAAqCC,YAArC,CAAL,CAAP;AHmBS,AQ7BT,ALWD,AURD,AEJA,CZEgC,CAAhC,EUEIiB,AEJAnP,KFIK,EEJE,WFIW,CLHCzK,CODC,KPAH,cKIS,IEJE,CAAR,EAAW,EFII4Z,EAAT,CAAYC,CEJlB,CAAxB,EFI8B,EAAkBpd,GAAlB,EAAuB;Ab2B3C,AQ7BR,AEGF,AGAE,ASvBF,AEDA,ACAA,AGFA,IlB0BI+c,KGAK/c,IHAI,GGAG,Cb0BC,CGlBF8b,AYZA9N,EFIN,Eb0BC,CQ7Ba,CKGChO,EHAE,EGAE0P,KLHK1O,MAAV,AKGC,ELHiBsD,GKGG8Y,ELHrB,CEGW,CFHc,AKGvC,IAA2Cpd,IHAT+c,MAAT,CAAgBrZ,GAAhB,CGAiC0Z,CHAZ,GGArD;Ab2BO,AQ7BL,AEGF,AGAD,CAFqB,CAAtB,IHEMnU,KFHK,GEGG,mBFHKjI,CEGA0C,GAAL,CAAZ,CFHS,EAAgB,2BAAaY,KAAb,IAAsB,qBAAMA,MAAM,CAAN,CAAN,EAAgBA,MAAM,CAAN,CAAhB,CAAtB,GAAkDA,KAAlE,CAAP;AR8BG,AQ7BJ,AEGD,AazBF,AGDA,AGFA,GrBqBqB,GEOfK,MAAMsE,MAAMpJ,AGAHsd,MHAb;AV2BI,AQ7BJ,AEGA,ACCF,AKVA,ILUIH,AKVAM,ENSEzc,KMTK,CNSC,CAAV,GCCc,QKVQ,KLUK,gBKVG,KLUK,IKVIyc,IAAT,CLUcN,AKVApJ,GAAd,EAAmB,ILUd,CAAmBlQ,GAAnB,EAAwB;AX0BvD,AQnCe,AESnB,ACCA,AKVA,AQlBF,AGDA,AGFA,CtBqBA,KESMoR,ACCA7L,GKVG,ChBmCCsS,EU1BE,EV0BEL,AU1BZ,ACCY,UXyBJ,KAAmB,IAAvB,AgBnCY,CLUCxX,CXyBgB,EWzBrB,CAAZ,OKV4B;AhBoCtB,AWzBN,AKVE,ACCJ,IAAI6Z,ENSE5Y,KKVKlC,ChBmCC6Y,AWzBArS,CMTC,IDDIvG,CLUC7C,GXyBV,EAAe,CWzBrB,EKVS,ACCe,CDDC8C,KAAhB,CAAsBC,IAAtB,CAA2BhD,SAA3B,ACCuB,EDDe,CAAtC,CAAP,KCCuC2d,MAAT,CAAgB7Z,GAAhB,EAAqB;AjBmC7C8X,AQ7BK,AEGb,ACCA,AKVC,ACCD,AKnBF,AMHA,ACDA,AEDA,GfqBS,EAEJ5H,CLUC/S,AMTA2F,EDHG,CRQekW,AEGf7b,AMXP,CCGA,ENSU,CAAV,EDDa8D,EFHA,CAAkBjB,AEG/B,EAAkB,CV0BC6X,AQ7BN,EAAuB,ER6BbL,UAAJ,CAAerL,IAA1B;AACA0L,AQ7BR,AEGE,ACCF,AGTF,AEDC,ACCC,CDLsB,CAAxB,EFKI8B,ENKE,AGIAvI,AMTA3N,EPQEG,GORG,CNSC,CMTV,CjBkCY4T,AU1BAjS,ACCZ,AGTY,MJQMpI,GAAN,CV0BJ,AU1BN,CV0BqBL,EclCE,CdkCjB,CAAmBuG,IAAnB,EQ7BWrD,GAAf,CAAJ,EAAyB,OMLQ,SAAS2Z,OAAT,CAAiBpZ,CAAjB,EAAoB;AdmC7CwX,AQ7BN,AEGA,AIRF,AGAA,AMrBF,ASLA,Of0BOjV,CPQCxG,CIRCiE,ENKEP,ASLT,GTKE,AEGUA,AIRA,CGACA,GPQG4D,AIRT,AEDMgW,ACCb,EjBkCkB/B,AiBlCA,CPQN,CAAV,AIRkB,EdkCEL,UAAJ,CAAerL,IAAzB,KclCmB5L,CAAP,EAAU,qBAAMA,CAAN,CAAV,CAApB;AdmCQ,AQ7BP,AEGC,ACCF,AGTD,AGAGkD,AGTJ,CNO2B,CAA3B,EMPItH,GHSGsH,CPQC5E,CCCC1B,CMTChB,GGTG,EViBE,ACCA8E,CMTX,CjBkCa8W,CWzBf,EAAkB,AMTAjV,IAAhB,EGTsB,GpB2CGgV,KU1BTxb,GV0BV,AU1BK,EAAU8U,GAAV,IAAiBA,CUjBE,GViBE9U,GAAJ,CAAjB,EUjB4BH,CViBAiV,IAAI9U,CUjBb,CAAgBuC,CViBP,GUjBT,CViBoB,CUjBE,CViBpD;AV2BK,AQ7BP,AEGEA,ACCA,AMTD,AGTD,AIdF,AKHA,ACAA,ACDA,AEDA,MzBiCM,EGIE+E,CXoBA,AUrBC/E,AUjBAA,KViBK1C,ACCAoJ,CXyBC,EoB3CE,CNSFoU,EJQX,ACCgBxc,CSlBX,ETkBK,CDDUyG,ACCpB,CSlBqB,EViBrB,MFHe5D,GAAb,CAAJ,EAAuB,UYdUnB,KAAK1C,MAAf,CAAhB,GAAyC0C,KAAK1C,MAA9C,GAAuD2S,GAA9D;ApB4CQ,AQ7BN,AEGA3R,ACCAiU,AMTF,AGTD,CAFyB,CAA1B,MToBQpR,CMTCyD,ETKEwV,AEGA,AORT,CPQE,ACCQrV,GAAJ,CAAJ,CXyBaiU,GWzBGjU,CXyBC4T,EWzBjB,CHJA,OR6Ba,CAAelB,GAAf,CAAmBjT,IAAnB,CAAP;AACD,AQ7BN,AEGA,ACCClG,AMTH,AiB9BD,CjBuB0B,CAA1B,SNgBW,CAAP,MSlBWhB;ApB4CR,AQ7BL,AEGA,ACCC,ACRH,AMTA,INSIod,AMTAO,EVaE,CRoBA,EUjBG1I,GAAP,CV0BW,AQ7BApR,CIJC,EJIR,ESLS6Z,ACRG,GVaG,MIJM,EJIzB,EAA6B,AUbA,iBNSI,IMTI,KNSKN,IMTIO,GNSb,CAAiBlT,KAAjB,EAAwB4S,AMTpB,CAAqBvC,KNSzB,CMTI,CNS4B,CMTCzI,EAA7B,EAAiC;AlB2ChE,AQ7BJ,AEGH,ACCC,ACRA,AMTA,ActBF,AGFA,AFCA,CvByB0B,CAA1B,IQFM,GPiBG4C,ACRA,EJIE8H,CR6BC,AWzBV,COjBW1K,ClB0CC3F,EkB1CEiR,MlB0CMjC,GQ7BlB,CR6BsBH,CkB1CpB,INSU9Q,CZiCJ,AkB1CoB,ClB0CxB,EAA2B,IYjCX,CAAf,EAAkB,AMTrB,IAAwC,CAAC,ONSR,gBMTiB4H,EAAT,CAA7C,EAA2D;AlB2CnD,AQ7BP,AGIF,ACRG,AMTA,CPKyB,CAA7B,MCIQyI,GMTGzI,GlB0CGoJ,AkB1CAkC,GNSG5d,CFOFmd,KV0BL,EAAe,AkB1Cd,CAAepC,CNSCrQ,KAAV,AMTN,CNSP,AMTA;AlB2CQiR,AQ7BV,AIJE,AMTD,AWtBH,AEDA,AGFA,AEDA,GlBwBE,GVeI,EIJEZ,CMTC,IVaIjX,GR6BG0X,AQ7BV,EGIS4B,ACRG,GJIG,CR6BT,AYjCJ,CZiCezQ,GYjCG,CZiCd,EQ7BV,ER6B6B,AQ7BA,ER6BnB,mBYjC0BoO,OAAOuC,MAAP,CAAZ,CAAtB,EAAmD;AZkC3C3B,AQ7BR,AIJE,AMTF,QAAI1a,GVaGgc,EIJElC,CMTCzI,ElB0CEkJ,CkB1CCvb,GNSGqd,EZiCR,CAAW3Q,AkB1CT,EVaV,CIJS,AMTa,ClB0Cd,AkB1CR,CNSwBzM,CZiCCiH,IAAjB,AYjCC,CAAqB4T,GZiCG,GYjCxB,CZiCD,CYjC8BlY,MAAMC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BhD,SAA3B,EAAsC,CAAtC,EAAyC0K,KAAzC,CAA7B,CAAP;AZkCK,AQ7BR,AIJE,AMTD,AiB3BJ,AEDA,WnB4BWzJ,OAAO,CAAd,EAAiB;AlB2CX,AQ7BR,AIJE,AMTE,AGHN,IAAI6c,IbgBI,EIJE,AMTA,CGHC,CbgBC7b,EIJEuE,GZiCG,AQ7BT,CAAU,IR6BR,CYjCA,CAAc,ASZA,QHGP8L,GAAGrR,GAAH,CAAP,EAAgB8Z,IGHM,EHGtB,CNSuBA,AMT3B,EAA6B,GVakBjX,CIJ7B,ASZiBga,EbgBjC,CAAN,CIJyC,ASZX,CAAcC,MAAd,EAAsBC,MAAtB,EAA8B,gBTYtC,GAAuDV,MAAvD,GAAgE,GAA9E,CAAN;AZkCK,AQ7BR,AIJE,AMTK,AGHN,Ae1BF,AEDA,ALGA,GrB8BS,CAAP,KZiCM,AqBvCC,MrB6CM,AkB1CArc,GAAP,ClB0CWkG,AqB7CA8W,QrB6CQtC,GqB7ClB,CrB6CsBH,CqB7CC,KrB6CL,CAAW7O,IAAX,CAAZ,EAA8B;AACnC,AYjCT,AMTM,AGHH,AILJ,CbS2B,CAA3B,EaTI2R,KAAK,EJKE,MrB6CM,IAAP,AqB7CWvD,CILC,KJKX,EAAkB,cILC,SAASuD,EAAT,CAAY1e,CAAZ,EAAea,CAAf,EAAkB;AzBmDvC,AS9BT,ASZMQ,AGHA,AILJ,ASrBF,AGFA,AEDA,I9B4CIic,KT4BW,AyBhDNtd,EhBoBE,ESZE,AGHA,AILAa,CPQP,AORJ,CzBkDa,GYjCA4c,MHGS,QYfP,UAAUa,GZeK,EYff,EAAiB,KZeOhB,IAAT,CAAc3X,GAAd,EAAmBtB,EAAnB,EAAuBtB,IAAvB,EAA6B;AT+BnD,AS9BR,ASZG,AGHG,AILP,ACFD,CDAsB,CAAtB,ECAI4b,KjBsBK,CiBtBC,I1BoDI7C,CqB7CCsC,OAAOE,CrB6CZ,A0BpDa,E1BoDE,EqB7CV,EAAcnD,MAAd,CAAP,EZegBxV,GAAf,GiBtBsB,CjBsBA,QiBtBSgZ,GAAT,CAAa3e,CAAb,EAAgBa,CAAhB,EAAmB,IjBsBXwD,GAAGsB,GAAH,CAAR,EAAiBA,IAAI,mBAAJ,GAAjB,EAA6C5C,IAA7C,CAAtB,GAA2E,sBAAQsB,GAAG,uBAASsB,GAAT,CAAH,CAAR,EAA2B,qBAAOA,GAAP,EAAY,EAAZ,EAAgB,EAAhB,EAAoB,KAApB,CAA3B,EAAuD5C,IAAvD,CAAlF;AT+BUgZ,AS9BX,ASZG,AGHG,AKPL,ASrBF,ACDA,AEDA,AEDA,C/B4CwB,CAAxB,KYfa,EAEJsC,AKPAre,ERUE,CAAC,CAAR,CQVUa,CAAZ,C1BoDc+a,EyBlDD8C,GJKMP,CrB6CT,CAAWpR,IAAX,CqB7CgBoO,CrB6CC5T,IAAjB,CqB7CS,CAAZ,CAFI,CrB+CwB,AqB/C/B,IrB+CM;AACD,AkB1CR,AGHE,AKPJ,CAFsB,CAAvB,GLKI,aZmBW+V;AT+BL,AkB1CT,AGHE,ACRH,AiBxBA,AEDA,CvBuB+B,CAA/B,CGIE,CCFEiB,YAAY,CtBqDC,C0BpDFI,I1BoDL,OsBrDmB,qBAAQ,SAASJ,SAAT,CAAmB7c,CAAnB,EAAsB;AtBsDlD,AqB7CR,ACRC,CDAsB,CAAxB,OCAS,SJWMsc,WIXD,mBAAItc,CAAJ,CAAL,EAAa,sBAAOA,CAAP,CAAb,CAAP;AtBsDK,AsBrDN,AexBD,AKHA,AFCA,ClBwB6B,CAA7B,gBDUewc;kBCPAK;AtBsDX,AwBzDJ,AYrBA,AEDA,AKHA,AFCA,IjBwBIE,KxByDK,MwBzDM,GxByDX,UwBzDwB,qBAAQ,SAASA,QAAT,CAAkB7L,CAAlB,EAAqB;AxB0DnD,AwBzDJ,AMHF,IAAIvD,KNGK,GMHG,aAAa,INGX,iBMHmB,GNGduD,CAAL,CAAL,EAAc,EMHmBvD,KAAT,CAAe2P,EAAf,EAAmBC,GAAnB,EAAwB,ING5BrM,CAAN,CAAd,CAAP;AxB0DI,AuBvDN,ACFC,AMHC,ASrBF,AGFA,AEDA,CpByB4B,CAA5B,EDII4L,KOLKS,IAAI5P,EPKE,GOLN,CAAU2P,EAAV,KAAiB,EPKE,AOL1B,qBPKkC,SAASR,QAAT,CAAkBvW,CAAlB,EAAqB;AvBwDnD,AuBvDJ,AOLD,CAFwB,CAAzB,OPOS,CvBuDC8E,QAAQgP,AwBzDH0C,IxByDO7C,MAAhB,CuBvDQ,CvBuDgB,mBuBvDX3T,CAAL,CAAL,EAAc,yBAAUA,CAAV,CAAd,CAAP;AvBwDM,AuBvDP,AoB9BD,AFCA,AIFA,ALGA,CjB0B4B,CAA5B,UvByDYiU,M8B5DG7M,C9B4DI9H,OAAO,CAAP,GAAW,CAAtB;AACA,AiCrER,IAAI8X,MAAM,EjCqEEtD,IAAIH,EuBvDD4C,IvBuDH,CAAWzR,AiCrEA,IjCqEX,EAAiBmP,IAAjB,CAAJ,EAA4B,wBiCrED,CAAZ,CAAvB;AjCsEU,A4CvFV,AEDA,iB9CwFiB,CiCrEFmD,GjCqEL;AACD,A6BhET,IAAIN,K7B8DI,MAEO,K6BhEK,aAAa,qBAAQ,SAASA,aAAT,CAAuB7e,EAAvB,EAA2BgE,GAA3B,EAAgC;A7BiE/D,A2BtDV,AEVE,AGAF,AEPA,AQhBA,AGFA,AEDA,IpBoCI0a,AKVAQ,AEPAE,KLOK,EKPE,CFOC,EhCgEExD,C2BtDC,Q3BsDL,CkCvEc,ClCuEC,AgChEA,GLUG,GEVX,UAAUnW,GAAV,CKPe,CLOAmC,AGAC,GLUG,AEVnB,EAAoB,GKPIwX,CFOCF,GLUGR,AOjBb,CAAc7b,CFOb,CAAe6B,CAAf,CEPD,CFOmB5E,CAAlB,AEPmB,CPiBhB,CAAkBE,AKVAW,CAArB,CLUG,CKVqB,CLUC8E,GAAtB,EAA2B5C,IAA3B,EAAiC;A3BuDzDgZ,A2BtDV,AEVEpW,AGAF,AEPA,MPiBItE,EEVEyG,CGAClD,AEPA,ELOL,AGAO/D,CLUC,AKVH,CLUP,EEVaX,C7BgEC0b,AgChEAhX,EHAEV,AGAAlE,CAAF,CAAP,EhCgEG,A6BhEU8H,C7BgECiF,AgChEAlM,CAAd,CHAS,CAAH,C7BgEH,AgChEeb,CHAC8H,AGA1B,AEPW/E,ClCuEgBmZ,E6BhEd,CKPN,ClCuEG,A6BhEqBhY,GAAlB,AKPMnB,ClCuEgB,A6BhEjC,I7BgEQ,AkCvEc1C,MAAxB;AlCwES,A2BtDT,AEVE,AGAH,AEPA,ASlBD,AFCA,AOJA,ChB0ByB,AEPD,CFOxB,AEPA,IPmBM8E,KEVKQ,CFUC5C,EEVR,GFUa1C,MAAf;A3BuDQ,A2BtDR,AEVC,AMTH,GNMS,CMNLkf,CNSC,CFUC/d,CEbG,EAGA,IMTI,ERmBE,E3BsDE,A2BtDf,CKVa4d,AEPAE,IlCuEL,ImCzEgB,GNSZpb,GAAL,CAHA,CAAP,aMNgC,SAASqb,MAAT,CAAgBxc,IAAhB,EAAsB;AnC0E/C,A2BtDP,AEVD,AMTC,ASlBF,AEDA,AGFA,CpByBiC,CAAjC,IFeM8b,AQnBA1Z,MAAMpC,ERmBE,CAAC4C,EQnBEtF,CRmBH,CAAZ,IQnBA;AnC0EK,A2BtDL,ACFF,AOjBE,IPiBEye,EOjBE3Z,CnC+DA,E2B5CG9D,I3BsDI,CmCzEC,CRmBC8D,AQnBb,EAAe,CRmBf,AEVa4Z,EFUK,ACFA,aAAa,qBAAQ,SAASD,aAAT,CAAuB5e,EAAvB,EAA2ByF,GAA3B,EAAgC5C,IAAhC,EAAsC;A5ByDvE,A2BtDJ8b,ACFF,AOjBE,AUpBJ,AEDA,AGFA,MtBwCMxd,KOjBK2R,CnCyEC8I,A2BtDA5b,ACFA6C,EOjBR,CRmBW8b,ECFExe,I5BwDT,A2BtDa,CAAN,C3BsDQ,A2BtDX,ACFA,EDEa0C,CCFC,CAAxB,GDE4B1B,GAAL,CAAb,CAAR;A3BuDM0a,A2BtDNva,ACFF,AOjBC,MPiBGA,KDEKH,G3BsDGua,A2BtDV,CCFW,EAAb,CDEgBiD,E3BsDR,CAAW9R,G2BtDG,C3BsDd,A2BtDQ,CAAd,G3BsDyBxF,OAAO,CAAC,KAAD,EAAQ,IAAR,CAAP,GAAuB,CAAC,IAAD,EAAO,KAAP,CAA1C;AACD,A2BtDLlG,ACFF,AOjBA,AavBF,AGFA,MvB0CMwd,AOjBAW,KRmBK,CAAP,ECFU,AOjBA,CPiBC7Z,GAAD,AOjBIR,CPiBhB,KOjBsB,CAAtB;AnC0EM,A2BtDL,ACFD,AOjBA,MAAI9D,GPiBGA,GOjBG,CAAC8D,EnCyEE,C4BxDC,CAAd,EAAiB,AOjBAqa,CnCyEX,ImCzEI,IAAgB,CAA1B;AnC0EK,A2BtDL,ACFEX,AOjBF,AczBF,AGFA,SzB8CS,AQnBA,CRmBCA,ECFE3e,GAAG6C,CDEC,CAAN,CAAD,EAAWvB,ACFAH,GAAL,CAAH,EDEH,ACFiBwd,CDExB,EQnBY5b,GPiBkB,CAAN,CAAd,CAAR,AOjBgBC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BL,IAA3B,EAAiC,CAAjC,EAAoC8P,IAApC,CAAyC,UAAU7S,CAAV,EAAaa,CAAb,EAAgB;ARoBtE,ACFGW,AGTJ,AIRI,AIRJ,CZgB4B,CAA5B,EIAI0d,AQhBAc,OXyBO3e,AOjBArB,GPiBP,AGTU,CIRCa,AIRA,CJQJ,EPiBOge,COjBC,CAAC,CAAT,GPiBa,AOjBA7e,CPiBN,CAAd,CGTuB,CIRCa,AIRA,CJQJ,GAAQ,CAAR,GAAY,CAAhC,WJQ+B,CQhBC,QRgBQqe,CQhBCc,MRgBV,CAAiBb,CAAjB,AQhBC,CAAkBpc,CRgBCkF,CAApB,EAAuB,AQhBtB,EAAwB;AvCkFxD,A4BxDA5G,AGTF,AIRC,AIRD,AWnBF,ACDA,AEDA,GlB2Bc,EAET8B,CJQC,CAAC,E/BiEE,AuCjFA,CJMK,CPmBH,AOjBA9B,CPiBP,EOnBU,EAEEA,ERmBDud,C3BsDX,GmCzEkBY,IIRLlf,CJMH,CAAL,CAAP,EINO,CRgBS6e,AQhBK,CRgBhB,CAAL,EAAoB,AQhBb,EAAoB,CAAC,EAAD,EAAK1U,MAAL,CAAY1H,IAAZ,CAApB,CAAP;AvCkFI,A4BxDH,AGTC,AIRH,AIRA,CJFyB,AIAE,CJA5B,AIAA,SRkBWiQ,GAAP,IuBtCoBqO;AtDwGlB,AsDxGS,A1BgDb,AGTC,AqBtCH,SEDwBA,A1BgDf,C5BwDCtF,A4BxDAva,E0BhDK,CAAaiD,CtDwGdiX,AsDxGC,EAAgB,A1BgDtB,EAASmD,AOjBHU,AIRAS,MvCiFL,A4BxDc,CAAN,CAAT,CAAP,E5BwD2B,IAAvB,EAA6B;AAC3B,AsDxGN,A1BgDD,AGTC,AOdF,CVaiC,CAAjC,EUbIH,EPcE,CAAC,EuBvCE,CAACpb,CAAD,CtDwGGqX,AsDxGV,AhByBU,StC+EJ,EAAe,EsC/EE,OPcP7T,CAAX,CAAD,IAAkBA,IAAI,CAA1B,EAA6B,COdE,SAAS4X,KAAT,CAAeC,CAAf,EAAkBC,CAAlB,EAAqB;AtCgF5C/D,AsDxGT,AvBuCG,AOdF,AazBF,AIFA,SjB2BS,EPcEhJ,GAAP,IHSW8L,G5BwDM/C,IAAIL,MsC/ER,EAAR,EtC+EY,AsC/EAoE,CtC+EezP,AsC/E3B,EAAe0P,CAAf,CtC+EC,AsC/ER;AtCgFQhE,A+BjEP,AOdF,CAFwB,CAAzB,YtCiFcL,UAAJ,CAAe1a,GAAf,CAAmBuG,IAAnB;AACA0U,A+BjER,AMZF,Ae7BA,ACAA,AGFA,InB+BI2D,KNYK,CAACT,IAAIlX,AMZA,CNYJ,GAAQA,AOdH4X,CPcN,C/BiEW9D,G+BjEG9T,C/BiECyT,A+BjEtB,GMZyB,OrC6EP,CAAerL,IAAzB,eqC7E6B,YAAY;ArC8EzC,A+BjET,AMZC,CNIyB,CAA3B,OMJS,QrC6EQ4L,YAAYD,IqC7EX5b,IrC6ER,KqC7ED,CAAP;ArC8EO,AqC7ER,Ac9BD,AIFA,AEDA,CpB+B2B,CAA3B,OrC0EQ,MAKO,G+BjEA8e;A/BkEL,AoC9EV,AMTA,AFIA,AMTA,IVcIO,AMTAc,AFIAN,AMTA5T,MAAM,O9C4FO0P,CqC7EF6D,ADDG,CILC,CEJC,C1CuFClE,E8C5FE,Q9C4FN,AoC9Ec,CpC8EClB,AwCnFA,CEJC,E1CuFhB,CAAmBjT,IAAnB,CAAP,G8C5FqB,QVcQ,CILC,AMTA8E,CJKC,EILV,CAAarM,CAAb,EAAgBa,CVcC4e,AUdjB,CNSkBQ,CEJCM,AILA,SVcX,CAAqBb,CILpB,CAAsBxf,CJKvB,AMTE,CAAuBigB,AFIxB,CJKyBjgB,CILC4f,CJK3B,AILC,CEJC,CNS4B,AILAC,CEJCK,AFI9B,EAAgC,EEJ/B,EAAmC;A1CwFnE,AoC9EP,AMTA,AFIA,AMTA,AYpBF,MtBkCMT,AILAne,GEJG,AILAX,IAAIb,CVcC,AUdL,CNSM,CJKb,CILA,AMTea,CAAR,GAAYb,CAAnB,mBJKwB,UAAU4S,CAAV,EAAayN,IAAb,EAAmBC,IAAnB,EAAyB;A1CwF5C,AoC9EL,AMTE,ACFJ,AHME,AMTD,CAFsB,CAAvB,EHKIE,EHME5N,CxC0EA,AwC1EJ,EJKO,EMTEyN,E1CuFE,E0CvFT,MCFiB,SPWLngB,GAAGG,COXe,KPWzB,EAAkB,YAAY,EOXG,SAASmgB,cAAT,CAAwBL,IAAxB,EAA8BC,IAA9B,EAAoC;A3C0FtE,AoC9EJ,AMTD,ACFD,AQrBF,ACAA,AIFA,ACDA,AEDA,GjByBS,EAEJD,GNSGrY,CMXC,ACAA,EDEEsY,C1CuFC,EAAErT,AoC9EA2S,CMXL,CAAP,ENWgBpf,AUdH+L,I9C4FO0P,CoC9ER,CAAU,EpC8EEH,EoC9EZ,EAAgBxb,EpC8ElB,CAAJ,EAA2B,IoC9ErB,CAAV,COXsB,UAAUwS,CAAV,EAAayN,IAAb,EAAmBC,IAAnB,EAAyB;A3C0FzC,AoC9EN,AMTH,ACFG,AHMF,CER+B,CAAjC,KFQO1N,CJKC,AILN,CJKO,EOXE0N,CHMCR,CAAV,CxCmFYhE,C2CzFV,AHMW,GoB7BSkG,K5DgHd,EAAe,GoC9EXla,GAAL,EAAU6X,KAAV,CAAL,EAAuB;ApC+Ef5D,AoC9EN4D,AOXH,AHMC,AUjBJ,AKbA,GZsBS,COTLsB,CPWCd,GHMG,CGRC,EAEEC,CPWCtY,CctBC,EdsBP,AObG,C3C2FO8T,A2C3Fd,EDIa2E,CNSIrgB,GpC8EP,AoC9EUI,CpC8ECyM,GkDpGG,ClDoGd,AoC9EO,AILN6F,CJKe,AILpB,EAAQkN,CxCmFe,AwCnFvB,CxCmFwBvY,AoC9Eb,AILf,EJK8BnH,AILd,ExCmFW,CAAnB,MoC9EO,CAAb,GctB4B,SAAS6gB,MAAT,CAAgBvf,CAAhB,EAAmB;AlDqG1C,A4DrHX,AxBuCK,AOXJ,AHMKF,AUjBJ,CPOgC,CAAlC,OOPS,CAACE,CAAR,EViBWkR,CAAP,IAAY,mBAAKA,CAAL,EAAQmN,CAAR,IAAa7f,GAAG0S,CAAH,EAAMkN,EAAElN,CAAF,CAAN,EAAYmN,EAAEnN,CAAF,CAAZ,CAAb,GAAiCkN,EAAElN,CAAF,CAA7C;AxCoFI,AoC9EN,AILC,AUjBJ,AQhBD,AGFA,CXgB0B,CAA1B,SdwBW+M,MpC8EM,AoC9EA7X,COXF0Y,EPWJ,CAAP,CpC8EM;AACD,AoC9EN,ASfH,ALUG,AkBjCH,GtBgCS,CAAP,ASTEE,YAAY,EKPDO,WLOc,qBAAQ,SAASP,SAAT,CAAmBxgB,EAAnB,EAAuB4f,CAAvB,EAA0BC,CAA1B,EAA6B;A7C8F1D,AoC9EP,AKVD,AILE,AEDF,AEJA,AEhBA,AMHA,ACCA,ACFA,AGFA,C1BiC+B,CAA/B,EKDIG,AMNAY,AEJAE,ASlBAY,KbuBK,G7C6FG,A+C9FA,C/C8FC,EiDlGE,ASlBA,QjB4BQ,EMNE,AWtBAnd,CAAV,ETkBa,ASlBA,QjB4BQ,CzCwFb8C,A6C7FD,I7C6FT,EAAgBwU,G+C9FI,C/C8FAH,A6C7FD+E,CAAV,CILc,CJKDC,EAAb,C7C6FO,CAAW7T,A6C7FD8T,CEDGC,CFCpB,CJKsB,CzCwFf,A6C7Fc,AILEE,CjDkGhC,CAAL,A+C9FyB,CAAepc,C/C8FA,A+C9Ff,EAAkB5E,CAAlB,CNMoBkgB,AQVjB,CFIkBrf,AEJAb,CFIrB,AEJG,EFIqB,AEJAa,CAArB,EAAwB,SRUhB,CAA0BX,EAA1B,EAA8BigB,IAA9B,EAAoCC,IAApC,EAA0C;AzCyF5E,A4DxHV,AhB6BA,AHGE,AILE,ALUF,AOXA,AEJA,ASlBA,IdyBEK,GJQG7N,CAAL,CCLO,AMNAhO,AEJA5E,ASlBA,EbuBEE,AEDAW,AWtBAwF,ClBiCC0Z,AOXH,CPWP,ASfWlf,CjDkGCib,A6C7FA8E,AILZ,CTea,CKVJ,AEDKhc,EXgBD6a,ASfGoB,AEDA7gB,AWtBAyE,CXsBF,AWtBP,CdyBW,ACFT,AEDF,CFCL,AavBiBoD,E1DoHX,A+C9FahH,CAAd,C/C8FgB,C0DpHC,CXsBCb,CAAzB,KHG+B,GczBG4E,CjB4Bd,AiB5BI,EAAa,QjB4BPgO,CAAV,EAAayN,IGHM,AHGnB,EAAmBC,IAAnB,EAAyB,CGHGG,aAAT,CAAuBvgB,EAAvB,EAA2BigB,IAA3B,EAAiCC,IAAjC,EAAuC;A5C4FpErE,A4C3FV,AHGE,AILD,ALUC,AOXH,AEJA,ASlBK,AGLN,AEDA,ChB0ByB,AEJG,CFI5B,AEJA,CJKS,EAEJ+D,CAFI,EJOD,AILAC,ALUA,CIRC,ACJA,CAAP,GarBW6B,G1DoHGhG,MAAJ,A0DpHUhX,C1DoHCmI,C0DpHCtI,CAAF,CAAT,C1DoHD,AwCnFCmO,AkBjCP,ClBiCE,CxCmFqB1D,CwCnFb6Q,CAAR,CCLUM,CzCwFN,CAAsB9Y,EyCxF1B,ADKc,CAAC,CxCmFX,G4C3Fc,AHGC,UGHSqL,CAAV,EAAayN,EJQXzN,CAAL,CIRG,CJQKpR,CIRc8e,IAAnB,CHGWA,ADKd,CIR4B,AJQ/C,EAAoC,CCLb,CAAvB,EAAwC;AzCyFjC,A4C3FP,AHGE,AILL,ALUK9e,AQbN,AUpBK,CbmBwB,CAA7B,EGCIuf,CUtBK,EAAP,Id2BS7gB,EHGEggB,ADKAtN,AQbA,CJKCyN,AJQR,IIRK,AJQON,AOXHe,AEJAE,ELOKV,AJQA1N,CAAF,CAAZ,EIRK,CAAP,CILsB,IPQI1S,EAAjB,EAAqBmgB,IAArB,EAA2BC,IAA3B,CAAP,EOR4B,SAASS,MAAT,CAAgB/gB,CAAhB,EAAmBa,CAAnB,EAAsB;AhDiG9C,A4C3FP,AHGE,ADKA,AQbH,AUpBD,AIPD,AEDA,CNIA,Ed2BS,EAEJsf,AHCD,IGHK,AIHAngB,EJKEogB,AHGA,EOREvf,CAAX,CJGO,CAAP,C5C6Fe,C6C7FF6f,I7C6FL;AACD,A4C3FR,AHGK,ADKH,AQbF,CJCgC,AIHP,CJG1B,AIHA,WPUaxgB,GAAG0S,CAAH,EAAMyN,IAAN,EAAYC,IAAZ,CAAP;AzCyFE,AyCxFH,AiB5BL,AKTA,AEDA,ejE8He,G4C3FAG,AILAM,ChDgGP;AACD,A4D5HQ,AnBoCZ,ADKD,GCXO,EAMJZ,ImBpCmB6B,AnB8Bf,ADWAxgB,ECLE4e,IANF,ADWP,CCXA,iBmB9Ba,CAAkC3V,MAAlC,EAA0C;AACvD,AnBoCD,ADKA,AqB1CD,ACDA,AEDA,AEDA,CzBgCoC,ADJJ,CCIhC,ADJA,OoBxBS,qBAAQ,UAAUvK,EAAV,EAAc8C,IAAd,EAAoB;A5D6HjC,A4D5HA,S5D4HK,E4D5HE,OnBoCIkd,ADKAD,ExCmFX,Y4D5Hc7J,KAAKpR,GAAL,CAAS,CAAT,EAAY9E,GAAGG,MAAH,GAAY2C,KAAK3C,MAA7B,CAAP,EAA6C,YAAY;A5D6H9D,A4D5HA,AJYN,AOhBA,AEDA,AEDA,IXkBIkhB,MxDgHMxF,CwDhHC,EIZE7b,C5D4HC0b,E4D5HEtb,I5D4HN,CAAWyM,A4D5HR,CAAS,EJYE,CxDgHd,CAAJ,A4D5HO,E5D4He,A4D5HAtC,OAAOzH,IAAP,EAAa5C,IJYT,KIZJ,CAAf,CAAP,EJYmCmhB,IAAT,CAAcC,KAAd,EAAqBtd,GAArB,EAA0B;AxDiHlD,A4D5HH,AJYH,KIdS,CAAP,AJcE1C,SxDgHS,AwDhHA,EAAb,ExDgHM;AACD,A4D5HJ,ARcH,AIFE,AQlBF,AEDA,AEDA,GRIS,CAAP,ARkBE2f,EIFEM,CxD8GA,MAEO,AoD9GA,CIFC,EAAZ,UJEwB,qBAAQ,SAASN,MAAT,CAAgBzf,CAAhB,EAAmB;ApD+G7C,A4D5HP,ARcC,ACIF,AGNE,IHME0f,EDJEtW,AIFAzJ,EHME,IrD0GIya,AwDhHA,CAAV,CJEYpa,IAAI,CAAJ,EpD8GN,AqD1Ga,CDJC,CpD8GC,AoD9GT,GAAYA,IAAI,CAA5B,WCI2B,SAAS0f,CAAT,CAAWxc,CAAX,EAAcsG,CAAd,EAAiBzG,CAAjB,EAAoB;ArD2GvCsX,AoD9GR,ACIA,AEPF,ACCE,AMlBF,AGFA,AIFA,IdqBIuF,ECCEnc,GJEG,ACIAP,AEPA,EFOEsG,CGNCsW,CHMC/c,CrD0GCmX,AqD1GH,CAAF,CAAP,EGNgBvb,ExDgHR,CAAW0M,CuDjHC,ECCpB,CxDgHQ,IAAmB,EoD9GbjC,EpD8GN,GoD9GD,EAAc,YAAY,MGHnC;AvDkHS,AoD9GL,ACIH,CAFoB,CAArB,SDFW,OGHIwW,AeeSsB,YlBZTlhB,CAAJ,EAAOtB,SAAP,CAAP;ApD+GI,AoD9GL,AIFD,AGNF,AIdA,AIFA,GfsBS,CAAP,AONEgT,KHMK/R,EGNE,I3DsHI,AwDhHA8D,GHMAic,AGNb,ExDgHM,AwDhHY,IGNI,qBAAQ,SAAShO,IAAT,CAAc0O,GAAd,EAAmBC,GAAnB,EAAwB;A3DuHjD,AoD9GN,AIFGN,AGNF,AWnBF,ClBsB0B,CAA1B,OOHS,CHMCD,AGNAM,GAAD,EAAMC,CHMC1gB,EGNP,CHMC,AGNR,CHME,IAAoB,CAApB;AACAA,AGNH,AKhBD,AEDA,AEDA,AGFA,CZkBwB,CAAxB,SHQW,CAAP,MJEW8f;ApD+GX,AwDhHD,ACLH,IAAIO,KzDqHK,EyDrHE,MzDqHP,C2DtHWtO,MFCS,qBAAQ,SAASsO,IAAT,CAAcxhB,EAAd,EAAkB;AzDsH5C,AyDrHJ,AQnBF,AIFA,AGFA,MfuBMyhB,IzDqHIpa,KyDrHK,IzDqHI,CyDrHjB,GzDqHI,EAAmB;AACjB,AwDhHN,ACLA,AavBF,MbuBM/F,CDKC,IAAIwF,CxDgHC,AyDrHV,CzDqHW+U,EwDhHX,ExDgHeH,EwDhHE1X,GAAjB,CxDgHW,CAAW,AwDhHA,MxDgHX,CAAL,EAAyB;AACvB,AwDhHN,ACLF,AcxBF,AEDA,QjB8BQ,CAACud,ACLA,KzDqHK3F,CwDhHCtW,QxDgHL,EAAe,IwDhHhB,CAAqBwB,ACLd9G,GAAGG,CDKV,CAAL,EAAiC,ECL5B,EAAkB,YAAY;AzDsH3B0b,AmDlHZ,AKEMva,ACLF,INGA0f,IMHIS,GNGG,EKEE3a,CCLT,EzDqHY4U,AyDrHA,CDKV,IAAe1X,CxDgHT,CAAW,CmDlHC,CKEC8C,IxDgHb,AwDhHS,CAAf,GxDgH2B,IAArB,SmDlHqB,aAAa,2BAAa,aAAa,4BAAc,CAAC,KAAD,CAAd,gCAA1B,CAAtB,CAAxB;AnDmHW,AwDhHN,ACLC,Ae1BN,AEDA,ajB2BaxF,KNGE0f,CMHT;AzDsHI,AwDhHP,ACLE,iBzDqHY,KAAP;AACD,AwDhHP,ACLES,AkB7BJ,AFCA,SjBiCSngB,ICLI,EDKX,ECLE;AzDsHI,AwDhHP,ACLGA,Aa3BJ,CdewB,CAAxB,WCYatB,EzDqHE,CyDrHCI,GzDqHR,EyDrHK,CAAS,IAAT,EAAeF,SAAf,CAAT;AzDsHG,AyDrHH,ACCJ,Aa7BA,AGFA,AEDA,IlBgCIyhB,ODDOrgB,ACCA,MDDP,CDKW+f,MEJS,qBAAQ,SAASM,IAAT,CAAc3D,IAAd,EAAoBtZ,CAApB,EAAuBH,CAAvB,EAA0B;A1DqHtD,AyDrHD,ACCD,GDRO,CAAP;AzD6HE,AyDrHH,ACCC,Ac/BF,AGFA,AEDA,CpBsBwB,CAAxB;AzDiIM,A0DpHJ,kBDDaid;AzDsHT,A0DpHJ,AgBlCF,AEDA,AEDA,ALGA,SfiCSxD,KAAK,UAAUzL,CAAV,EAAa;A1DqHrB1F,A0DpHF,WAAO6U,E1DoHE7d,OAAOb,A0DpHA0B,EAAE6N,CAAF,CAAT,CAAP,I1DoHS,CAAiBzO,QAAjB,CAA0BZ,IAA1B,CAA+BmE,IAA/B,CAAP;AACA,A0DpHH,ASlBH,AUnBA,AEDA,GrBoCS,CShBLkb,CTkBChe,CAFI,EAED4B,E1DoHE,CmEtIC,CnEsIC0G,C0DtHV,O1DsHkBgP,IAAIH,AmEtIA,MnEsId,CAAJ,EAA2B,YmEtID,SAAS6G,IAAT,CAAcjB,KAAd,EAAqBtd,GAArB,EAA0B;AnEuIlD,A0DpHP,ASlBC,CTWsB,CAAxB,ISXM1C,MnEsIMsa,GmEtIG,EAAb,InEsIM,EAAe;AACbC,A6D7HV,AMTE,ACFF,AMjBA,ACAA,AKHA,InB+BIkG,AOXAS,EDEErhB,MAAM,CAAV,CnEsIYua,A6D7HA,AOXA,IVoBCiG,E1DoHL,CAAW9U,IAAX,E6D7HiB,AOXA,EpEwIE,CAACxF,IAAD,CAAnB,aoExIyB,SAASmb,OAAT,CAAiBlB,KAAjB,EAAwBtd,GAAxB,EAA6B,MPWhE;A7D8HS,AkEvIT,ACCE,ACFA,IFCEqe,EEDE/gB,GDEGH,MAAMmgB,ACFA,EAAb,CPWaS,EKVK,CCCC5hB,MAAnB,EAA2B,IDDI,qBAAQ,SAASkiB,aAAT,CAAuB5U,IAAvB,EAA6B6U,QAA7B,EAAuCte,GAAvC,EAA4C;AlEwI7E,A8DlIR,AILE,ACCE,ACFF,AQnBF,AEDA,AGFA,InB4BIge,EMNE7gB,EDEEmgB,CDDCgB,GEDG,CAAV,CDEYnhB,CnEsIC,EmEtIP,CDDUhB,CJKC,C9DkIX,EmEtIc6D,EDDb,CCCL,EDDuB,ACCA,CDDlB,IJKuB,AILAyJ,KAAK,oBAAK6U,QAAL,EAAete,GAAf,CAAL,CJK0B,AILxD,aJKqE,qCAAvC,CAAhC;A9DmIO,AiExIP,ACCC,ACCK1C,ACFJ,CFD+B,CAAjC,EDCI8gB,EGAEnd,MAAMqc,CHAC,AEEAA,KLIEU,AMNG7hB,CDECgB,GAAN,CAAP,CCFJ,EHAwB,CEEC6C,IAAIsd,MAAMngB,GAAN,CAAJ,CAArB,KFF4B,SAASihB,MAAT,CAAgBjR,CAAhB,EAAmBpJ,CAAnB,EAAsB/D,GAAtB,EAA2B;AjEyIvD,A+DpIN,AEJE,AEEG,ACFH,ACFF,AQnBA,AEDA,ACDA,AEDA,InB4BIie,AMNAQ,KJEK,AGAAthB,ICFI,EDEE8D,CLIC,EGHDod,AEDb,EAAkB,MCFM,GNMG,KEJVlR,CAAV,EAAa,UIFY,ENMA,OMNSsR,CJEhB1a,CAAL,EAAQ/D,EIFI,CJEZ,AIF4B4O,CJEzC,CAAP,EIFgC,EAAsB5O,GAAtB,EAA2B,WNMhC,CAA7B;A/DqIM,AiExIL,AEEG7C,ACFA,ACFF,CJAwB,CAA1B,IIAMG,EDEE2O,EpEwIE,CAAC,AmEtIA,CAAP,GCFWqR,ACFA,EAAb,CNMaW,GKJM9gB,GAAN,CAAX,UpEwIiBkG,IAAV,EAAgBwU,IAAIH,MAAJ,CAAW7O,IAAX,CAAhB,CAAL,EAAwC;AACtC,AgEtIR,AGAG,ACFCvL,ACFF,AKnBF,ASLA,InB4BI4gB,GKJG,IDEIjS,ACFAnJ,CrE0IC8U,CgEtIC,EIFT,ACFF,GJEawG,CGAIpe,ACFAA,ErE0IX,CqE1IN,CrE0IqB,AoExIAiM,CCFC,ELIE,CIFP,CAAf,mBJE8B,SAASiS,MAAT,CAAgBC,KAAhB,EAAuB7hB,GAAvB,EAA4B0D,GAA5B,EAAiC;AhEuIzD6X,AgEtIR,AGAA,ACFE1a,ACFA,QAAIyR,CLIC,AGAAtR,ECFE,CAAP,CCFS0C,CrE0IC0X,CmEtIZ,EEJe5U,GrE0IP,CAAW+F,AqE1IR,CAAL,EAAgB/F,CrE0Id,EAAiBkI,CqE1InB,EAAsBhL,CrE0IpB,AgEtIM,ChEsIgBqD,CqE1IxB,CAAJ,ErE0IM,AqE1I0B,eLIf8a,KAAL,EAAYne,GAAZ,CAAP,EAAyB1D,GAAzB,CAAP;AhEuIO,AgEtIR,AGAA,ACFE,ACFGgB,AYxBN,ACDA,AEDA,CpB4B0B,AGRF,CHQxB,AGRA,WEMawF,IAAP,IAAe9C,IAAI8C,IAAJ,CAAf;ArE2IE,AoExIN,ACFG,AEPL,ACFA,IDEI6b,ACFAC,KJWKthB,KGTK,ACFA,CxEmJC,AoExIb,GJEa4gB,AGAAK,EnEsIP,OuEjJmB,ACFA,qBDEQ,SAASI,OAAT,CAAiBtZ,EAAjB,EAAqBxG,ACFZ,CAAjB,CAA3B,EDEmC,EAA2B;AvEkJvD,AoExIN,ACFE,AEPD,ASlBF,AGFA,AEDA,CjBoB2B,CAA3B,OGCS,SCFM+f,aDEE,CAACvZ,EAAD,CAAR,EAAcxG,IAAd,CAAP;AvEkJI,AqE1IJ,AEPD,CAF0B,CAA3B,OFSSvB,IrE0II,EqE1IX,ErE0II,CoExISkhB;ApEUb,AqEXD,Aa5BD,AIFA,CjBsB0B,CAA1B,gBECeG;AvEkJd,kBqE1IcF;AgB9Bf,AEDA,AHEA;ApFyKA;AmFxKA,AKHA,kBxF4KelH;;AkFxKf,AGFA,ACAA,AGFA;;AFEA,ACDA,AEDA;AZqBA,IAAI4H,gBAAgB,aAAa,qBAAQ,SAASA,aAAT,CAAuB1V,IAAvB,EAA6BwC,IAA7B,EAAmCjM,GAAnC,EAAwC;AFEjF,AEDE,AWrBF,AEDA,IfuBIif,KEDKxV,IFCI,CEDCzJ,IAAIiM,IAAJ,CAAL,CAAP,EFCwB,qBAAQ,SAASgT,MAAT,CAAgBpW,IAAhB,EAAsBoD,IAAtB,EAA4BjM,GAA5B,EAAiC;AACjE,AEDD,CAFgC,CAAjC,OFGS,kBAAG6I,IAAH,EAAS7I,IAAIiM,IAAJ,CAAT,CAAP;AACD,AGHD,AMlBA,AGFA,AIFA,ChBuB0B,CAA1B,EGDI1G,QAAQ,MDEG4Z,OCFU,qBAAQ,SAAS5Z,KAAT,CAAe6Z,EAAf,EAAmBpf,GAAnB,EAAwB;ATe1C,AIbf,ACIA,AILE,ANSF,ICRI+e,ACIAC,AFIAH,EMTE5d,GTckByd,GSdZU,CJKC,CLSE,AIbD,ADQA,CMTCjjB,ETciB,CMXjB8iB,GGHb,KJKwB,CDJC,ADQA,oBEJO,CFIC,QEJQD,CFICH,KEJV,CAAgB5S,CFIf,CCRM,ADQWjQ,EEJlB,AFIC,EEJqBM,AFIAwiB,GEJtB,EAA2B9e,GAA3B,EAAgC,EFI/B,EAAmC,qBCR3C,CAA3B,EAA+D;AJc7D,AKTA,AILA,ACLF,ASjBA,ACAA,AGFA,ApBiCE,IOdEqf,EVmBEnjB,ASdAkV,GJKG,AFIA,GMTG,ACLA,EDKV,ETccjV,EIbD4iB,IJaT,GUnBmB,EVmBE,CAAzB,EAA4B,CKTdziB,AFIAwiB,GEJP,EAAY9e,IAAIiM,IAAJ,AFIQ9P,CEJpB,CAAP,AKV+B,IPcxB,EAA4B,GOdKkjB,KAAT,CAAeC,GPcC,COdhB,EAAqBC,EAArB,EAAyB;AVoBtD,AKTH,AILC,ACLA,APcE,CENsB,CAA1B,IIHMpiB,ACLA,EAAE,APcA2B,EHKE,ESdE,CAAV,CTcYX,CGLC,EAAX,EHKM,CAAU,YUnBFmhB,IAAV,KAAmB,iBVmBjB,CAAN,MUnBiCC,EAAV,CAArB,CAAJ,EAAyC;AVoBxC,AUnBC,AQlBJ,AGDA,AGFA,ArBmCI,QAAIpiB,EOdE,IAAIuF,APcA,CAAV,GEJWsc,KKVL,CAAc,yCAAd,CAAN;AVoBF,ASdA,ACLC,APcC,SHKK,ASdA7hB,ENSEA,IMTI8D,ENSE6d,CMTf,EAAkB,QTcF1iB,EGLYD,GHKrB,CAAe,EGLpB,EHKK,AGL6B,EHKR,uBAAQD,SAAR,CAArB,CAAP;AACD,AObD,AEDIkV,ACLF,AYrBF,AGFA,AtBqCMtS,IIRFogB,EGNE5hB,EDKEH,GAAJ,ANSO6N,EIRE,EEDEhL,ACLA,APcT,CAAU8e,COdd,EDKiBM,GAAGjiB,GAAH,CFCO,AEDX,CAAX,ENSyBA,GAAb,EAAkB+B,IAAlB,CAAuB,IAAvB,EAA6BhD,EIRX,QJQqBiB,CIRZ+hB,EJQE,CAA7B,CAAV,EIR4B,CAAgB5iB,GAAhB,EAAqByH,CAArB,EAAwB/D,GAAxB,EAA6B;AAC7D,AEDE7C,ACLF,APcIA,MOdAK,GHMGwC,CGNCsf,CDKC,CAAP,CNSS,COdX,APcI,EIRU,IAAP,IAAe,mBAAKvb,CAAL,EAAQ/D,GAAR,CAAf,GAA8BA,IAAI+D,CAAJ,CAA9B,GAAuCzH,GAA9C;AACD,AEDE,ACLD,AQrBF,ACAA,AIFA,ACDA,AEDA,AvBuCK,CIVqB,CAA1B,OGJSkB,IAAI+hB,EAAX,EAAe;AACbjiB,APcA,WOdO0N,APcAhP,GAAGI,COdV,CAAYoB,CAAZ,CHMW0hB,CJQJ,CAAS,IAAT,EAAepgB,KAAKyH,MAAL,CAAYxH,MAAMC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BhD,SAA3B,EAAsC4iB,aAAa3iB,MAAnD,CAAZ,CAAf,CAAP;AMRF,ACLEqB,Ae1BJ,AEDA,AxByCG,GARM,CAAP,KMDO4T,ACLA,CAAL,EDKF;AACD,ACLE,APcF,CMpBwB,ANUE,CMV3B,ANUA;AOHE,Ac3BF,AIFA,SlB6BS9T,MAAP,GDKaiI,ANSAsZ;AObd,AILD,CJNyB,CAAzB,EIMIe,QAAQ,aAAa,qBAAQ,SAASA,KAAT,CAAe5jB,EAAf,EAAmBwB,CAAnB,EAAsB;AEHvD,AEhBA,AQJA,ACDA,AEDA,Af0BE,IEJEuP,EFIE9L,MAAMlE,EEJE,INSCsiB,CILI7hB,CAAP,CAAV,MEJyB,qBAAQ,SAASuP,OAAT,CAAiBgT,KAAjB,EAAwBC,WAAxB,EAAqCjF,GAArC,EAA0C;AAC3E,AFIA,MAAI5d,GEJG4d,GFIG,CEJChO,AFIX,OEJO,CAAYgT,KAAZ,EAAmBC,WAAnB,CAAP;AHIF,AGHC,ASrBD,AKHA,AhB4BE,CENyB,CAA3B,EHKIL,ECCE9gB,IAAJ,IDDY,aAAa,uCAA3B;AIJA,IAAIohB,OAAO,OJKIN,AGHA5S,MCFS,qBAAQ,SAASkT,IAAT,CAAcjkB,EAAd,EAAkByF,GAAlB,EAAuB5C,IAAvB,EAA6B;AAC3D,AOpBF,AGFA,ACAA,ACDA,AEDA,AjB8BE,MGNI1B,AHMA8D,MGNM,AHMA,CGNV,AHMI,IAAW4N,MAAM5N,GAAN,CAAf,EAA2B;AGL3B,AHME,MGNEA,IHMI,EGNEpC,EHMEghB,GGNG1jB,MAAf,CHMQ,CAAe,iCAAf,CAAN;AkB/BJ,Af0BE,AazBF,AhB+BG,MGNGmB,SAAS,CAACmE,GAAD,CAAb;AACA,AHMA5C,SGNO1B,AHMA,IAAI4B,EGNEkC,GAAb,AHMO,CAAUA,CGNC,EHMX,CAAP;AGLEQ,AGNJ,ASpBA,AEDA,AEDA,AnBkCE,IMZEkN,KNYKxR,CGNCnB,CGNC,EHMEyF,EHMER,CGNL,EAAQpC,AHMhB,EAAkB,GGNG1B,CGNC,EHMN,CAAR,CAAN,iBGN4B,SAASwR,IAAT,CAAcnF,UAAd,EAA0B3K,IAA1B,EAAgC;ARWhE,AGNA,AEEIvB,AGNF,ANYEuB,IFFA4gB,AGNAK,KKJK/gB,ANYA5B,EGNEA,CHMP,CCRS,EKJE6B,CNYChD,CGNC,CLIC,AKJd,CHMemB,GGNGsE,AHMN,CAAZ,CMZK,CHML,AGNqBxC,CLIC,IKJjB,CRUsB,AQVAC,IAAtB,CAA2BL,IAA3B,EAAiC,CAAjC,EAAoC8P,ELIX,EKJzB,CAAyCnF,GRUX,CAAR,EAAW,AGNCsW,EHMZ,EAAe,AQVrC,CAAP,CLIgC,CAAgB3d,KAAhB,CHMqBud,CGNEliB,CAAvB,EAA0B,QHMd,CAAsBiM,IAAtB,EAA4BzN,EAA5B,EAAgCF,CAAhC,EAAmC+C,IAAnC,EAAyC;AoBhCvF,AEDA,AtBkCE,AGNA,AEEE1B,AGNH,AOpBD,AGFA,AhBkCIA,CMdoB,CAAxB,ORYS,AGNA,EEEE,AHMA,CGNP,AHMA,kBCRW,CHME,UAAUsE,GAAV,EAAelB,CAAf,EAAkB,GGNb4B,KAAP,CAAN,EAAqB3E,CAArB,CAAP;AHOE,AGNH,AEEE,AHMA,CCVuB,CAA1B,SHQWiM,KAAKhI,EQVDkN,CRUJ,EAAUpO,CAAV,IAAevE,GAAGyF,GAAH,EAAQlB,CAAR,CAAf,GAA4B,uBAASkB,GAAT,CAAnC;ADSJ,ACRG,AKJD,AgB/BF,AEDA,ArBsCE,GFJO,CDUL+d,CCRC1jB,CAFI,EAED+C,CKJCvB,AHMAuB,GFJA,CAAP,AEIA,EGNA,GNYgB,AIdHihB,aJcgB,qBAAQ,SAASN,WAAT,CAAqBxjB,EAArB,EAAyByF,GAAzB,EAA8B5C,IAA9B,EAAoC;AACzE,ACRD,AKJA,AHMA,CFN8B,AKVP,AHEC,CFQzB,AKVA,AHEA,IHoBM1B,MAAM0B,KAAK1C,CyB7COmlB,KzB6CZ,GAAc,CAAxB;AyB7Ca,AJEf,AEDA,AvB6CE,AYxBF,AMlBA,AEDA,IRmBIjX,KatBoBiX,AzB8CfnkB,GYxBG,IZwBI,CAAd,CyB9Ca,AxBsCAsiB,AKJAQ,AHMAL,CsBxCmBrf,AzB8Cf,CyB9CJ,EAAsB,GbsBZ,uBAAQ,CAAR,EAAW,OAAX,CAAzB;AarBE,AzB8CEkB,SyB9CK5B,CzB8CC7D,GAAG6C,GyB9CGG,EzB8CE7B,AYxBHkN,GZwBF,CAAH,EAAc5I,CyB9Cf,CAAiB3B,CzB8ChB,CAAN,MyB9CK,CAA0BZ,IAA1B,CAA+BqB,CAA/B,MAAsC,iBAA7C;AACD,AzB8CGpD,AQtBJ,AWtBA,AGFA,AEDA,AEDA,IlB0BI0a,MAAM,CRsBC,CAAP,WQtBmB,qBAAQ,SAASA,GAAT,CAAamC,IAAb,EAAmBrU,CAAnB,EAAsBpF,CAAtB,EAAyB;ARuBrD,AQtBD,SAAO,oBAAKyZ,IAAL,EAAW,sBAAOrU,CAAP,CAAX,EAAsBpF,CAAtB,CAAP;ARuBA,AQtBD,AmB5BD,CnB0BuB,CAAvB,ORwBSkB,GAAP;AACD,Ac/BD,ACCA,CfuB+B,CAA/B,EcxBI+e,ACCAC,YAAY,CDDC,CNSF5I,WORc,CDDC,oBCCO,CDDC,QCCQ4I,CDDCD,QCCV,CAAmB/W,CDDlB,CAAoBjM,CAApB,CCCD,CDDwBqB,CCCCA,GDDxB,CCCD,CDD8B,CCCC;AMjBpE,AEDA,ATkBE,ACCA,AOnBF,AEDA,AEDA,AEDA,IPIImiB,AEDAG,ETkBE3jB,ACCAL,KQnBK,ATkBA,CAAT,ACCU,CAAV,CDDY,GOjBG,CrBgDFqiB,MuBjDS,MFCM,MEDM,MFCM;AACxC,AEDA,ATkBE,ACCF,MAAIve,IDDI,COjBC+f,AEDAG,CRmBCtiB,EDDEV,CSlBZ,CAAcuC,CAAd,ARmBevE,EQnBEgE,ATkBT,CAAU,COjBlB,AEDA,CFCoBO,CAApB,AEDqB,ARmBrB,EMlBuBP,EAAvB,EAA2B,gDPiBnB,CAAN;AOhBA,AEDA,Ab6BJ,AGZA,ACCG,ACCD,AcxBF,InBkCIigB,AGZAE,EEEEI,GMlBGvgB,AEDAA,EFCL,AEDA,Eb6BS,CW5BCA,AEDAA,AViBA,CEEC,CMlBX,AEDA,CRmBF,SLUwB,CGZC,oBHYO,CGZC,QHYQigB,CGZCE,KHYV,CAAgBtkB,CGZf,CHYD,AGZkBuhB,EHYE1e,GGZnB,CHYD,CGZyB0hB,CHYC,IGZzB,EAA+B;AQf9D,AEDA,Ab6BF,AGZA,ACCA,MAAIjjB,GOjBGoD,AEDAA,Ab6BA3B,AGZA,CQhBL,AEDA,AViBM,GQhBG2B,AEDAA,CFCT,AEDA,Cb6BW1B,AIXA,EAAb,OJWO,CAAgBC,KAAhB,CAAsBC,AGZf,CAAN,EAASqe,CHYV,CAA2B1e,GGZ1B,CHYD,CGZiB0hB,CHYgB,CAAjC,EAAoC5R,CGZnC,CAAD,EHYA,AGZyB,CHYgB,UAAU7S,CAAV,EAAaa,CAAb,EAAgB,IGZ1B4gB,KAAN,EAAa,sBAAOgD,KAAP,CAAb,EAA4BA,KAA5B,CAAzB,CAAP;AQfC,AEDA,AhBuBH,AGMI,ACFJ,AEVC,ACCC,ACCA,AWxBF,ACAA,ACDA,AEDA,CjBsB2B,CAA3B,ENQIL,AIIAG,EGTEljB,EJWE2I,CKVC3I,GDDG,CJWCnB,AIXX,EPKa,AIIA,AIRAiF,CLUCnF,CAAH,CAAT,AKVK,IAAa,CAAC2N,KRIK,AIIA,AIRA5K,KAAK1B,GAAL,CAAL,CAArB,EAAsC,SRIJ,AIIA,SJJS+iB,AIIAG,QJJT,AIIA,CJJkBjD,AIIAlN,EJJlB,CIIA,CJJsBiQ,CIICthB,IAAvB,EAA6B,IJJ7B,EAAmC;AcrBrEmiB,AEDAG,AhBuBA,AGME,ACFF,AGTA,ACCET,OQnBG1hB,Cb6BC+G,CHNC,AIIAhH,AGTA5B,ECCE6N,EMlBEhM,AX4BAhD,ECFEgD,AGTAH,ACCX,CQnBF,AhBuBcshB,AGMAxjB,AKVAkC,CQnBC,Ab6BJ,CAAT,AGZWyhB,ECCKnkB,CCCCgB,CMlBnB,CAAqB,CV0Bd,AIRO,CJQS8B,AIRrB,CDDF,EPK0BihB,AOLA,EHSnB,CAAsBhhB,IAAtB,CY3BP,AhBuBO,AII2BL,IY3BI,AZ2B/B,CJJgC,CctBvC,AV0BwC,CAAjC,EAAoC8P,CU1BC,GV0BrC,CAAyC,CJJzC,GAA6CwR,GgBvBN3f,GZ2BY1E,CY3B1D,AZ2BgD,EU1BI0E,AV0BS7D,CAAb,EJJgBujB,AIIA,CU1BhE,OdsBoD,CAAqB9C,EAArB,CAA7C,GAAwE,2BAAY,UAAU7c,CAAV,EAAakB,GAAb,EAAkB;AcrB7Guf,AEDAG,AhBuBE,AGMA,ACFA,AGTA7jB,ACCAH,AOvBJ,AEDA,AOJA,ORSO6B,CZ2BC1B,GJJG,AGMAwI,AIXAkF,ACCA,CAAP,CMlBShM,EPiBT,CSlBF,Ab6Bc+G,AIXA,CSlBC,AZ2BA,CDEN,ACFP,GDEiB,CW5BnB,AX4BoB,CW5BC,AX4BZ,GAAeD,GHNZ,EGMiBC,EAAL,GAAU,CAAV,AIXJ5I,CSlBpB,Eb6BsC,AIXxB,CJWZ,Ca7BsC,ATkBfA,EOjBzB,IAA8C,CPiBdK,CAAlB,EAAqBqB,IAArB,CAAZ,ESlB8CvB,MFCMA,AEDtD,EhBuByBiD,CAAb,CAAH,EctBT,AdsB6BkB,GAApB,CAAP;AcrBFuf,AEDAG,AhBuBC,AGMA,ACFC,AGTD,ACCA,AEJH,GVMiF,AGIxE,CAAP,AOVEP,CVQCxD,EgBvBEpe,ChBuBC,AIIAoT,EJJH,CAF4E,CIMrE,CU1BCpT,AdsBAmhB,AIIT,EMZW,CMfb,CAAe,KFCf,CAAqB,CdoB0D,CAA/E,GUN0B,QMf1B,IAAsC,EFCtC,IAA4C,GJcV,CMfc7iB,MFCMA,AEDhB,EAAkBsD,ANebggB,IIdC,CEDN,CFCwBhgB,CEDC,CNe7B,CAAkB9E,CAAlB,CIdU,CJcWa,CIdc,AJcnC,EAAwB;AIbxD,AEDA,AhBuBH,AGMA,ACFG,AGTF,AGHA,ASvBF,AGDA,AGFA,CzB8B4B,AGIF,CHJ1B,AGIA,OavBS+D,ATkBApD,AGHAP,CMfL,CFCO,AEDA6D,AZ2BAtD,IGTT,COjBcoD,AEDZ,ANeY5E,CIdL,AJcF,CIdS8E,GJcG7D,CNYC,CU1BX,AV0BA,IU1BgB,AV0BAqV,CMZCzV,CAAP,CAAnB,CNY6BuT,CU1BC/P,EAAL,CAAQ,AV0BAhE,MAA/B,EAAuC,WU1BhB,EAA6BmB,MAA7B,EAAqCsD,KAArC,CAAhB,GAA8D,uBAAStD,MAAT,CAArE;AACD,AEDC,AZ2BEA,AGTL,ACCC,ACRF,ACIC,CHP6B,AGKF,CHL5B,AGKA,CIdE,CLYEqjB,KDQK,CAACD,CQnBC,IZ2BIxQ,CY3BC/P,ARmBP,CCRQ,COXN,AhBuBI+f,AGMAE,AKVGrhB,CQnBC,AZ2BAqT,CAAJ,EAAOtW,CAAP,CIRSkD,CJQCrC,CAAV,CAAT,GKhBwB,GDQZ,CAAgBsC,IQnBvB,CRmBO,CQnBsB3B,ARmBA4B,IAAtB,CAA2BL,CQnBlC,EAAqC+B,CRmB9B,EAAiCzD,ACRb,EOX3B,CAAP,ARmBc,CAAT,CAAP,KCR8CujB,MAAV,EAAkB7hB,IAAlB,EAAwB;AOV3D,AZ2BGuT,AIRL,ACRC,AYrBF,AEDA,ACDA,AEDA,ClBqB6B,CAA7B,CQXE,MPcO,ELgBE,CAAL,MGTSoO,AGHAI,aDJC,oBAAKF,OAAOvkB,MAAZ,EAAoB0C,IAApB,CAAP,EAAkC6hB,MAAlC,CAAP;AKTA,AV0BG,AKhBJ,CAF6B,CAA9B,OKRSM,SNkBMP,CMlBb;AACD,AEDC,AZ2BE,AOpBJ,AgBtBA,CbI8B,EAA9B,CHkBII,KKPKM,EZ2BE7jB,EY3BT,IZ2BE,CKhBWqjB,QEJW,aAAa,qBAAQ,SAASE,mBAAT,CAA6BxI,KAA7B,EAAoCC,KAApC,EAA2C;AKNzF,AZ2BE,AOpBD,CKpBsB,EAAxB,AZgCS,CAAP,KOZO,sBAAO,0BAAWD,KAAX,EAAkBC,KAAlB,CAAP,EAAiC,0BAAWA,KAAX,EAAkBD,KAAlB,CAAjC,CAAP;AGLF,AV0BC,AOpBA,AQnBD,AKHA,ACAA,ACDA,AEDA,CxBkC4B,AOZW,CPYvC,AOZA,EGJI4I,cAAc,aAAa,qBAAQ,SAASA,WAAT,CAAqBvgB,CAArB,EAAwBP,EAAxB,EAA4B;AACjE,AEDF,IAAIihB,KFCK,GEDG,CFCCJ,KV0BEX,AOpBAQ,KGNN,CAAengB,CAAf,AEDgB,EFCEP,EAAlB,CAAP,gBED+B,SAASihB,KAAT,CAAe1gB,CAAf,EAAkBP,EAAlB,EAAsB;AFEtD,AEDC,AanBF,CfkB+B,CAA/B,OECS,IAAIghB,IAAJ,CAASzgB,CAAT,EAAYP,EAAZ,CAAP;AACD,CAFwB,CAAzB,gBFGe8gB;AFKf,AcxBA,ACAA,ACDA,AEDA,IlB0BIH,AexBAkB,KAAK,SXmBMZ,YJKe,aAAa,qBAAQ,SAASN,KexBkB,kBfwB3B,CAAiCrX,IAAjC,EAAuC4O,KAAvC,EAA8CC,KAA9C,EAAqD,6BexB/F,GAA4I,cAArJ;AfyBE,ACCF,AOXA,AOdA,IdyBIyI,AOXAQ,AOdAU,KfwBK,KQVK,EOdE,IdyBI,IczBpB,GPc2B,IRUX,ECCiB,iBOXE,CAAR,EAAW,CPWG,ODDVxY,ECCmBsX,EDDlC,CQVW,CRUU1I,AQVrC,KRUgB,EAA4BC,ECCH,CAAuBtc,EDDhD,ACCyB,CDDhC,CCC2DwS,CDDhB,CCCX,EAA+B,2BDDL/E,IAAf,EAAqB6O,KAArB,EAA4BD,KAA5B,CAA3C,CAAP;AACD,ACCC,AWzBF,AGAA,AIJA,CnB0B2C,CAA3C,EetBI6J,EdyBE/kB,MAAMqR,GAAGrS,GOXAolB,COdI,EdyBP,GAAY,CAAtB,CczBwBnW,OAAOpM,SAAP,CAAiBmjB,IAAxB,KAAiC,UAApD;Ad0BE,AczBF,SdyBShlB,OAAO,CAAP,CDDM2jB,GCCM9kB,GAAGwS,GAAGrR,GAAH,CAAH,CAAnB,EAAgC;AAC9BA,Ae7BJ,ACAA,ACDA,AEDA,WnB+BW,CAAP;AACD;AACD,Aa7BF,AKHA,AEDA,SpBiCS,qBAAMA,MAAM,CAAZ,EAAe+M,QAAf,EAAyBsE,EAAzB,CAAP;AACD,AUjBD,CVWiC,CAAjC,EUXIkT,UAAU,aAAa,uBAAQ,CAAR,EAAW,aAAX,CAA3B;ANOA,AiBxBA,IjBwBIL,MAAM,QJWKN,AUjBAW,KNMQ,sBAAS,aAAa,4BAAc,EAAd,kBAAyB,SAASL,GAAT,CAAarlB,EAAb,EAAiBuE,CAAjB,EAAoB;AACxFvE,KAAGuE,CAAH;AACA,AILF,AOjBA,AEDA,AEDA,ACDA,AEDA,IdqBIihB,KJKKjhB,CAAP,IILY,aAAa,qBAAQ,SAASihB,OAAT,CAAiBxhB,GAAjB,EAAsB;AJMxD,AILC,ACCF,CLC6C,CAAtB,CAAvB,CKDIyhB,EDDExS,QAAQ,EAAZ,ACCc,aAAa,qBAAQ,SAASwS,SAAT,CAAmBzhB,GAAnB,EAAwB;ADA3D,ACCA,ASrBF,AGFA,AEDA,MdwBMiP,CDDC,IAAInM,GCCG,CDDZ,CCCA,ELIaue,CILIrhB,GAAjB,EAAsB;AFDxB,AEEI,ACCF,IHHE4O,GGGG,CDDC,GFFG,AGGA9L,IAAT,IAAiB9C,GAAjB,EHHsB,AGGA,GDDX8C,IAAL,EAAW9C,GAAX,CAAJ,EAAqB,MFFO,SAAS4O,IAAT,CAAcvG,OAAd,EAAuB0S,GAAvB,EAA4B;AAC1D,AEEI9L,ACCFA,AWxBJ,AEDA,AEDA,MlBuBM,CAAC,GGGGA,EDDEA,ICCI9S,EDDEA,ICCd,EDDE,ECCoB,CAAC2G,CDDC,CAACA,EFFZuF,AGGS,EDDE,ACCKrI,EDDEA,ECCE8C,CHH9B,CAAL,AEEqCA,EFFZ,AGGM,CAAP,CDDS,ACC/B,CDDwB,CAAtB;AFDF,AEEC,ACCF,UHHO,IAAIJ,SAAJ,CAAc,4EAA4E,wBAAS2F,OAAT,CAA1F,CAAN;AACD,AEEA,ACCD,AgB5BF,ShB4BS4G,KAAP;APMF,AIRE,AEEA,ACCD,CAN4B,CAA7B,EPWIiS,KIRK,AEEAjS,KAAP,ENMc,aAAa,OIRP5G,OAAb,EAAsBuG,IAAtB,CAA2BmM,CJQE,EIR7B,CAAP,UJQiD,4BAAc,CAAC,WAAD,CAAd,wBAA0C,SAASmG,SAAT,CAAmBllB,EAAnB,EAAuBwS,EAAvB,EAA2B;AACtH,AIRD,AEEA,AMTD,AMjBA,AEDA,ADCA,AEDA,ACDA,AEDA,CpBsBwB,AEDG,CFC3B,AEDA,EMDI4T,EZeEjlB,MAAM,AYfA,CZeV,AYfW+kB,KLUET,OKVH,IAAiB,aAAaO,GAAGG,IAAH,EAA9B,IAA2C,EAAE,aAAaF,UAAUE,IAAV,EAA1D,GAA6E,SAASA,IAAT,CAAcpH,GAAd,EAAmB;AZgB1G,AYfA,MZeI9Z,AYfAohB,MZeM7T,GAAGrS,CYfC,ERODyS,AEEA4S,EMTKlZ,CZelB,KYfc,CAAW,OAAO0Z,EAAP,GAAY,IAAZ,GAAmBA,EAAnB,GAAwB,IAAnC,CAAd;AZgBA,AUXF,AEJE,AatBF,If0BIJ,EEJEU,GZeGnlB,KYfK,CZeC8D,CUXC,EVWP,AYfSqH,IZeItM,EYfR,CZeWwS,AYfA,GZeGrR,CUXC,EVWJ,AYfM6kB,CZeT,CAApB,AYfuB,EZeU,CYfC,IAAX,GAAkBA,EAAlB,GAAuB,EFIX,GEJvB,CAAZ,KFI4CJ,SAAT,CAAmBC,SAAnB,EAA8B;AVY/D1kB,AUXF,AEJA,MFIIiV,GEJG2I,CFIC,CVWC,AUXT,CVWE,CYfShO,OAAJ,CAAYsV,OAAZ,EAAqB,EAArB,EAAyBtV,OAAzB,CAAiCuV,KAAjC,EAAwC,EAAxC,CAAP;AZgBC,AUXD,AEJD,AWtBD,AGFA,CdoBY,GAIR,EFIEhlB,OEJO6kB,EFIE,EAAb,AEJE,CAAcpH,GAAd,EAAmB;AZgBrB,AUXA,AEJA,SZeO,AUXA3I,AEJA2I,IFII8G,AEJAM,IAAJ,EAAP,IFIqBhmB,MAArB,CVWa,CAAN,AUXsB,EVWbgB,GAAT,EAAcqR,EAAd,CAAP;AACD,AUXG,AEJH,AMrBD,AEDA,AEDA,AEDA,AGFA,C3BkCmD,AYdnD,CZc6B,CAA7B,KUJQsT,YAAYD,UAAUzP,CAAV,CAAhB;AACA,AEJJ,IAAI+P,IFII5a,GEJG,CFIC,CAAR,KVWW2Z,MYfS,qBAAQkB,KAAR,CAAxB;AFKI,Ae9BJ,AGFA,WlBgCW7a,IAAIua,GEJAK,OFIUhmB,MAArB,EAA6B;AAC3B,Ae9BN,IAAI0nB,Mf8BM,Ee9BE,Kf8BKvmB,Ke9BKiD,CAAV,Cf8BYgH,CAAP,Ae9BQ,Cf8Bf,KAAqB,WAAzB,EAAsC;AACpCjK,AIRR,AWtBE,ACFF,ACDA,AEDA,If0BIslB,KWtBK,EAAEzgB,GXsBG,CJQCoF,CAAP,Ee9BUhH,CAAT,Cf8BW,Ce9BC,Cf8Bb,KIRmB,cWtBc,OXsBN,KWtBkB,IXsBTqiB,OAAT,CAAiB5mB,EAAjB,EAAqB;AJSjD,AIRL,AWtBI,SXsBG,IWtBI,IAAP,IXsBe;AJSfsB,AIRF,AWtBC,AGLL,AEDA,KLIS,EAAP,IXwBStB,EJQEuL,CAAP,AIRQxI,EJQEiM,IAAV,AIRchM,CJQC8iB,QIRP,CAAgB7iB,CJQCsI,CAAV,CAAf,EIRQ,CAAsBrI,IAAtB,CAA2BhD,SAA3B,EAAsC,CAAtC,CAAH,CAAP;AJSEqL,AGZN,ACIG,AEPH,ASfC,CAJD,EXwBE,CDFEgb,AGHAO,ONeO,CAAL,GGZS,AGHA,aHGa,AGHA,qBHGQ,AGHA,SHGSN,AGHAM,QAAT,CHGA,AGHkBC,CHGCN,IGHnB,CHGA,CGHyBzmB,CHGC0mB,CGH1B,EAA6B,IHG7B,EAAmC;AHalE,ACRL,AEJE,ACID,AEPC,AatBF,AEDA,CjB0B2B,CAA3B,EHIIX,KEJK,AGHA,MLOM,aAAa,EEJZU,CGHAM,KHGM5mB,AGHb,EAAc,IHGd,EAAqB,KFIM,CKPD,MHGO,EFIG4lB,QAAT,CAAkB3E,EAAlB,EAAsB1c,CAAtB,EAAyByf,WAAzB,EAAsC;ADStE/N,ACRF,AEJE,AGHA,ASfJ,QZkBQ,AGHA4Q,CNeC,ACRA,CDQL,MCRY7C,EGADyC,KEPQ,CAAnB,ILOwB,uBAAZ,CAAP,KAAgD,UAAhD,GAA6DzC,YAAY,uBAAZ,EAAqCzf,CAArC,EAAwC0c,EAAxC,CAA7D,GAA2G,wBAASA,EAAT,EAAa,mBAAI1c,CAAJ,EAAOyf,WAAP,CAAb,CAAlH;ADSC,ACRF,AEJK,AGHF,AWtBJ,ACDA,AIFA,AGAA,CxB8B4B,CAA5B,MKLQhe,KHGKsgB,GGHGzmB,EAAZ,CHGeI,KAAN,CAAY,IAAZ,EAAkBF,SAAlB,CAAP;AHaJ,AGZG,AGHD,ACCJ,AkB1BA,IlB0BIgnB,CJAA,CAEE,EGHE/lB,CNeCG,IGZIqlB,AIFA,CJEP,AGHQ,CNeZ,AMfE,CHGY,EFIDZ,QMNW,qBAAQ,SAASmB,MAAT,CAAgBlnB,EAAhB,EAAoBmnB,IAApB,EAA0B;APe3D,AGZK,AGHF,ACCF,AY1BF,ACAA,AGFA,AEEA,CzBwB6B,CAA7B,IOEMjU,EDDE+T,KHGKP,AIFA1mB,CDDT,ECCYmnB,IAAH,CJEQ/mB,AIFnB,KJEW,CAAc,IAAd,EAAoB,sBAAQ,CAACumB,CAAD,CAAR,EAAazmB,SAAb,CAApB,CAAP;AACD,AGHD,ACCF,AkB1BF,MlB0BMoB,KDDK0lB,ICCI,EAAb,CPcapB,SMfYmB,KAAhB,IAAyB,OAAO5gB,KAAP,KAAiB,UAAjD,EAA6D;AHI9D,AEDH,ACFM8gB,ACCJ,AW3BF,AGDA,AIEA,GtBsBS,CAAP,AEKEJ,KEDK3T,GFCG,GCFG8T,ECCE9T,KAAK/S,GFCG,GEDvB,EAA4B,EDDE4mB,KAAjB,GAAyB7mB,MDEP,ICFiBC,KDER0mB,CCF3B,GAA4C1lB,CDE1B,CAAenB,EAAf,EAAmB,ACFamG,MAAMhG,MAAjE;AHIL,AEDC,ACFIgG,ACCF7E,AkB1BJ,CtBoB4B,CAA5B,OEOS,EEDEA,GDDG6E,ICCIhG,EDDEC,ICChB,CDDU,CAAY,ECCE8S,CFCd,CAAL,ACFK,EDEGlT,ACFe+C,CCCC,CFCxB,AEDmB,CFC1B,AEDE,GDDkCC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BhD,SAA3B,EAAsCiB,GAAtC,EAA2C8lB,MAA3C,CAAlB,CAAR;ADGL,ACFKD,ACCF9T,AEPJ,AUtBA,AGDA,CjB6ByB,CAAzB,EINImU,OFOOrnB,GAAGkT,CEPC,GNSAqT,CIFI,CAAL,CAAH,CDDW,ACClB,CDDE,KGNsB,qBAAQ,SAASc,QAAT,CAAkB5Z,IAAlB,EAAwB5K,IAAxB,EAA8B;AHO5D1B,ACCH,ACXH,ACIE,AGNF,ACCA,AarBA,IlBsBIimB,AIFAK,ACCAC,EJKEvmB,MHMM8lB,AEVA,ACIA,AILA,CJKV,AGNW,KPcEJ,ACFT,OEVmB,AKDA,CDDC,oBCCO,CLCC,QKDQa,KLCK,AKDd,CAAeja,IAAf,CDDjC,CCCsDzN,EAArB,EAAyBwE,IAAzB,EAA+B,uCLCvC,CAAzB;AFWK,ACCH,AEPA,AEDF,AEJE,AUpBF,AGDA,IfyBI+iB,EFCEtiB,AILA3E,GNYGgB,GEPGuB,AILA2B,CFIC,EJQX,CMZA,CJKerE,CDJFinB,AIFAK,KHMb,GEDwB,qBAAQ,SAASF,MAAT,CAAgB9Z,IAAhB,EAAsB+Z,WAAtB,EAAmCjjB,CAAnC,EAAsC;ALQpE,ACCH,AEPC,AEDA,AEJA,AarBF,CnByB0B,CAA1B,IECMjD,GEDGmM,AEJA,CAACA,CPWCtH,GKPG5B,CFCC,AEDN,AEJMjE,CPWX,CGNF,CILQ,CFISiE,AEJjB,CFIO,CEJY,EFIEijB,YAAYjjB,CAAZ,CAArB,Ca3BOmkB;AlBmCN,AGND,AEDD,AEJGpoB,AKnBJ,AQFA,CfuB0B,CAA1B,CLHS,CAAP,EGMI+G,IAAJ,AILQrH,GAAGM,GAAH,CAAN,CNYW4mB;ADAd,AGNC,AILC,ACFH,AYnBA,CpBkB4B,CAA5B,EQCIS,KLOKxmB,MAAM8D,AKPA,GLOb,AEDasiB,EFCK,QKPQ,qBAAQ,SAASI,QAAT,CAAkB3jB,GAAlB,EAAuB;AJG3D,ADKIqD,AILF,ACFA,AKnBF,AOAA,IhBqBIigB,EIFExgB,GDEGxG,CCFP,CLOSuC,CILT,IHAc,ADKA1B,EHMD2lB,CGNJ,CAAP,SCLyB,qBAAQ,SAASQ,SAAT,CAAmB7Z,IAAnB,EAAyB4O,KAAzB,EAAgCC,KAAhC,EAAuC;AAC1E,ADKE,AILH,ACFC,AYnBF,CbeyB,CAAzB,ICIMsL,ELOE,CCLC,ADKA,EKPE,EAAT,oBJEgBna,IAAT,ADKcA,ECLC,EDKf,EAAoBpG,IAApB,EAA0B/F,MAA1B,CAAL,EAAwC,GCLZ+a,KAAR,EAAeC,KAAf,CAAf,CAAP;AACD,ADKKhb,AKPJ,AYnBF,ChBmB6B,CAA7B,KIAOwF,IAAL,ELOWxF,EKPE0C,GDEA0jB,ACFb,ELOkBvnB,AKPA,MLOd,IAAwBkH,IAAxB;AVkBN,AUjBK,AKPDugB,AYnBJ,I3B2CIjC,GexBGiC,GAAGznB,MfwBM,AexBZ,EJEWmnB,EIFKtjB,IAAI8C,IAAJ,CfwBS,AexBzB,sBfwBgC,CAAP,EAAU,SAAS6e,SAAT,CAAmBxhB,EAAnB,EAAuBnE,EAAvB,EAA2ByF,GAA3B,EAAgC5C,IAAhC,EAAsC;AAC3E,AUjBE1B,AKPD,AYnBH,S3B2CS,EUjBE,CAAP,mBViBagD,GAAG,OAAOnE,EAAP,KAAc,UAAd,GAA2B,qBAAOA,EAAP,CAA3B,GAAwCA,EAA3C,CAAR,EAAwDyF,GAAxD,EAA6D5C,IAA7D,CAAP;AACD,AUjBE,AKPD,AYnBF,C3ByC6B,CAA7B,OetBS+kB,EAAP;ALQA,AKPD,AYnBD,CZY4B,CAA5B,OLcStmB,MAAP,GViBaqkB,oByBrDN+C;AfqCR,AiB1BD,CjBa4B,CAA5B,gBKMef;ACDf,AKVA,AMPA,IXiBIG,AKVAO,OLUO,CKVC,MXmBGhB,MMTS,CKVC,oBLUO,CKVC,QLUQS,CKVCO,GLUV,CAAcrK,CKVb,CAAele,CAAf,CLUD,CKVmBa,CLUC4D,AKVnB,CLUD,CKVsB,CLUC;AACrD,AKVA,AMPF;AXkBE,ACFF,AIRE,AMPF,IVeIwjB,EIRE5mB,KJQK,CIRC,CAAV,WJQsB,qBAAQ,SAAS4mB,IAAT,CAActa,IAAd,EAAoBua,UAApB,EAAgCzjB,CAAhC,EAAmC;ADGjE,ACFA,AIRA,ACFF,ACFA,AIHA,ILKI+jB,ACFAE,EFIEhd,GLUGwS,ACFAvQ,CKVC,GDEG3N,AEJA,CPcC+nB,ACFAtjB,CAAL,AIRMpE,ILUN,ACFU6nB,EDEEzjB,AKVnB,CLUO,CMZc,CNYC4B,EOdE,GPcxB,CCF4B5B,CAAX,CAAV,GAA0BA,CAAjC,QKV6B,GCFG,MDEM+jB,GAAT,ACFYE,CDEC1oB,CAAb,EAAgBa,CAAhB,CCFG,CDEgB,ACFA4G,IAAhB,EAAsB+B,MAAtB,EAA8B;APe/D,ACFA,AIRC,ACFA,ACFA,AIHF,CXawB,ACAA,CDAxB,ACAA,IINMiC,ACFAgd,ACFApnB,CFIJ,ICFS,CCFC,CDEV,ACFA;AFKA,ACFA,ACFA,AIHF,MNOMmK,ACFAnK,ACFA8D,MDEM,ACFAiR,CFICvV,ACFX,EDEaR,EEJEgM,CPcF2b,ACFAC,EMZH,CFIV,AEJmBxgB,KAAKpH,MAAd,EAAsBmJ,OAAOnJ,MAA7B,CAAV;AFKA,ACFA,ACFA,AIHF,MNOMmB,ACFA2D,ACFAmQ,MDEMc,ACFA,EAAV,CFIa,EAAb,ACFe/J,GAAL,CAASrM,EAAEK,MAAX,EAAmBQ,EAAER,MAArB,CAAV;ADGA,ACFA,ACFA,AIHF,SNOSgB,ACFAA,ACFAA,MFIMqK,ACFAvG,ACFAA,GDEb,ACFA,CFIA,CCFkB,ACFA,CFIC,gBIzBZyjB;AJ0BLnd,ACFAgd,ACFAnT,AIHJ,OLKOjU,CDEC,AEJAoG,CFIJ,CCFA,GCFSpG,CDEC,CAACrB,CCFP,CDESqB,ACFb,GDEW,CAAD,ACFOmI,EDEE3I,EAAEQ,GAAF,ACFKA,CDEd,CAAV,CCFiB,CAAjB;AFKA,ACFAA,ACFAA,AIHJ,WNOWoK,ACFA,ACFA,CDEP,ACFA,GFIWD,IAAX,EAAiB;AACfhK,ACFH,ACFA,AIHH,aNOaA,OAAOnB,MAAd,IAAwB,CAACL,EAAEqB,GAAF,CAAD,EAASR,EAAE4K,CAAF,CAAT,CAAxB;ADNN,ACOMA,ACFJ,ACFA,IHHE6c,KEKKG,ACFAnT,EFIE,ACFT,CDEI,AEJJ,EHHY,aAAa,qBAAQ,UAAU5C,EAAV,EAAc3P,IAAd,EAAoB;AACrD,ACOG,ACFJ,ACFA,ACFD,CFLuB,ACFG,CDE1B,ACFA,ECOI4lB,KJDK,KICK,aAAa,IJDX,iBICmB,SAASA,OAAT,CAAiBzoB,EAAjB,EAAqBF,CAArB,CJDH0S,CIC2B7R,CJD3C,AICmB,CJD1B,CICqD,CJDzBkC,IAA5B,CAAP;AACD,ACOG1B,AGNF,CJHyB,CAA3B,IIGMonB,KHMK,AGNA,CHMP,CGNF,KFIaD,ACFAE;AK7Bf,APkCG,AGND,MAAIrnB,MAAM,CAAV,KJDainB;AQ1Bf,AVqCA,AGHE,AGNA,II5BEO,AVqCAV,EMTEhjB,GHMG3D,GHGG,AMTA4U,EI5BE0S,CPkCZ,EGNezc,GAAL,CI5BS0c,AJ4BA/oB,EAAEK,ENSE,GUrCX,CJ4BF,EI5BmB,AJ4BAQ,EI5B/B,AJ4BiCR,MAArB,CAAV,MNS+B,SAAS8nB,KAAT,CAAeve,IAAf,EAAqBwe,OAArB,EAA8B;AAC7D,AGHD,AGNC,CHVuB,CAAzB,KHmBO,EMTE/mB,ENSE2F,IAAT,AMTa7B,GAAb,CNSiByE,CMTC,GNSlB,EAAuB,eOpChBgf;AGAT,AVqCI,AMTAH,OAAGpnB,CNSC,EMTJ,IAAUnB,GAAGF,CHMFuoB,CGNIlnB,GAAF,CAAH,EAAWR,ENSZmG,AMTc3F,GAAF,CNSjB,AMTM,CAAV,CNSeuI,IAAX,KAAoB,CAACA,KAAK5C,IAAL,EAAWohB,QAAQphB,IAAR,CAAX,CAAzB,EAAoD;AUpCxD,AVqCM,ACRN,AKDI3F,ILCAgnB,OKDO,CAAP,CNSS,CCRC,IDQR,SCRqB,qBAAQ,SAASA,OAAT,CAAiBze,IAAjB,EAAuBwe,OAAvB,EAAgC;AWjCnE,AFKA,AVqCK,ACRH,AKDC,AKjCH,SVkCS,qBAAM,qCAAYxe,IAAZ,CAAN,EAAyBwe,OAAzB,CAAP;AWjCF,AFKA,AVqCG,ACRF,AKDC,AKjCF,CVgC2B,CAA3B,OKCSK,EAAP;AMhCF,AZ0CE,AMTD,AKjCD,CLwB2B,CAA3B,ONkBS,IAAP,KCRaJ;AWjCf,AFKA,AVqCC,AW1CD,CXmCyB,CAAzB,EU9BIW,cJ4BWL,EI5Bf;AEJA,AFKA,ACLA,IDKIM,cVqCWd,IUrCf;AEJA,ADAA;ACCA,AFKA,ACLA,SDKSe,gBAAT,GAA4B,iBHPnBN;AKGT,AFKI,ACLJ,UDKU,IAAIvmB,KAAJ,CAAU,iCAAV,CAAN;AEJJ,AFKC,ACLD;ACCA,AFKA,ACLA,SDKS8mB,mBAAT,GAAgC;AEJhC,AFKI,ACLJ,UDKU,IAAI9mB,KAAJ,CAAU,mCAAV,CAAN;AACH,ACLD;AEXA,AHiBC,ACLD,aDKa;AGhBb,AHiBI,ACLJ,QDKQ;AGhBR,AHiBQ,ACLR,YDKY,OAAO+mB,UAAP,KAAsB,UAA1B,EAAsC;AGhB9C,AHiBYJ,ACLZ,+BDK+BI,UAAnB,EHfHR;AMDT,AHiBS,ACLT,SDGQ,MAEO;AGhBf,AHiBYI,ACLZ,+BDK+BE,gBAAnB;AGhBZ,AHiBS,ACLT;AEXA,AHiBK,ACLL,KDDI,CAME,OAAOrC,CAAP,EAAU;AGhBhB,AHiBQmC,2BAAmBE,gBAAnB;AGhBR,AHiBK,ACLL,IAAIuC,eAAe,UAAnB;AEXA,AHiBI,ACLJ1C,QDKQ,ACLA2C,MAAR,GAAiB,UAAS9mB,CAAT,EAAY;AEX7B,AHiBQ,ACLN,MAAI,CAAC+mB,KDKK,ICLI/mB,CAAT,CAAL,CDKiBykB,CCLC,WDKR,KAAwB,UAA5B,EAAwC;AGhBhD,AHiBYJ,ACLR,QAAI2C,UAAU,EAAd,aDK6BvC,OHvBxBT,KGuBG;AGhBZ,AHiBS,ACLL,SDGI,ACHC,IAAItS,EDKE,ECLE,CAAb,EAAgBA,IAAIlW,UAAUC,MAA9B,EAAsCiW,GAAtC,EAA2C;AEX/C,AHiBY2S,ACLN2C,cAAQ1c,IAAR,CAAa2c,QAAQzrB,MDKM+oB,ICLI7S,CAAV,CAAR,CAAb,YDKM;AGhBZ,AHiBS,ACLJ;AEXL,AHiBK,ACLD,KDDA,CAME,KCLKsV,EDKE/E,CAAP,EAAU,GCLGrY,IAAR,CAAa,GAAb,CAAP;AEXJ,AHiBQya,ACLL,6BDK0BE,mBAArB;AGhBR,AHiBK;AGhBL,AHiBC,ACLC,CDdD,GAAD,ECcM7S,IAAI,CAAR;AEXF,AHiBA,ACLE,MAAItT,GDKGsmB,ICLIlpB,MDKb,CAAoBmpB,ECLlB,CDKF,EAAyB;AGhBzB,AHiBI,ACLF,MAAIpkB,EDKE6jB,ICLIhmB,KAAK3C,MAAf,MDK2B+oB,UAAzB,EAAqC,GH/BhCR;AMeT,AHiBQ,ACLN,MAAI3J,MAAM3P,OAAO1K,CAAP,EAAUqM,OAAV,CAAkBwa,YAAlB,EAAgC,UAAShnB,CAAT,EAAY;AEXxD,AHiBQ,ACLJ,QAAIA,MAAM,CDKC2kB,GCLX,EAAgB,MDKMG,CCLC,EDKZ,CCLK,CDKW,CAAhB,CAAP;AGhBR,AHiBK,ACLD,QAAIjT,KAAKnR,GAAT,EAAc,OAAOV,CAAP;AEXlB,AHiBI,ACLA,YAAQA,CAAR;AEXJ,AHiBI,ACLE,QDKE,CAACukB,ECLE,IAAL,eDKwBE,gBAArB,IAAyC,CAACF,gBAA3C,KAAgEI,UAApE,EAAgF;AGhBpF,AHiBQJ,ACNS,eAAO1Z,OAAOtM,KDMJomB,ACNS9S,GAAL,CAAP,CAAP,KDMT;AGhBR,AHiBQ,ACNF,WAAK,IDMI8S,ACNT,WDMoBG,GAAX,EAAgB,CAAhB,CAAP;AGhBR,AHiBK,ACPY,eAAOtoB,OAAO+B,KAAKsT,GAAL,CAAP,CAAP;AETjB,AHiBI,ACPE,QDOE,GCPG,IAAL,4BJhCGsS;AMuBT,AHiBQ,ACPA,YAAI;AETZ,AHiBQ,ACPE,eDOKI,ECPE8C,KAAKC,SAAL,CDOexC,ACPAvmB,GDOjB,EAAsB,ACPAsT,CDOtB,CAAP,CCPwB,CAAf,CAAP;AETV,AHiBK,ACPI,KDIL,CAGE,GCTE,CAEE,GDOEuQ,CAAN,EAAQ,CCPGlG,CAAP,EAAU;AETpB,AHiBQ,ACPE,YDOE,KCPK,YAAP;AETV,AHiBY,ACPH;AETT,AHiBY,ACPN,mBDOaqI,iBAAiB5lB,IAAjB,CAAsB,IAAtB,EAA4BmmB,GAA5B,EAAiC,CAAjC,CAAP;AGhBZ,AHiBS,ACPD,SDIA,CAGE,KCPK9kB,CAAP,CDOQoiB,CAAN,EAAQ;AGhBlB,AHiBY,AClBR;AEEJ,AHiBY,ACPT,GAfS,CAAV,eDsBiBmC,iBAAiB5lB,IAAjB,AH/CVwlB,CG+CgC,IAAtB,EAA4BW,GAA5B,EAAiC,CAAjC,CAAP;AGhBZ,AHiBS,ACPP,OAAK,IAAI9kB,IAAIzB,KAAKsT,CAAL,CAAb,EAAsBA,IAAInR,GAA1B,EAA+BV,IAAIzB,KAAK,EAAEsT,CAAP,CAAnC,EAA8C;AEThD,AHiBK,ACPD,QAAI0V,OAAOvnB,CAAP,KAAa,CAACwnB,SAASxnB,CAAT,CAAlB,EAA+B;AETnC,AHmBC,ACTKwa,aAAO,MAAMxa,CAAb;AETN,AHmBA,ACTK,KAFD,IDWK+kB,ECTE,aDSX,CAAyBC,MAAzB,EAAiC;AGlBjC,AHmBI,ACTExK,QDSEgK,KCTK,MAAM4C,QAAQpnB,CAAR,CAAb,EDSyB4kB,YAA3B,EAAyC;AGlB7C,AHmBQ,ACTH;AETL,AHmBQ,ACTL,eDSYA,aAAaI,MAAb,CAAP;AGlBR,AHmBK,ACTH,SAAOxK,GAAP;AETF,AHmBI,ACTH,CApCD,uCJZS2J;AMuCT,AHmBI,QAAI,CAACK,uBAAuBE,mBAAvB,IAA8C,CAACF,kBAAhD,KAAuEI,YAA3E,EAAyF;AGlB7F,AHmBQJ,ACRR,6BDQ6BI,YAArB;AGlBR,AHmBQ,ACRR,eDQeA,aAAaI,MAAb,CAAP;AGlBR,AHmBK,ACRL;AEVA,AHmBI,ACRJV,QDQQ,ACRAmD,SAAR,GAAoB,UAAShsB,EAAT,EAAaisB,GAAb,EAAkB;AEVtC,AHmBQ,ACRN;AEVF,AHmBQ,ACRN,MAAIC,SDQSnD,GCRGvc,OAAOmc,OAAnB,CAAJ,CDQgCY,CCRC,KDQpB,CAAP;AGlBR,AHmBK,ACRD,KDKA,CAGE,KCRK,EDQE5C,CAAP,EAAS,OCRO;AEVtB,AHmBQ,ACRF,YDQM,CCRCkC,QAAQmD,SAAR,CAAkBhsB,EAAlB,EAAsBisB,GAAtB,EAA2B7rB,IJzD/BsoB,CIyDI,CAAiC,IAAjC,EAAuCxoB,SAAvC,CAAP;AEVN,AHmBY,ACRP,KAFD;AERJ,AHmBY,ACRT,mBDQgB6oB,mBAAmB7lB,IAAnB,CAAwB,IAAxB,EAA8BqmB,MAA9B,CAAP;AGlBZ,AHmBS,SAHD,CAGE,OAAO5C,CAAP,EAAS;AGlBnB,AHmBY,ACRV,MAAIgC,QAAQwD,aAAR,KAA0B,IAA9B,EAAoC;AEVtC,AHmBY,ACRR,WAAOnsB,EAAP;AEVJ,AHmBY,ACRT,mBDQgB+oB,mBAAmB7lB,IAAnB,CAAwB,IAAxB,EAA8BqmB,MAA9B,CAAP;AGlBZ,AHmBS;AGlBT,AHmBK,ACRH,MAAI6C,SAAS,KAAb;AEVF,AHsBC,ACXC,WAASC,UAAT,GAAsB,eJjEf3D;AMuDT,AHsBA,ACXI,IDWAc,ICXI,CAAC4C,GDWG,EAAZ,CCXI,EAAa;AEVjB,AHsBA,ACXM,IDWF3C,MCXMd,KDWK,GCXG2D,EDWlB,cCXM,EAA8B;AEVpC,AHsBA,ACXQ,IDWJ5C,UCXU,EDWd,ECXkBvnB,KAAJ,CAAU8pB,GAAV,CAAN;AEVR,AHsBA,ACXO,IDWHtC,GCbE,MAEO,IDWI,ACXAhB,CDWC,CAAlB,MCXyB4D,gBAAZ,EAA8B;AEV3C,AFWQC,gBAAQC,KAAR,CAAcR,GAAd;AEVR,AHsBA,ACXO,OAFM,EDaJrC,ICXI,WDWb,GAA2B;AGrB3B,AHsBI,ACXI4C,QDWA,CAAC/C,OCXOiD,CDWR,IAAa,ACXb,CDWchD,ACXAuC,GAAd,SDWJ,EAAgC;AGrBpC,AHsBQ,ACXD;AEVP,AHsBK,ACXCG,eAAS,IAAT,0BJzEG1D;AM+DT,AHsBIe,ACXC,eDWU,KAAX;AGrBJ,AHsBI,ACXA,QDWIC,GCXG1pB,GAAGI,KAAH,CAAS,CDWCD,GCXV,EAAeD,CDWtB,EAAyB,MCXlB,CAAP;AEVJ,AHsBQspB,ACXL,gBDWaE,aAAanf,MAAb,CAAoBif,KAApB,CAAR;AGrBR,AHsBK,KAFD,MAEO;AGrBX,AHsBQG,ACXN,SAAO0C,UAAP,EDWmB,CAAC,CAAd;AGrBR,AHsBK,ACXJ,CA5BD;AEkBA,AHsBI,QAAI7C,MAAMrpB,MAAV,EAAkB;AGrBtB,AHsBQ0pB,ACVR,IAAI8C,SAAS,EAAb;AEXA,AHsBK,ACVL,IAAIC,YAAJ,2BJlFSlE;AMuET,AHsBC,ACVDG,QAAQgE,QAAR,GAAmB,UAAShR,GAAT,EAAc;AEXjC,AFYE,MAAIqQ,YAAYU,YAAZ,CAAJ,EACEA,eAAe,aAA0B,EAAzC;AEZJ,AHsBA,ACTE/Q,QAAMA,CDSCgO,GCTGiD,ODSZ,GAAsB,CCTd,EAAN;AEZF,AHsBI,ACTF,MAAI,CAACH,CDSClD,MCTM5N,EDSV,CCTG,CDSW,ACThB,EAAkB;AEZpB,AHsBQ,ACTJ,QAAI,IAAIvP,MAAJ,CAAW,QAAQuP,GAAR,GAAc,KAAzB,EAAgC,GAAhC,EAAqCjJ,IAArC,CAA0Cga,YAA1C,CAAJ,EAA6D;AEZjE,AHsBK,ACTC,UAAIG,MAAMpE,QAAQoE,GAAlB;AEZN,AHsBI,ACTEJ,QDSE7C,KCTKjO,GAAP,EDSYuN,ECTE,SDSSQ,GCTE,YDSb,CAAd;AGrBJ,AHsBIH,ACTI,YAAIwC,GDSG,GCTGpD,CDSd,OCTsB2C,MAAR,CAAeprB,KAAf,CAAqByoB,OAArB,EAA8B3oB,SAA9B,CAAV;AEZR,AFaQssB,gBAAQE,KAAR,CAAc,WAAd,EAA2B7Q,GAA3B,EAAgCkR,EJ3F/BrE,CI2FD,EAAqCuD,GAArC;AEZR,AHsBI,ACTG,OAHD,CDYEhnB,MAAMukB,MAAMrpB,MAAhB;AGrBJ,AHsBI,ACTC,KAND,MDeM8E,ACTC,GDSP,EAAW;AGrBf,AHsBQykB,ACTFiD,aAAO9Q,GAAP,IAAc,GDSG2N,KAAf,ICTuB,CAAE,CAA3B;AEZN,AHsBQA,ACTH,gBDSW,EAAR;AGrBR,AHsBQ,ACTL,eDSY,EAAEG,UAAF,GAAe1kB,GAAtB,EAA2B;AGrBnC,AHsBY,ACTV,SAAO0nB,ODSOjD,ACTA7N,GAAP,CAAP,QDSU,EAAkB;AGrB9B,AHsBgB6N,ACTf,CAhBD,4BDyB6BC,UAAb,EAAyBI,GAAzB;AGrBhB,AHsBa;AGrBb,AHsBS,ACRT,8CJpGSrB;AMuFT,AHsBQiB,qBAAa,CAAC,CAAd;AGrBR,AHsBQ1kB,cAAMukB,MAAMrpB,MAAZ;AGrBR,AHsBK;AGrBL,AHsBIupB,mBAAe,IAAf;AGrBJ,AHsBID,eAAW,KAAX;AGrBJ,AHsBIH,oBAAgBQ,OAAhB;AGrBJ,AHsBC,ACRD;AEbA,AFcA,SAAS6B,OAAT,CAAiB3nB,GAAjB,EAAsBgpB,IAAtB,EAA4B;AEb5B,AHsBArE,ACRE,QDQMqB,QAAR,GAAmB,UAAUX,GAAV,EAAe,UHpHzBX;AM+FT,AHsBI,ACRF,MAAI/Z,EDQE7L,ICRI,GDQG,IAAIC,KAAJ,CAAU7C,UAAUC,MAAV,GAAmB,CAA7B,CAAX;AGrBJ,AHsBI,ACRAkS,QDQInS,ECRE,EADE,MDSMC,MAAV,GAAmB,CAAvB,EAA0B;AGrB9B,AHsBQ,ACRJ8sB,aDQS,ACRAC,IDQI9W,IAAI,CAAb,EAAgBA,IAAIlW,UAAUC,MAA9B,EAAsCiW,GAAtC,EAA2C;AGrBnD,AHsBYtT,ACXA,GAAV,cDWesT,IAAI,CAAT,IAAclW,UAAUkW,CAAV,CAAd;AGrBZ,AHsBS,ACRP;AEbF,AHsBK,ACRH,MAAIlW,UAAUC,MAAV,IAAoB,CAAxB,EAA2BwO,IAAIoY,KAAJ,GAAY7mB,UAAU,CAAV,CAAZ;AEb7B,AHsBIspB,ACRF,MAAItpB,IDQI8O,IAAN,CAAW,CCRC7O,GDQG8pB,GCRb,CDQS,CAASZ,ECRE,CDQX,ACRb,EDQ2BvmB,ACRA6L,IDQd,ACRkBwe,CDQ7B,KCRyB,GAAajtB,UAAU,CAAV,CAAb;AEb7B,AHsBI,ACRF,MAAIktB,EDQE5D,MAAMrpB,ECRE6sB,IDQR,ACRF,CAAJ,EAAqB,EDQE,CAAjB,IAAsB,CAACvD,QAA3B,EAAqC;AGrBzC,AHsBQL,ACRJ,mBDQeS,UAAX,cH5HCnB;AMuGT,AHsBK,ACRD/Z,QAAI0e,UAAJ,GAAiBL,IAAjB;AEbJ,AHsBC,ACRE,CDHH,ECAE,MAGO,IAAIA,IAAJ,EAAU;AEbnB,AFcI;AEbJ,AHsBA,ACRInE,YAAQyE,OAAR,CAAgB3e,GAAhB,EAAqBqe,IAArB;AEbJ,AHsBA,ACRG,SDQM/C,IAAT,CAAcZ,GAAd,EAAmB9E,KAAnB,EAA0B;AGrB1B,AHsBI,ACRF,SDQO8E,GAAL,GAAWA,GAAX;AGrBJ,AHsBI,ACRF,MAAI6C,GDQG3H,KAAL,GAAaA,CCRC5V,IDQd,ACRkB0e,UAAhB,CAAJ,EAAiC1e,IAAI0e,UAAJ,GAAiB,KAAjB;AEbnC,AHsBC,ACRC,MAAInB,YAAYvd,IAAIoY,KAAhB,CAAJ,EAA4BpY,IAAIoY,KAAJ,GAAY,CAAZ;AEb9B,AHsBAkD,ACRE,KDQGjnB,CCRCkpB,QDQN,CAAenC,GAAf,ACRkBpb,GDQG,CCRCwe,MAAhB,CAAJ,EAA6Bxe,EDQE,ECREwe,MAAJ,CJ5HtBzE,EI4HmC,KAAb;AEb/B,AHsBI,ACRF,MAAIwD,GDQG7C,GAAL,CAASjpB,KAAT,ACRcuO,CDQC,GCRG4e,CDQlB,EAAqB,KAAKhJ,KAA1B,ACRE,CAAJ,EAAoC5V,IAAI4e,aAAJ,GAAoB,IAApB;AEbtC,AHsBC,ACRC,CDMF,KCNM5e,IAAIwe,MAAR,EAAgBxe,IAAIse,OAAJ,GAAcO,gBAAd;AEblB,AHsBA7E,ACRE,QDQMuB,CCRCuD,IDQT,GAAgB,KCRK9e,GAAZ,CDQT,CCR0B3K,GAAjB,EAAsB2K,IAAIoY,KAA1B,CAAP;AEbF,AHsBA4B,ACRC,QDQOwB,OAAR,GAAkB,IAAlB;AACAxB,ACRAE,QDQQuB,ACRAuB,GDQR,GAAc,CCRd,CDQA,ECRkBA,OAAlB;ADSAhD,QAAQ0B,IAAR,GAAe,EAAf;AACA1B,ACPA,QDOQ2B,OAAR,GAAkB,EAAlB,EAAsB;AACtB3B,ACPAgD,AGxJA,ACAA,QL+JQpB,ACPA4C,MAAR,EDOA,CCPiB,EDOE,EAAnB;ACNE,UAAS,CAAC,CAAD,EAAI,EAAJ,CADM,6BJpIRzE;AG6IT,ACPE,AK1JF,SNiKS8B,GCPI,CDOb,ACPc,CAAD,EDOG,ACPC,CDOC,CCPL,CAFI;AAGf,eAAc,CAAC,CAAD,EAAI,EAAJ,CAHC;ADWjB7B,ACPE,AM5JFC,OAAOC,CPmKC4B,EAAR,GAAaD,ACPC,CAAC,AM5Jf,CN4Jc,EDOd,ACPkB,AM5JD,EN4JH,CAJG,MMxJS4I,MAAT,CAAgBnjB,IAAhB,EAAsB;APoKvC0Y,ACPE,AM5JA,QPmKM+B,COnKC,EN4JG,CAAC,EAAD,EAAK,EAAL,CDOZ,ACZiB,GDYKF,IAAtB;AACA7B,ACPE,AM5JEyK,QPmKI5R,ECPG,CAAC,CDOZ,AOnKYvR,CN4JD,EDOIua,ACPC,AO9JWyF,EP8JhB,CANM,CDajB,IQrKmC,OAAR;ARsK3BtH,ACPE,AM9JO,AFMTC,GENE,CCDM9I,GHOD+I,CL+JC8B,GAAR,ACPY,CAAC,EDOCH,ACPF,AIxJZ,CDAqByF,CHwJJ,CIxJA,CL+JjB,ACPY,CAPK,IGjJY,CIPrBnQ,MJOa;AJgKrB6I,ACPE,AM5JD,AFIC,CERF,GCAkBxC,AJOVrG,IJgKA8K,ECPG,CAAC,EAAD,EAAK,EAAL,CARM,EOxJCzE,ERuKlB,EIhKQrG,CJgKiB0K,IAAzB;AACA7B,ACPE,QDOMkC,ECPG,CAAC,EAAD,EAAK,AK1JDoF,EL0JJ,CATM,KKjJM,GNiKvB,GAA6BzF,CMjKd,GNiKf;AACA7B,ACPE,AOjKF,AJOA,IIPMyK,AJOAvC,AEDEpT,INkKAqN,GCPI,CDOZ,ACPa,COjKEmF,CPiKH,AG1JIA,CJiKDzF,AUzKGyF,ADAUA,CRkKX,EAAL,AK3JJxS,CNkKR,ACjBiB,EOvJM,CJOC,CMRE,ADAU,OCAlB,ADAU,CDCb,CAAf,AJOgB,CAAhB,UPaSiL;AGqJTC,ACPE,ISnKMhJ,ADAAA,IT0KAoL,KCPM,CAAC,EAAD,EAAK,EAAL,CAXG,ASxJTpL,ADAAA,ET0KR,GAA0B6K,IAA1B;AW1KA,AX2KA7B,ACPE,AOjKF,AJOA,AEDAC,IGTe9I,GHSR+I,CNkKCmC,CCPE,AG1JD8F,CH0JE,EAAD,AG1JV,CAAa7gB,CH0JE,AK3Jf,EL2JU,CAZO,AG9IjB,AEDiB,EFCE,KKVJ6P,GT2Kf,GAA8B0K,IAA9B;AW1KA,AVoKE,ASnKF,ANSE,AEFe,MAAG8G,ML4JP,AK5JI,CL4JH,EAAD,EAAK,EAAL,CK5JOA,MAAH,GFGZrhB,IADH,EACU4gB,QAAQ5gB,IAAR,CADV;AOTF,AX2KA0Y,ACrBiB,AQvJjB,ALaC,AELgB,ADKfoI,CJ0IF,GQvJMqC,EHQsB7B,ENoKpBtG,GMpKS,EGRFgF,IT4Kf,EMpK4BsB,CNoKR,CS5KG,GHQN,MNoKathB,CS5Kf,CAAf,ET4KoB,EAAgB,AK/JA,0CAAC+gB,IAAD,EAAOC,iBAAP,EAA6B;AMXjE,AX0KsC,AMpKrB,ADMb,SCNqC,ENoKI,AK9JlCD,EL8J2B,OK9JlBC,iBAAhB;AMXJ,AXyKiD,ACLjD,AQrKArI,ALaAA,AENE,ADMC,CL6JH,EKtKiB,IIJVC,ALaAA,OKbP,ALaA,GKbiB,ALaA/I,SAAS,OKbmB;AEE7C,AVoKA6L,AQtK6C,ALc3C,MKdkB0I,ERsKZ3G,MAAR,EQtK6C,CRsK5B,OQtKG2G,UAAyB;AEG7C,AXyKA1L,ACLE,AOjKF,ACN6C,AJe3C,MIf8B2I,ET4KxBpG,IS5KqC,CRuKhC,EDKb,GAAkB,CCND,CQtKeoG,MAAa,ET4KjBrhB,IAAV,EAAgB;AWxKlC,AXyKI,ACLF,UDKQ,ECLE,EDKE9N,KAAJ,CAAU,ACPH,qBJnJRumB,aG0JC,CAAN;AWxKJ,AXyKC,ACLC,ASrKFE,ADJ6C,CT4K7C,MUxKOC,MTqKM,CSrKb,GAAiB,CDH2BoH,GRqK3B,KQrKmC,WAAR,CADC;AEM7C,AVoKE,AStKe,ADJ4B,MACnCoD,GCIR1T,GDL2C,GR0K9B,ASrKPsQ,MTiKS,ESjKD,EDJNoD,MADmC,GCKrC,CAAN,EAA4BpD,QAAQ,cAAR,EAAwBqB,MAAxB,CAA5B,CADe;ACGjB,AXyKA3I,ACLE,ASvKe,ADJ4B,CCI7C,KDHkB8K,ET+KVtI,ECLE,CDKV,GAAc,AShL+B,ERsK5B,UDUS,CS/KRsI,QAD2B;AEQ7C,AXwK4B,ACJ1B,AQ5K2C,ALoB3C3C,AENAU,IFMI,EKnBsBsC,KT+KO,CCJvB,EDIgB,GShLiB,ERsK5B,OGlJf,CAPwB,GKZEA,WADiB,YHcM;AKLnD,AXuKwC,ACHtC,AQ3KA,AHYiD,CNkKnD,SCHU,GK9JN,CAAC/wB,KLuJY,CKvJNY,OAAN,CAAc8tB,UAAd,CAAD,IAA8BA,WAAWtxB,MAAX,KAAsB,CAApD,GACIuxB,QAAQvf,MAAR,CACE,IAAImf,OAAOE,+CAAX,EADF,CADJ,GAIIE,QAAQC,OAAR,EAL2C;AKJnD,AXuKAhJ,ACHE,AGxJA,AERiD,KARV,GN2KjCyC,KAAR,GAAgB,UAAUC,GAAV,EAAe;AWtK/B,AXuKI,ACHF,AIxJA6F,UL2JQ,ECHE,EDGE/uB,KAAJ,CAAU,6BK3J6B,GL2JvC,CAAN,mDK1JA6uB,IAD6C,EAE7CG,iBAF6C,EAG7CC,mBAH6C,EAI1C;AMfP,AXuKC,ACbgB,AOvJjB,AFME,ADOE,CLqJJ,ACXA,OI1IUC,CGbDgC,MAAT,CAAgBpY,MAAhB,EAAwB,WHaakW,kBAAkB1qB,MAAlB,CAC/BuqB,IAD+B,EAE/B,UAACvrB,GAAD,EAAM4D,EAAN;AMjBN,AXuKAsf,AQrKwB,AHelB,QLsJE2C,KAAR,AKtJoB8F,GLsJJ,OQpKwBkC,KRoKb,KKtJa7V,EAApB,CAAuBpU,CGbvC4R,CHagB,GRVXyN,CQUwCjjB,CGdT,EAEpC,GHYmD,CAAnC,GAAuCA,GAArD,eGdkC,CADhB;AGDxB,AXsK6B,ACD7B,AOpKwB,AHelB,KAF+B,CGZ3BgtB,CHeJ,CAH+B,CJuJ5BjF,AIvJL,ELwJgC,CAAP,GQrKL,UPoKxB,CAA0BzO,GAA1B,EAA+B4O,EOnKrB8E,OPmKV,EAA0C,AOpKlB;AGAxB,AXqKwC,ACAtC,AOrKsB,ACPtB,CT4KF,KCAM7E,AOpKe2F,KADG,GPqKV5H,QAAQ+B,MAAR,CAAeC,AOpKR4F,KADG,IPqKV,CAAZ;AUpKF,AHDwB,AJatBzC,ACME,IDNE,EIZsB4B,KHkBjBrB,EGnBa,QJatB,CAfwB,SIGEqB,OADJ,EHmBgB,CAApC;AMjBJ,AVqKE,AOlKA,AHeC,MJmJG9E,KAAJ,EAAW;AUpKb,AVqKI,AGzJF,AC1Be,CAAjB,UJmLW,YAAYjC,QAAQwB,MAAR,CAAeS,KAAf,EAAsB,CAAtB,CAAZ,GAAuC,GAAvC,GAA6C7O,GAA7C,GACA,SADA,GACY4M,QAAQwB,MAAR,CAAeS,KAAf,EAAsB,CAAtB,CADZ,GACuC,GAD9C;AUpKJ,AVsKG,AK7JDgE,GL0JA,MAGO,qBK7JmB,kCAAC/kB,IAAD,EAAOglB,aAAP;AKR5B,AVsKI,AOrKF,AFO0B,SEPnB/R,EPqKEf,EK7JP,CL6JA,AK7JClb,IERa,CAACuvB,EFQP7rB,IAAP,CERqB,AFQTsqB,QERE,CAAD,EAAmB,EAAEY,AFQlC,EAA2BX,QAA3B,CAAoCjlB,IAApC,CAAD,GACI6kB,CET6B,EAAa6B,KFSlCphB,MAAR,CET6B,AFSd,EETkCugB,EFS9BpB,OAAOS,OETG,EAAnB,EAAkD9W,MAAlD,CAAT,CAAP,CFSqB,EAAf,CADJ,GAEIyW,QAAQC,OAAR,EAHoB;AKP5B,AVsKG,AOrKF,AFM2B,KAtBa;AKgBzC,AVsKC,yCJvKQjJ;AcET,AHCA,ACVE,AHmBA,WGnBS4L,SAAT,CAAmBznB,IAAnB,EAAyB;AEU3B,AVuKA,AQhLI,ALqBFikB,IAAI,KH2JG5D,EQhLEmH,WACJzC,CR+KP,CAAwB7S,GAAxB,EAA6B4O,SAA7B,EAAwC,MQhL7B,CACqB9gB,KAAK0nB,CLoBnC,CAvBwB,GKEf,EACiCD,UAAUE,KAD3C,EAEJ5lB,IAFI,CAEC;AEQZ,AVuKE,AQ/KU,SR+KHmQ,GAAP,CQ9KMY,MAAMyT,OAAOvmB,KAAK0nB,KAAZ,CAAN,EAA0B;AEQlC,AVuKC,AQ9KS,ALmBR;AOXF,AHCAlB,OAAOG,MAAP,GAAgB,UAASvY,MAAT,EAAiB;AGAjC,AVwKA,AOvKE,SPuKO4S,AOvKA,WPuKT,CAAqBtJ,KAArB,EAA4B;AUvK5B,AVwKE,AOvKEkO,AFSFT,ML8JIlE,OAAO,EAAX,AOvKa7S,OAAOwX,qBFSmB,+CAACzB,IAAD,EAAOG,iBAAP;AKTzC,AHDS,AFUgC,GEVvC,UFWE,CAACA,kBAAkB1T,EAAlB,CAAqBuT,IAArB,CAAD,GACIU,QAAQvf,MAAR,CAAe,IAAImf,OAAOU,qCAAX,EAAf,CADJ,GAEIN,QAAQC,OAAR,CAAgBX,IAAhB,CAHiC;AKRzC,AVwKEzM,AOvKD,ACRSkQ,AHe+B,CEXzC,IFtByC,GLiMjC7a,OAAN,CAAc,OQ/KS,GR+KAtZ,GAAT,EAAca,GAAd,EAAmB,MJjL1BunB;AcUT,AVwKIoF,AQtL8B,AL0BhCgD,IAAI,GK1BE,CADI,CRuLHxwB,GAAL,IAAY,IAAZ,uBG5JF,CA/BwB;AOoB1B,AVwKG,AOvKH,ACjBY,AH2BV,GL2JA,EQxLS,CAAP;AEmBJ,AFPG,ALmBD;AOXF,AVwKE,SAAOwtB,IAAP;AUvKF,AVwKC,AQ/KCwG,YAAUd,MAAV,GAAmB,UAAStB,SAAT,EAAoB;AEQzC,AFPI,QAAId,oBAAoB3T,EAApB,CAAuByU,SAAvB,CAAJ,EAAuC;AEQ3C,AVyKA,AQhLM,SRgLGzE,IQhLI2D,ORgLb,CAAqBziB,GAArB,EAA0BxI,KAA1B,EAAiC4nB,AQhLAyF,MAApB,CAA2BtB,KRgLxC,EAA+C,EQhLlC,CAAP;AEQN,AVyKE,AOxKF,ACRK;AEQL,AVyKE,AG7JApB,IAAI,mCAAJ,CAvCwB,EPUjBpI;AckBT,AVyKE,AQhLE,AHkBFuJ,ML8JItjB,IAAI4e,CQhLC4D,YRgLL,IACAhrB,EQjLuBqtB,GRgLvB,GQhLK,CRkLLxF,AQlL8BkE,KHkBG,IGlB5B,CAAP,CRkLa/rB,MAAMwlB,OAAjB,CAFA,yBK9JkCuG,SAAD,EAAYd,mBAAZ;AKVvC,AV2KM,AQlLH,ALmBD,AEFqC,GGvBrC,UHwBE,CAACA,oBAAoB3T,EAApB,CAAuByU,SAAvB,CAAD,GACIR,QAAQvf,MAAR,CAAe,IAAImf,OAAOW,mCAAX,EAAf,CADJ,GAEIP,QAAQC,OAAR,EAH+B;AKTvC,AV2KMxrB,AKlKiC,KA9CE,GLgN7BwlB,OAAN,KAAkB9C,QAAQ8C,OAJ1B;AUtKN,AV2KM,AQlLJ;AEQF,AV2KM,AK/JJ,IL+JMxlB,MAAM6J,WAAN,IAAqB7J,MAAM6J,WAAN,CAAkBhN,SAAlB,KAAgCmD,KAAvD,CANJ,EAMmE;AU1KrE,AV2KI,QAAIwF,MAAMxF,MAAMwlB,OAAN,CAAcoC,YAAd,EAA4Bpf,GAA5B,CAAV;AU1KJ,AV2KI,QAAI,CAAC8c,SAAS9f,GAAT,CAAL,EAAoB;AU1KxB,AV2KMA,AO1KN,ACRE2oB,ALmBAxD,IAAI,KIXG2C,GP0KGhG,AQlLAiH,KDQZ,CAAkB3B,ECRhB,GAAqB,CRkLCpkB,EO1KxB,CP0KY,CO1KgB,CP0KChD,GAAjB,CQlLoBgpB,CRkLE5G,GQlLX,EAAe6G,ELmBpC,CA/CwB,IH8Md,CAAN,GQlLiB,EAA4B;AEQnD,AV2KK,AO1KH,ACRE,QAAIxD,oBAAoByD,UAApB,CAA+BF,GZlB9BjM,CYkBD,CAAJ,EAA0C;AEQ9C,AV2KI,AO5KwB,ACNtB,ALmBJ,WH+JS/c,EQlLEylB,CRkLT,SO1K8CkC,UCRjBoB,IDS7B3B,ICTS,CAA6B4B,GDQQ,CCRrC,CDUT,CCV4CC,WAAnC,CAAP,sBDQ4C,CAFtB;AGE5B,AV2KG,AO7KyB,ACLvB,MDOKlB,WAFkB,kBAElBA,WAFkB;AGG5B,AHH4B,AFe1BvB,MEbqBoB,KAFK,kBAELA,KAFK,KFeS,2CAACrB,SAAD,EAAYf,iBAAZ;AKXrC,AV2KE,AO/K0B,ACHxB,AHkBiC,MEbPwC,ECLtBxC,KHmBJ,CAACA,OEhBuB,KCHF0D,MHmBHpX,EAAlB,CAAqByU,CGnBlB,CAA6ByC,EDKPhB,ECLtB,CAAJ,EAAwC,AHmBvC,CAAD,GACIjC,MEjBoB,EFiBZvf,MAAR,CAAe,IAAImf,OAAOa,iCAAX,EAAf,CADJ,GAEIT,QAAQC,OAAR,EAH6B;AKVrC,AV2KE,AQlLI,AHiB+B,KA1DI,CL2NnC1D,OQlLOkD,KRkLKjD,aQlLawG,GRkLG/lB,GAAhB,EAAqBxI,AQlL1B,CAA2BwuB,IRkLtB,AQlLL,CRkLX,CQlL4CC,WAAjC,CAAP;AEQN,AV2KE,AO3KA,ACPG,MRkLC3G,GO3KGnO,MP2KP,EAAe,CO3KC,CACdsT,OAAO,UAAP,CADc,EAEd;AGDJ,AV2KI,AOzKEM,AJUJ5C,AECA,IFDI,OH+JK7C,SAAP,QO1KA,eJWF,CAvDwB;AO4C1B,AV2KG,AOzKG0F,ACTF,WAAOjC,QAAQvf,MAAR,CAAe,IAAImf,MDO1B,CCPiCwD,eAAX,EAAf,CAAP;AEQJ,AHEMvB,ACTH,ALmBD,GK7BA,4CZhBO7K;AckCT,AV2KE,AO7KE,GAFc,EAOdqK,QAPc,CAAT,CAAP;AGKF,AV2KE,AOvKD,ACXCuB,MRkLI/sB,MQlLMitB,CRkLC3wB,IQlLX,GRkLkB0D,AQlLA,IRkLP,CAAYpB,KAAZ,CAAX;AU1KF,AV2KE,AQlLEirB,MRkLEjD,cAAcN,KQlLK,ORkLOtmB,IAAZ,CAAlB,SQnLkB;AESpB,AHIA,ACXI4pB,AHoBFiB,uBGpBqB,GHoBC;AKZxB,AV2KE,AQrLkB,AHsBI,GGtBtB,GRqLIzjB,IAAI0e,GK9JNgF,OL8JF,CK9JU,CL8JU,MK9JlB,GACIX,QAAQvf,MAAR,CAAe,IAAImf,OAAOgB,qCAAX,EAAf,CADJ,GAEIZ,QAAQC,OAAR,EAHgB;AKXxB,AV2KIpqB,AKhKoB,KArEiB,MLqO9B1D,OAAOuqB,mBAAP,CAA2BjoB,KAA3B,CAAP;AU1KJ,AV2KG,AQlLD,ALmBA2qB,IAAI,+BAAJ,CAhEwB;AOqD1B,AHIA2C,AFUE,SEVOD,MAAT,GAAkB,UAAST,QAAT,EAAmB;AGHrC,AV2KE,AOvKA,AJQA,SIRO,sCX7CArK;Ac0CT,AV2KE,AOvKEgL,iBAAaX,SAASW;AGH1B,AV2KE,AOzKO,GAAP,GPyKIrF,QAAQloB,KAAR,MACIoB,KAAKmJ,OAAL,CAAa,SAAb,KAA2B,CAA3B,IAAgCnJ,KAAKmJ,OAAL,CAAa,aAAb,KAA+B,CADnE,CAAJ,EAC2E;AU3K7E,AV4KI,AOxKH,CAJD,UP4KW4d,YAAYnoB,KAAZ,CAAP;AU3KJ,AV4KG;AU3KH,AHIA,AFUEosB,mCAA+B,uCAAC1lB,IAAD,EAAOoO,MAAP,EAAkB;AKbnD,AV4KE,AK9JE,UAAIpO,KAAK2lB,MAAL,EAAJ,EAAmB;AKbvB,AV4KE,AQnLA,ALmBA1B,AEEI,IFFA,EHgKAvpB,KAAKpH,IK9JEuxB,EL8JP,KAAgB,CAApB,AK9JmBvf,EL8JI,IK9JZ,CACL,IAAImf,OAAOiB,SFHjB,CAzEwB,mBE4ElB,aACY3G,KAAKC,SAAL,CACR5Q,OAAOwX,SADC,CADZ,0DAGwD7G,KAAKC,SAAL,CACpD5Q,OAAOyX,OAD6C,CAHxD,CADK,CAAP;AKbN,AV4KI,AKtJC,QLsJG1E,WAAW7nB,KAAX,CAAJ,EAAuB;AU3K3B,AV4KM,AGhKJ,AEUE,ULsJM8J,GKtJCyhB,ILsJMvrB,IKtJEwrB,ELsJI1hB,IAAN,CKtJN,CAAgBpD,CLsJG,IKtJE1G,GLsJKA,EKtJV,EAAhB,CAAP,CLsJuC8J,CJ7NlCyY,GI6NQ,GAAiC,EAA5C;AU3KN,AV4KM,AKtJH,KA7FsC,QLmP5B/Z,IAAIse,OAAJ,CAAY,cAAchd,IAAd,GAAqB,GAAjC,EAAsC,SAAtC,CAAP;AU3KN,AV4KK,AOxKL;AGHA,AV4KI,AKtJF,QLsJMse,SAASpoB,KAAT,CAAJ,EAAqB;AU3KzB,AV4KM,aAAOwI,IAAIse,OAAJ,CAAY3gB,OAAOtJ,SAAP,CAAiBc,QAAjB,CAA0BZ,IAA1B,CAA+BiD,KAA/B,CAAZ,EAAmD,QAAnD,CAAP;AU3KN,AV4KK;AU3KL,AV4KI,AQnLF,QRmLMqoB,GQnLG4C,IRmLIjrB,KAAP,CAAJ,EAAmB,OQnLrB,CAA6B8U,MAA7B,EAAqC8X,QAArC,EAAgE;AEQlE,AV4KM,AQpL4D,ALoBhEjC,IAAI,IKpB2CiE,KRoLpCpmB,GQpLqD,CRoLjDse,OAAJ,CAAY5f,KAAKrK,SAAL,CAAec,AGhKtC,CAlFwB,OHkPD,CAAwBZ,IAAxB,CAA6BiD,KAA7B,CAAZ,EAAiD,MAAjD,CAAP,kBQpLsD,IAAM;AESlE,AV4KK;AU3KL,AV4KI,AQrLA,ALqBF,AEUAwsB,QLsJMtE,GQrLGiG,KRqLKnuB,KAAR,AQrLairB,CRqLjB,EAAoB,gBQrLb,EAA+BxiB,GZhDjC8Z,CYgDE,CAAoC,GH+BC;ALuJ1C,AOxKN,ACd+C,AH+BC,SEjBvCkL,IPwKItF,AOxKb,ACbM3O,AH+BF,CElBU9S,AFkBT+lB,IElBL,CCbYV,CDaQ,KPwKK/rB,AKtJrB,GG/BE,AHgCEurB,ELqJK,AQrLU,CRqLjB,KKrJUvf,MAAR,CACE,IAAImf,OAAOqB,4CAAX,EADF,CADJ,GAIIjB,QAAQC,OAAR,CAAgBiB,WAAhB,CALwC;AM9GhD,AXsQK,AOxKH,ACbM3X,AH6BwC,KArGP,WGwEzBA,MADO;AG/EvB,AXsQG,AO1KiB,ACXZ8X,kBAAUA,KDakBO,GCfb,WDe2BzmB,IAAd,EAAoB,sBAApB,CAFhB;AI3FpB,AJ2FoB,ACVZkoB,AHkCN,MEtBQrC,OAFU,KCVFqC,aDYRrC,OAFU;AI1FpB,AXsQE,AO5KkB,ACbG,MRyLjBjE,AO1KaoF,CCfb,CADyC,KR0LlC,EAAX,GO5KkB,kBAEDA,YAFC;AIzFpB,AXqQE,AYzQF,AJ+E+C,KAApC,CR0LMtP,AQ1Lb,QR0LqB,CazQP0L,IbyQhB,IazQwB,OAAR;AFKlB,AXoQE,AOzKA,ACVC,ALqBDa,IAAI,AU3GEnR,EbyQwB+O,GOzKvB5O,MPyKgC,CAAC,EOzKxB,CPyKuB,AOxKrCsT,EPwK2C,AazQvCzT,GbyQiC,CAAvC,COxKS,MAAP,CADc,EAEd,SJSF,CA3FwB;AWhB1B,AHMA,AJ6FM+S,oBADF;AOjGJ,AHMA,AXoQE,AOvKImB,ACZJ,ALqBA,AU3GF,ICDMqE,ADCA5G,SAASrB,OCDOA,CDCC,OCDO,GDCf,CCDO,ADCtB,CCDA,YlB+BSvH;AexBT,AXoQE,AO1KE,ACTF0I,AHkCAyB,GE3BgB,EAMdhmB,CPsKElJ,GO5KY,CAAT,CAAP,GP4KYwC,KAAR,CAAJ,EAAoB,AQnLAouB,KAApB,GAA4BD,UAAUE,AHkCF,KGlCR,CAAgBpD,mBAA5C;AMtFF8G,AHMA,AXoQI3T,AOrKH,AMpGD,ARuHsC,IQvHhCgN,QbyQM,AazQEtB,CRwHV,CSzHU,ATyHThV,ELiJD,IazQkB,ARwHlB,GACIyW,MQzHM,CAAd,CRyHgBvf,MAAR,CAAe,IAAImf,OAAOuB,kCAAX,EAAf,CADJ,GAEInB,QAAQC,OAAR,CAAgB1W,MAAhB,CAH8B;ASvHpC,AHMF,AXoQIyT,AQnLF,AKtFF,ARsHsC,IQtHhC2F,CRImC,QLqQ5B,CAAC,GAAD,AazQMpE,EbyQA,GAAN,CAAT,EazQuB,cAAR,EAAwB,EAAEqB,cAAF,EAAUC,YAAV,EAAxB,CAAnB;ACAE,AHMF,AXoQG,AOrKH,AMpGA,IAAMkF,cAAcxG,QAAQ,eAAR,EAAyB,EAAEoE,sBAAF,EAAc/C,cAAd,EAAzB,CAApB;ACAE8G,AHMF,ANoHE,WS1HS,IFuBPnI,QAAQ,OAAR;AEtBA,AHMJ,AXoQE,AazQF,IDCEtQ,ACDIuY,gBAAgBjI,CDCpBtQ,OCD4B,iBAAR,EAA2B;ACA7CsX,AHMJ,AXoQE,AQnLA7F,AKtFAqF,IDCA1d,EZwQIiV,Sc1QS,CACT,CdyQW7nB,GYxQf4S,EZwQI,AQnLgBya,CRmLpB,EAAuB,Ca1QwB,ELuF/C,GAA6B,UAAStB,SAAT,EAAoB;AMrF3CwB,AHKR,AXoQI,AQnLA,ALqBF5C,AU3GAuD,IDCAnpB,AT0GI,IH8JE1J,GQnLGse,CRmLC3Z,MAAM8J,CczQG,CNsFD,CIrFlB/E,AJsFImoB,CRkLM,Cc1QN,CDD2C,Cb2QxB,GQlLZG,IRkLmBrtB,EQlL1B,CAAc+rB,GRkLkBjiB,IAA1B,EG9JV,CH8J2C,AQlLfgL,ALjFJ,EHmQtB,IQlLE,CADc,EAEdwY,SAASD,MAAT,CAAgBtB,UAAUa,QAA1B,CAFc,EAGd;AMxFEQ,AHKR,AXoQI9E,AQhLIsG,AKzFNzD,IDCAxqB,OZwQS,EczQI,GNyFGorB,AK5F+B,ECC3C,EFGJprB,MZwQwBtF,AQhLEuzB,CRgLjB,GAAmB,GAA1B,UJnPKrM;AkBrBDiS,AHKR,AXoQG,AQlLG,ALoBJ,AU3GApJ,IDCAlM,CJmFkB,CAAT,CAAP,QMpFa,CAAC,CAAD,EAAI,AFCnBA,CEDe,EAAO,CAAP;AAHX,AHSN,AHqFG,AK/F8C,AR8H/CyN,CQ9HoB,CAAtB,CLuFE,CIjFA3kB,CENa,EAMT,aFAJA,wBPwHwC;ASvHlCulB,AHIR,AXoQE,AOrKF,AFoB0C,IOvHxCzhB,KLmGO6hB,IFqBL,CAACf,KSxHgB,CPmGrB,CAAqBH,CKnGnB3gB,APwHE,GACIyf,IS1HF,GPoGN,CFsBgBvf,CEtBkB,KFsB1B,CAAe,IAAImf,OAAOwB,sCAAX,EAAf,CADJ,GAEIpB,QAAQC,OAAR,CAAgBoB,QAAhB,CAHkC;AStHlCQ,AdwQN,AOrKA,ACVA,AK1FF3K,ARuH0C,IOtHxCjhB,CPPuC,CL+QnC4mB,CazQC1F,MCCQ,CDDf,CbyQe1iB,EazQE,EDCfwB,ACDiBuwB,CbyQb,CAAJ,EAAqB,wBazQN,EAAiB5G,cAAjB,EAAyB+C,sBAAzB,EAAqCoC,wBAArC,EAAjB;ACDM,AHON,AXoQIhI,AOvK8B,IKjGhC9M,CETa,EAUT,EHGG8T,EXoQE,MAAMnpB,GYxQfqV,CDIF,EJ+FoC2R,CI/FZ,AXoQAtwB,SAAP,CAAiBc,GOpK9B8uB,KPoKa,CAA0B1vB,IAA1B,CAA+BiD,AOrKZ,EAEhC,GPmKa,CAAb,kBOrKgC,CAFF;AO/F1ButB,AHGN,AXoQC,AOxK+B,AFyBhC,IOzHA1V,ELkGQ+V,CI9FH2B,OAAL,GAAe,EGHI,CFDnB1X,ALgGgC,EI5FZ0X,OAAL,GGJX,CHI2B,EAA/B,GJ8FQ3B,cAFwB;AO9F1BR,AHGN,AJ2FgC,AJWhCzC,IS1GAxS,AT0GI,EIToBiV,CI7FnBoC,IJ2F2B,EO9FnB,OHGb,GAAqB,CCJrBrX,IDI0BqX,CJ6FFpC,KAFQ,OI3FX,IAAsBzmB,GRsG3C,CA7GwB,KQOxB;AGLI,AHML,AXoQC,AQ/KAskB,IIzFAnZ,CEZa,EAcT,eNuFgByc,EIzFpBzc,MJyFA,GAA+B,UAAS0c,IAAT,EAAeC,WAAf,EAA4B;AMtFrDlB,AHER9K,AXoQE,AOrKA,ACVE,ALiBF,IS1GArb,EZwQIihB,CWpQC3F,EJ+FE/I,ECVE4R,ER+KEvrB,CWpQb,GAAiBsvB,CXoQX,AOrKY,COjGG,AdsQnB,AOpKErC,ACXezuB,ER+KE,AYxQnB4I,CJyFS,CAAY,CACjBqnB,EDUK,GIhGX,CGHM,MNyFYI,GDUd,CADc,CXtFTtM,CWwFL,OCXE,CAA0BiM,KAAKlC,SAA/B,CADiB,EAEjBmC,YAAYK,eAAZ,CAA4BN,KAAKjB,WAAjC,CAFiB,CAAZ,EAGJ9kB,IAHI,CAGC;AMzFJ2kB,AdsQJ9E,AOnKEsF,ACVM,II3FVxsB,OZwQS,EctQI,IdsQE8F,GYxQf9F,EZwQoBvE,SAAL,CAAe2rB,EOpK5B,SPoKa,CAA2BzrB,IAA3B,CAAgCiD,KAAhC,CAAb;AcxQE,AHKN,AXoQG,AOnKGotB,ACXM,II1FV5O,CEfa,EAkBT,GNuFQ1J,MAAF,UI1FV0J;AEIM+O,AHCR+B,AJ8FI,ACTQ,GDOM,CKhGhB5Z,CLsGE+W,KCbkBG,GGrFT0C,GJ4FK,CAAT,CAAP,ACPU,CMtFS,AFHnB5Z,MDIF,GAA4B4Z,KGFtB,OHEN;AGAQlC,AdqQN,AOjKD,AFkBCP,IOzHA1d,SEGa,iBFHbA,kBPyH4C,oDAAC0b,IAAD,EAAOC,iBAAP;ASxHxC,AHINwE,AXoQE,AQjLU,AHiCkC,IOxH5CxT,CElBa,Cd0RToM,CcpQA,MHAOrrB,AHoFPouB,AHiCFG,CL+IUprB,KAAR,AK/II4qB,CL+IR,EWpQF,AXoQsB,CWpQC2E,ECJrBzT,KDIF,GAAiCnV,AHoFPmO,MAApB,EAA4B8X,CGpFlC,OHoFM,EAAsC4B,AHiCxC,CAAuC3D,IGjCM+D,AHiC7C,EAA6C9D,MGjC3C,CADM,UHkCR,IACIS,QAAQvf,MAAR,CAAe,IAAImf,OAAO2B,0CAAX,EAAf,CADJ,GAEIvB,QAAQC,OAAR,CAAgBV,iBAAhB,CAHsC;ASnHtCyC,AHAR+B,AXoQIhH,AOjKJ,ACjBY,ALoBVqC,AEa4C,IOvH5CvS,AT0GI,CKvBK,AHrG8B,CGqGrC,KRqLO,EWpQEvb,IXoQIsrB,EcpQI,GHArB,CAAuBqH,CCJrBpX,KZwQ2BpY,CcrQvB,IdqQW,CAAb,CWpQJ,GAAuC2G,SAAvC,ERsGE,CArHwB;AWgBlBymB,AdoQL,AQhLA,GAPD,CIjFAnY,SEIa,SFJbA;AEEI,AHGN,ARsGE,AEgBA,KS/Ia,CAFJ;AA6BPub,AHDJ,AXoQE,AYvQF,AJuFE,IIvFIJ,EZuQAhvB,KcnQK,AdmQApH,CclQL,CFLS8vB,IZuQT,IYvQiB,CZuQD,CAAhB,KAAsB,CAAC1L,AYvQd,CAAf,IZuQ4B,IAAUpe,MAAMhG,EJnQnCuoB,IImQ6B,IAAgB,CAAhD,CAAJ,EAAwD;AcjQlDgK,AHFR+C,AXoQI,AOjKJ3B,WPiKWpF,COjKC8E,CInGCoC,EGEI,GdkQC,AOjKlB,CPiKW,CcnQL,CPkGe,EPiKEnH,IAAZ,GAAmBC,COjKAkE,CInG9B,GAAmC,EAAnC,AXoQqC,CAAP,CAA1B,GOjKiB,EAAsB;AOhGnCiB,AdkQL,AOjKD,SAAO,OKtGgB5D,IEKH,CAAC,GFLU,QAAR,EEKH,EAAgB,WAAhB,EAA6B,cAA7B;AAFhB,AHCN,AJmGI8D,IKvGI0B,CEEG,EAKL,aPgGc7C,SKvGZ6C,GLuGwB1B;AO/FxBrB,AHHR,AXoQE,AOnKO,GAAP,GPmKI3E,ScjQW,MdiQI,CAAnB,CclQI,CdkQkB;AchQhB8F,AHHR4B,AXoQI,AYxQJ,ALuGC,AJGC3E,CIPF,GJOM,IH8JEvC,CYxQC1Y,IDII7S,ACJb,CAAcH,GZwQGsD,CYxQjB,EEOsB,AFPF,CEOG,CHHvB,AXoQQ,CWpQe0vB,AXoQnB,EcjQkB,AdiQG,EcjQI,UAAP,CHHtB,GAAyC,UAASr0B,CAAT,EAAY,qBRsGnD,CA7HwB;AWwBpB,AHAJ,AXoQI,AYxQJ,AJwFA4vB,KMzFS,CHKL,CGIA,AHJCpC,ECJEuH,IZwQI5nB,GWpQGnN,ACJAg1B,CDIT,AXoQUvJ,CWpQX,IAAgBzrB,AHoFAic,ERgLT,AQhLX,CRgLuBnR,CWpQC,CAApB,AHoFqB,CIxFlB,CAAoBzJ,EDIEgQ,CXoQC7P,EYxQE,CAAL,CAApB,CDI4BxB,CAAN,ACJO2E,CDIpC,EACE,AXmQqB,CAAiBrC,CYxQjC,EAAP,EDKQ4C,CHmF8B,ERgLf,CAA0BxD,IAA1B,CAA+BiD,CWnQpC,IXmQK,CAAZ,EAAmD,QAAnD,CAAP,aWnQI,CAAN;AGIIusB,AHHN,AXmQG,AYxQJ,ALuGD,ACfI,ALkBF,KH4JE,EWjQGiD,IXmQI,AQ/KLzD,IMjFW,KHHf,GAAqB1wB,CAArB,AHoFiB0wB,CMlFb,SNkFuBkB,MAAV,KAAqBkB,UAAUE,KAAV,CAAgBpD,mBADpD;AM/EIyC,AHHN,AXmQI,AQ9KH,AHgCDX,GGpCA,MGjFO,IAAP,AXmQWvkB,IAAIse,GchQK,CAAC,GdgQV,CchQS,AdgQG,EchQI,QdgQhB,EAAwB,CchQf,QdgQT,CAAP,QK9I+C,2DACjD+D,IADiD,EAEjDC,iBAFiD,EAGjDE,iBAHiD,EAIjDC,mBAJiD;ASpH/C,AHAL,AXmQI,AYxQLxI,APyHqD,CMzHrD,IGJW,CA7BA,CFiCJC,MP+HHuI,CO/HJ,GAAiB,gBAAqD,AP+H9C3T,EAApB,CAAuBwT,WTlIlBvI,MSkIL,KACA6I,MAAML,6CAAN,CACEF,IADF,EAEEG,iBAFF,EAGEC,mBAHF,CADA,GAMIM,QAAQvf,MAAR,CACE,IAAImf,OAAO6B,4CAAX,EADF,CANJ,GASIzB,QAAQC,OAAR,EAf6C;AS/GjDkF,Ad+PD,AYzQmE,AJ2FpE,AH8BmD,MOzHzBJ,OEUf,CACP,GFXgE,QAA1CA,WAA0C;AEY9DhE,AHLRgD,ACPsE,AP9B7B,GAAxB,GO8BwBpB,ODO5BrxB,GCPyD,CEYnD,KHLnB,CAAuB8nB,CCPkBuJ,GDOzC,GAA8B,EGIxB,EFXgE,MDO/BxnB,IAAT,EAAe;AGMrC0mB,AHLN,AXmQA5kB,AY3QoE,AP9BrD,CAAjB,KMsCMmnB,AXmQAzjB,AY3Q+Cif,EDQnD,EAAQyE,AXmQR,CAAS/mB,CY3Q2D,CEavD,Ed8Pb,CAAc7I,CWnQd,EAAiBlB,CCRkCqsB,CZ2QnD,CWnQA,EAAsBxuB,ECR8C,EEWhE,AHHJ,EAA4BsT,CAA5B,EAA+B6U,SAA/B;AGMMyH,AFd8D,AT8GpE5B,IAAI,ES9GuDS,KAAS,IEcrD,IFd4CA,KAAS,gDT8GpE,CArIwB;AWkCpB,AHDJ,AXmQA,AY7QoE,AL4GtE,KOlGa,CHAP,AXmQA3U,AY3QFuU,CEcE,AHNC,EJkGE6C,GIlGG0B,AXmQV,OWnQA,EACE,AJiGJ,CAAsBzB,CK5GgD,GDW7DyB,ACJHe,ODIF,CJiGJ,EIjGmB,AJiGiB,CK5GkC,CDWlE,ACTAtF,iBAFkE;AEiB9DsB,Ad6PN,AY9QoE,AL6GpE,AJGA,MH8JIlO,AY3QF6M,KZ2QF,EAAW,Ic7PM,QFjBmD,GAOhEqF,SESA,EFhBgE,CAGlErF,mBAHkE;AEkB9DmC,AHLN,AXkQE3W,AY/QkE,AL4GlC,MKxGhC0X,OEcW,Ad6PF1F,EY/QyD,GAOhE6H,KLuGmCnD,EPiKhB3kB,GAAZ,CY/QyD,CZ+QxCxI,AY3Q1BmuB,CEYE,Id+PO,EAAwBvG,AOhKjCkG,EK/GkE,UZ+QzD,AOjK4B,EPiKU9F,AO/J/C,WP+JS,EAAmD5mB,IAAnD,CAAT,SOjKqC,CAFL;AOzF5BmrB,AHLN,AXkQC,AYhRmE,AL4GlC,ACVlCtB,GR4KA,GWhQIvkB,ACTFwmB,ALyGMM,GPkKD,GYhR6D,GEmBrD,AHLF,ACPT8C,MLqG8B,CI9FlC,AHoFoB5B,EGpFE,ECd8C,CAKlExB,KJ6FF,CIlGoE,EJkGnC,IDYzBM,eAF0B;AO5F9B,AHDF,AXkQA/W,AYjRkE,AL4GlC,ACVD,KMxFtB,CFJTkX,ALwGuBI,COzFrB,CHNE,CAAC,EHmFkCS,ER+K9BptB,CWlQCmuB,CJ6FsB,EK5GkC,CZiRpD/tB,CQ/KiCgtB,CI3F7C8B,CDQG,AXkQI,CWlQS/J,AXkQA,EQ/KkC+F,GGnFhD,IACC1G,AChB6D,CZiRvCnkB,AY3Q3BksB,CLwGuBI,ACZQ,ER+Kb,EAAc,GWjQlB,EJ4FkB,CK5GkC,EDgB/CwB,AflBdhN,OekBS,CAAagE,KAAtB,KAAgC,CAAC,KAAKgJ,OAAL,CAAahJ,KAAb,CAAmBvsB,MADzD,EACkE;AGM9DsyB,AHLFqD,AXiQA,AY1QJ,AJ0FiC,GAAjC,QGjFS51B,EXiQE2uB,Ic5PM,IHLE,CAAV,CAAL,KXiQsBlgB,GAAf,EAAoBxI,KAApB,Cc7PP,Cd6PkC4nB,YAA3B,EAAyCI,WAAzC,EAAsDvmB,GAAtD,EAA2D2c,KAA3D,CAAP;Ac3PEgP,AHLF,AXiQD,AOjKH,KP+JW,CAAT,GO/JKzT,CIhGCgW,GGKK,KP2FG,CACd1C,KIjGoBjxB,EJiGb,GIjGL,EGGA,AHHyB,SJiG3B,CADc,EAEd;AO5FIuwB,AHLA,AXiQL,AO/JGiB,ACjBJ,ALkBA7C,IAAI,UQnGQgF,CGKG,CHLT,CADuB,CACb,kBJiGd,qBJEF,CA7IwB,CAAT,CAAjB;AW4CM,AHDC,AJkGD5B,KO5GO,CA3CF,CHmDL,MAEO;AGOT6C,AHNI,AXiQNpoB,AOlKE,GAFc,EAMdslB,CP8JE5hB,IAAJ,CAASjO,GAAT,GOpKgB,COvFA,APuFT,COtFH,APsFJ;AOrFM2vB,AHPA,AJoGP,YIpGWjD,MAAM,IGOM,AHPF3uB,KGMhB,AHNY,CAAU,2CAA2C2zB,EAA3C,GAAgD,GAA1D,CAAV;AGQAvC,AHPAzC,AXiQN,SAAOhC,GWjQG3a,CGOG,MHPP,GAAc2hB,EAAd,MXiQsBlZ,MAArB,EAA6B6R,IAA7B,EAAmCC,MAAnC,CAAP;Ac5PI,AHJE,AXiQP,AO7JD,IAAMtc,COjGY,EAKZ,OHRQ0e,EJoGIjtB,CIpGV,MJoGiBb,SAAP,CAAiBc,QAAnC;AO3FQiwB,AHRD,AJoGP,SAASjiB,SAAT,CAAmBqiB,GO5FK,EP4FxB,EAA0B,CO7FpB,kBlBjCGzL;AkBmCD6K,AHRH,AXkQL,AY5QE,AL8GA,ACnBA,MI3FMmD,GZ4QCxI,AO9JA9b,ECnBE+e,EMzEI,MP4FIjuB,EK9GI,EL8Gd,CP8JT,AO9JwBixB,CP8JCxlB,GAAzB,AQjLE,CDmBO,ACnBoBumB,CRiLC/uB,AY5QtBuwB,IJ2FN,CRiLF,AO9JmC,CCnBCjF,CRiLC,KY5Qd,CAACkF,GJ2FtB,EI3FqB,AJ2FyB,EI3FjBjE,EL8G7B,KK9GqB;AEgBjB,AHLH,AXkQD,AY7QqB,AL+GtB,ACnBG,KMjFc,CdkQZxG,CczPA,IFnBFqK,AJ2FOlC,ORiLOluB,AY5QPqwB,IJ4FJhF,CRgLD,CAAJ,EACE,IY7QA,CAAoBzY,EZ6QbpK,GY7QkB,CZ6Qdse,OAAJ,CAAY,WAAZ,EAAyB,WAAzB,AQlLA,CRkLP,AQhLIwE,UAFG,EAGHN,iBAHG,EAKJviB,IALI,CAKC;AM5EJmlB,Ad0PN,AY9Q2B,AL+G7B,ACfY,MR8KNtI,OY9Q+B5e,AJgGnBynB,ER8KHnuB,GY9Q2BusB,EZ8QpC,CAAJ,Cc1PsB,Cd0PD,AQ9KKvB,EIhGS,GEmB/B,CFnB+CuB,OAAxB,IJgGX,CAAN;AM3EJa,AHTNwC,AXmQE,AY/QyB,AJgGjB,KIhGY,AJ2Fb,EI3FmDY,AJiGvD/nB,CR8KCmgB,GQpLG,CG/EC,ACZY,AJiGZ,CM5EG,AFrBX,CADmB,GDaN2G,AXmQA,OWnQL,AXmQY9J,CWnQC/e,IAAb,AXmQiBgf,CWnQ3B,QXmQsB,CAAe1lB,KAAf,EAAsB4K,OAAtB,CAA8B,QAA9B,EAAwC,EAAxC,EACsBA,OADtB,CAC8B,IAD9B,EACoC,KADpC,EAEsBA,OAFtB,CAE8B,MAF9B,EAEsC,GAFtC,CAAP,GAEoD,IAFjE;Ac5PE,Ad+PF,AYnRmB,AJkGX,GIlGV,EEWgB,MdwQPpC,EQhLHgR,ERgLOsN,IQhLDiF,GRgLH,CAAYnD,KQhLf,CRgLG,CQhLc,CRgLM,QAApB,CAAP;AcpUO,AHgET,AXqQC,AQhLOmG,MGrFJhJ,SHqFWgJ,GGrFCa,EHoFO,KGpFnB,CAAJ,EACE,OAAO,KAAP;AGpEU,AdyUZ,AYlRA,AJkGQtE,CMzJV,EA8EG7iB,Gd2PGogB,CczUN,CA8EQ,Od2PO7oB,KAAT,AQhLgBsrB,CRgLpB,EACE,Cc5PY,Md4PL9iB,IAAIse,OAAJ,CAAY,KAAK9mB,KAAjB,EAAwB,QAAxB,CAAP;Ac3PFqmB,AHTA,AXqQA,AQpLuB,MGjFnBwB,AXqQAZ,CQpLE,CADI,EMvEFsD,GAAR,CAAY,Ed4PEvqB,CWrQC4vB,IXqQX,CAAJ,EWrQI,AXsQF,CWtQF,EAAyB,IXsQhBpnB,IAAIse,OAAJ,CAAY,KAAK9mB,KAAjB,EAAwB,Ic7PjC,Kd6PS,CAAP;Ac5PH,AHTG,AXsQF,AOnKF,ACpBY,CMtJZ,INgJW,CAAP,GD0BKmtB,GInGGpzB,UAAUC,AJmGtB,CAAuBuY,KInGnB,CJmGJ,EAA+B0b,UAA/B,EAA2C,CXtIlC1L;AeoCH,AXsQJ,AOnKA,ACfC,MRkLGoD,AOnKA,CAACha,MPmKM3L,IOnKIuS,CPmKX,CAAJ,EACE,EOpKG,CAAL,EAAwB,EPoKf/J,IAAIse,OAAJ,CAAY,MAAZ,EAAoB,MAApB,CAAP;AWtQE,AXuQL,AOpKG,UAAM,CInGC,CAAL,EJmGQ9qB,KAAJ,+BAAsCypB,KAAKC,SAAL,CAAenT,MAAf,CAAtC,OAAN;AIlGIqd,AJmGL,ACfD,gBGpFc7yB,IAAR,CAAa,IAAb;AACA,AXwQR,AQpLEiuB,SRoLO7C,WAAT,AQpLoBiG,CRoLCpuB,IQpLnB,CRoLF,EAA4B,AQpLAmuB,UAAUE,KAAV,CAAgBrD,iBAA1C;AGnFI,AXwQJ,AOrKA,MAAM5nB,GPqKC,EWxQE,CAAL,EJmGU6qB,CPqKDjyB,MAAMa,IOrKMqL,KPqKZ,AOrKC,CPqKevK,AOrKE,GAAjB,EAAsB6D,GPqKvB,AOrKC,CPqKwBzE,AOrKEijB,IPqK3B,AOrKC,CPqK6BhgB,AOrK3C,KPqKa,CAAN,GAA6C,GAApD;AWvQM4vB,AXwQP,AYtRC,ALiHA,ACfA,MIlGMa,ALiHF9vB,UInGU5D,GJmGd,CInGM,CAAa,ECdI,EDcjB,EAAmBhD,KCdnB02B,KDc6B,CAAV,CAAnB,OCdiB,CAACC,OAAD,EAAUpE,SAAV;ADejB,ACfiB,WACrB4B,WAAWxB,kCAAX,CACE9Z,KAAK;ADcL,AXyQN,AYvRW,ALiHT,SPsKO6V,AOtKC9nB,EInGC,CAAL,CCdemU,GLiHJ1R,IPsKjB,AYvR4BkpB,CZuRP9jB,COtKEvK,EPsKvB,COtKiB,CPsKS+B,COtKxB,EKjHmB,ALiHU,EPsK/B,EAAiC4nB,AYvRQ0E,SAA9B,GZuRX,EAA+CtE,WAA/C,EAA4D5mB,IAA5D,EAAkE;AWxQ1DwuB,AXyQN,AYxRS,ALkHP,KKlHE,CZwRAnZ,CYxR8Cia,CLkH5C,CAACne,KKlHH,CZwRS,AYzRX,CDgBYxV,ACjBS,ALoHToC,CPsKd,GWzQM,CAAa,IAAb,EAAmBpF,GJmGlB,CAAsB4G,IAAtB,CAAL,CInGiC,CAAV,AJmGW,CInG9B,EAAiC5G,Cf3ChCwoB,Se2C0C,CAAV,CAAjC;AACA,AXyQN,AY3RuB,ALqHnB,ACfJyI,GItGA,IZ2RK,IAAI/a,COtKC,GPsKG,CAAR,AOtKSjU,EPsKEyd,EQrLE4T,CDeR,CPsKUrtB,IQrLpB,ERqL0BhG,CQrLC,KRqL3B,AOrKgByrB,EPqKkBxV,GOrKbyV,AChBeqG,CRqLEtS,CAAtC,EAAyC,EAAExJ,CAA3C,EAA8C,AOrK9B,AChBW,CDgBIsC,CChBgB,KDgB/B,CADN,uBAC6C5R,IAD7C,kBAAN;AIlGA,AXyQF,AOpKC,ACjBD,QRqLIxB,GQrLGwa,SAAS,CACdgU,ERoLiB3tB,KAAf,EAAsBiJ,GQpLZokB,IRoLmBpd,CAAP,CAAtB,AQpLF,CRoLF,AQpLqB8b,ERoLiB,QQpLPgD,KAA7B,CADc,EAEd,EAAEzD,YAAYS,UAAUT,UAAV,CAAqB9pB,GAArB,CAAyB2sB,UAAUd,MAAnC,CAAd,EAFc,CAAT,CAAP;AGnFE,AXyQA5W,AYxRJ,ALoHC,ACdA,GALD,URuLW5N,IAAP,CAAY6f,eAAelgB,GAAf,EAAoBxI,KAApB,EAA2B4nB,YAA3B,EAAyCI,WAAzC,EACR/e,OAAOgH,CAAP,CADQ,EACG,IADH,CAAZ;AWxQEtT,AX0QH,KAHD,MAGO,IW1QIC,MAAMC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BhD,SAA3B,EAAsC,CAAtC,CAAP;AACA61B,AX0QFnZ,AOrKJ,ACdA,SDcOlE,IPqKI1J,EOrKX,CIrGc5O,CX0QV,CAAY,EAAZ,CW1QE,CAAc,IAAd,EAAoB0C,IAApB;AAdJ,AXyRC,AOrKJ;AIpGE,AX0QA,GW3RD,MAiBO,IAAIipB,SAASgK,OAAT,CAAJ,EAAuB;AAC5BjzB,AX0QFyE,AOrKFqhB,OPqKOhP,AOrKAiP,IIrGI9lB,GX0QT,AOrKF,CPqKe,EW1QEC,AJqGA,QPqKO4E,CW1Qb,CAAgB3E,CX0QZ,EAAc,EW1QlB,CAAsBC,IAAtB,CAA2BhD,SAA3B,EAAsC,CAAtC,CAAP;AACA+qB,AX0QA,AOrKF2I,ACdAzC,QRmLM,CAACvpB,GOtKQ,CPsKJuH,GW1QG4mB,EX0QP,CAAU,CQnLCrB,IGvFIzxB,EX0Qf,CAAL,CQnLF,CGvFc,AX0Qa,EW1QzB,AHuF2B,UAASivB,EZ1I/BxJ,OY0IsB,EAAoBkM,WAApB,EAAiC;AGtF5D3vB,AX0QE2X,AOrKJyW,ACdE,UGvFMpI,CHuFCoJ,ERmLErlB,GOvKI,CPuKX,CAAY6f,EW1QE1uB,EHwFbqxB,IGxFH,OX0Q6B7iB,GAAf,EAAoBxI,KAApB,EAA2B4nB,YAA3B,EAAyCI,UQnLhD,CRmLO,AQjLV+D,ERkLEtqB,GADQ,EACH,GQlLG6pB,CRiLA,CAAZ,QQnLK,EAGHN,iBAHG,EAKJviB,IALI,CAKC;AG3FR,AX2QC,AY1RH,ALoHA6kB,ACVU,MI1GJqD,GDeC1gB,IAAI,AH2FKwe,CG3Fd,EAAYxe,IAAInR,AJkGH,GIlGb,EAAqBmR,AH2FK+e,GG3F1B,ACf0B,EDgBxBlK,OChBE6L,GDgBQ1gB,CAAV,EAAahW,AH0FD,CAA+B8xB,IG1F3C,CAAmB,IAAnB,CH0FqD6B,CG1F5BjxB,CChBD,CAACi0B,EDgBzB,SH0FY,CI1GY,AJ0GlB,EI1GiChD,cAAf;ADiB3B,AX0QA,AY3R2B,ALqH5BD,ACXU,GR4KV,EQjLS,EAMJllB,II1GHylB,AJoGO,CAMC,UI1GG1B,ILgHE,wCKhHb,CACE5Z,KACE;AZyRN,AYzRM,ALmHNib,ACXU,SRiLHpX,IYzRcgW,AJyGflB,ERgLN,MQhLc/sB,GAAR,CIzG2BovB,AJ0GzB7B,GDIO,OCJGT,II1GG,IAA8BsC,EJ0G3C,CAAqBpsB,GAArB,CAAyB,OI1G3B;ADgBN,AX0QD,AY1RO,ALoHN2rB,ACViC,KI3G7B,EAEEyD,EDeC,IAAP,EH2FUzC,II5GN,CADF,CAD0B,IJ8GRI,QAAV,CAAmBxC,SAAnB,EAA8B0C,WAA9B,CADuB;AGzFlC,ACpB6B,ALiHb,ACJkB,CG9InC,AJkJA,EKjHE,IJ6GQ,CADF,EAIEhmB,IAJF,CAIO;ARgLf,AQhLe,SRgLNigB,MQhLoBsC,QRgL7B,CAAwBxiB,GAAxB,EAA6BxI,IQhLkBysB,CRgL/C,EAAoC7E,QQhLP,EAA+B0D,ERgL5D,EAAkDtD,MQhLrB,CAAd,IRgLf,EAA+DvmB,GAA/D,EAAoE2c,KAApE,EAA2E;AW1Q3EkR,AX2QE,AYzRA,AJwGa,MRiLTxlB,CQrLE,CADI,ERsLV,EAAU8O,CW3QC/b,EX2QX,EAAeisB,IAAf,CW3QF,CAAuBvE,WAAvB,GAAqC,UAAS7d,IAAT,EAAempB,QAAf,EAAyB;AAC5D,AX2QA/G,AQvLU,KAND,CG9ELhQ,AH8EF,CG9EF,EX2QOpb,OAAOqrB,wBJvUPxG,AIuUA,CAAgCviB,KAAhC,EAAuCyB,GAAvC,KAA+C,EAAEzB,OAAOA,MAAMyB,GAAN,CAAT,EAAtD;AACA,AQjLC,GAdD,GR+LIqnB,KAAKE,GAAT,EAAc;AW1Qd,AX2QE,MW3QE,CAACnB,CX2QCiB,KAAKpT,GAAT,EW3Qcma,AX2QA,QW3QX,CAAL,EACE,MAAMtvB,UAAU,6BAAV,CAAN;AX2QEqY,AQjLJ,YRiLUpQ,IAAIse,OAAJ,CAAY,iBAAZ,EAA+B,SAA/B,CAAN;AWzQJ,AX0QG,KAFD,CWxQE,CAAC,IX0QI,CW1QCyI,OAAV,EACE,KAAKA,OAAL,GAAe,EAAf;AX0QE3W,YAAMpQ,IAAIse,OAAJ,CAAY,UAAZ,EAAwB,SAAxB,CAAN;AWxQJ,AXyQG;AWxQH,AXyQC,AYzRD,GZmRA,GYnRM+J,GZyRC,gBYzRkB,SAAnBA,gBAAmB,CAACC,SAAD,EAAYvD,WAAZ;ADiBzB,AXyQE,AY1RuB,MDiBrB,EXyQEzE,GWzQGyG,AChBPrB,EZyRSxY,GAAT,EWzQE,AXyQY,CWzQCoa,GChBJnD,QDgBb,EACE,KAAKhI,IAAL,CAAU,aAAV,EAAyBje,GCjBzB,CDiBA,AChBEkM,EDiBQiV,GCjBH,QDiBcgI,SAASA,QAApB,IACAA,SAASA,QADT,GACoBA,QAF9B;AXyQEjX,AYzRK,YZyRCpQ,CYzRWokB,GZyRP9F,MYzRgByG,CZyRpB,CAAY,SYzRD,CZyRX,EAAwB,CYzRWA,QZyRnC,CJ/UHhL,AI+UH,EYzRK;ADoBT,AXsQG,AY1RM,KAAL,CDoBA,CAAC,ACpBqDuO,KDoBhDvB,ICpBN,CADF,CADuB,CDsBpB,CAAa7oB,IAAb,CAAL;AACE,AXsQD,AY7RwB,GAAzB;ADwBE,AXsQF,AQjLAskB,MRiLI,CAAC7rB,EWtQEowB,OAAL,CAAa7oB,GHqFGpG,CGrFhB,CXsQkB0nB,GWtQG6H,CHqFvB,GAA2B,IGrFzB,AXsQG,CWxQL,CXwQiCpuB,GAA5B,CWrQA,AXqQL,AQjLoCwtB,ERiLG,EWrQ9BrJ,SAAS,IHoFS,CGpFJ2J,CHoFgChxB,CAA5B,EAA+Be,GGpFxC,AHoFS,CGpFIoH,CHoF8C,GGpF3D,CAAT,CAAJ;AACH,AXqQAoD,AY1RF,AJwG6E,QAAdolB,GRkLtD,IQlLoE,ERkL9DztB,GAAN,GAAY,GAAnB,4DQlLuE,EAAI;AGlF3E,AXqQD,SWrQM8tB,OAAL,CAAa7oB,IAAb,EAAmBmC,IAAnB,CAAwBgnB,QAAxB,EAFG;AAIH,AXoQF,AQnLEvwB,MRmLE,CAACsZ,GAAL,AQnLQra,ERmLE,AQnLAe,GAAF,EAAO2vB,iBAAP,EAA0BC,OAA1B,CAAN;AGhFA,AXoQA,AQnLA,QRmLI1mB,CWpQC+mB,EHiFEN,CRmLC/iB,IWpQR,AXoQI,CWpQSxF,AXoQA6D,IWpQb,GXoQI,CWpQiB,AXoQAue,CWpQC,GHiFGwC,CRmLCtrB,CWpQCuvB,IXoQvB,GWpQkB,CAAa7oB,AXoQA,AQnL5B,CRmLP,AQnLoCpG,ERmLE,CWpQhB,CAAD,EAAqBuvB,AHiFnC,CAAoC,OGjFtB,CAArB,EHiF4CV,IAAD,EAAOpD,SAAP,EAAkB9b,CAAlB,EAAwB;ARoLjE,AQnLA,URmLI0V,AQnLEyJ,ORmLKxH,IQnLMsH,QRmLb,AQnLqB9qB,CRmLzB,EAA0B,GQnLT,CAAe,CAAC6qB,iBAAD,EAAoB,CAAClD,SAAD,EAAY9b,CAAZ,CAApB,CAAf,CAAjB;AGhFJ,AXoQM2I,AQnLF,aAAOoS,CRmLC1D,YAAY9e,GAAZ,EAAiBsgB,AQnLAxR,EAAlB,CAAqByU,ERmLE/rB,KAAtB,EAA6B,AQnL9B,CZpKJuiB,GIuVK,AQlLJyI,CRkLF,iBQlLoB1qB,MAAlB,CAAyByrB,SAAzB,EAAoCxtB,CAApC,EAAuC4wB,IAAvC,EAA6CC,QAA7C,CADG,GAEH7wB,EAAE4wB,IAAF,EAAQpD,SAAR,EAAmBqD,QAAnB,CAFJ;AGhFJ,AXoQK,AQjLF,KALM,CG9ELxJ,CXkQA,AQ/KCtmB,GALI,CAAP,ERsLS,EWpQE,KAAKiwB,OAAL,CAAa7oB,IAAb,CAAT,KAAgC,CAAC,KAAK6oB,OAAL,CAAa7oB,IAAb,EAAmBuf,MAAxD,EAAgE;AAC9D,AXoQIrN,AQjLL,GARD,KG3EM,CAACmN,KXoQKuB,OWpQO,KAAKkI,AXoQAhnB,GAAZ,EAAiBsgB,KAAK9oB,GWpQ3B,CAAL,CXoQU,CWpQ4B,CXoQC4nB,eAAe,CAA5C,CAAN;AWnQF9O,AXoQC,AY1RL,MAAMiY,IDsBE,KAAKvB,YCtBczqB,CDsBvB,KCtB6B,UAAC+rB,SAAD,EAAYpD,YAAZ;ADuB9B,AXoQC,AY3R6B,AJ0GjC,KGrFE,KXsQM9U,CWpQC,ACtBP5Q,GZ0RUuC,EY1RLuB,KZ0RC,CAAY,CY1RN,GZ0RN,IAAoB,CAAC,CAAzB,EAA4B;AWnQ5BgN,AXoQE,AY3RQ,UDuBNwW,ACvBS/B,EZ2RPnP,KAAJ,EAAW,EY3RH,EDuBOqR,OCvBJlC,WAAH,CDuBV;AACD,AXoQK3U,AY5RM,aAAqB8U,GZ4RrB9U,IAAI1Q,KAAJ,CAAU,AY5RwByjB,IZ4RlC,EAAgBnqB,EY5RK,CZ4RrB,AY5R2C+rB,CZ4RvB,UAAStE,AY5RR,CAArB,GZ4RoB,EAAe;AACvC,AY7RI,KAAP,CAAL,EACE6H,SADF,CAD+B,CZ8RhB,OAAO7H,IAAd;AWnQR,AXoQO,AY/RwB,GAAN,CAA3B,ID2BMnQ,GXkQQ,EWlQHA,AXoQA3Q,IWpQI,AXkQD,CWlQR,AXoQU,IWpQI,AXkQN,EAEQ+gB,GWpQGqG,GXkQX,CAEe,CAFf,CAAN,CWlQY,CAAa7oB,IAAb,EAAmB1M,MAAnB,GAA4B8e,CAA9C,EAAiD;AAC/C,AXoQG,SAJD,EWhQGyW,IXoQI,GWpQT,CAAa7oB,IAAb,EAAmBuf,MAAnB,GAA4B,IAA5B,Sf3FG1D;Ae4FH8D,AXoQIzN,AY3RR,AJ0GAoS,MI1GMgG,QDuBMzK,EXoQE,GWpQV,CAAc,AHmFA9S,GRiLGmF,IAAI1Q,AQjLzB,EI1G6BnD,CJ0GD,ERiLP,CAAU,EY3RI,EZ2Rd,EAAgBvD,CQjLRytB,ERiLR,CAAoB,EY3RLgC,OAAD,CZ2RehI,CY3RLviB,GZ2RJ,AQjLb,CI1GO,CZ2RqB,AQjLRnI,CI1GM,AJ0G1B,EAA0B,QGlFpC,qCADA,GAEA,kDAFd,EAGc,KAAKgxB,OAAL,CAAa7oB,IAAb,EAAmB1M,MAHjC;AAIA,AXiQM,AY3RR0M,AJ0GAskB,SI1GKkG,CD0BC,OAAO7K,EXiQE,AY3Rf,GAAkB0K,AJ0GAzwB,GGhFGgmB,EXiQE2C,CQjLvB,CACEgG,CGjFI,CXiQE,IWjQuB,MC1BMgC,ID0BnC,CHgFF,CGhF2C,CHkFzC,CI5G2CH,SAA3B,AJ4GfxW,CAAD,CI5GsD5T,CJ4GlDqlB,II5GuD2B,KJ4G3D,EAAe2B,EAAf,EAAsB,CI5GN,CAAlB;AD2BI,AXiQG,AY3RP,AJ4GI9wB,QAAEwtB,GR6Ka,AYzRZrlB,EZ2REyB,EY3RT,EZyRmB,AQ7Kf,CR+KU,IAFK,CAAb;AW9PFke,AXiQC,AY3RN,AJ4GI,GI/GwB,CAA7B,CJ2GE,EAKE,IALF,KG9EYC,KAAR;AACD,AXiQA,AQ7KJ,GARD;AG3EG,AXiQA,AY3RH,KZ0QE,CY1QI6K,KZ2RG,eY3RiBpsB,MAAM,UAACksB,OAAD,EAAUnc,MAAV,EAAqB;AD2BpD,AXiQG8D,AY3RF,AJ8GF,QI9GQwY,IZ2RE5oB,IAAIse,KY3ROyJ,EZ2RX,CAAY,UY3RYU,EZ2RxB,EAA0B,IY3RMT,KZ2RhC,AY3RW,CZ2RjB,CY3R6C1b,OAAOyX,OAAnC,CAAnB;AZ4RC,AY3RD,WAAO2B,WACJ9B,6BADI,CAC0BgF,UAD1B,EACsCtc,MADtC,EAEJrM,IAFI,CAEC,gBAAQ;ADyBlB,AXiQC,AYzRKqM,SDwBC,IAAP,ACxBauc,KAAP,GAAe3qB,IAAf,0BhB9EC6b;AeuGR,AXiQC,AYzRM,CDxBR,KXiTMwD,OYzRSjR,KZyRGhL,CYzRV,GZyRF,CAAJ,EAAuB;AACrB,AYzRG,KALI,CAAP,EZ8RIsU,SAAS3c,IAAIuH,KAAJ,CAAU,OAAV,CAAb,EAAiC;AWhQrCsmB,AXiQM,AYzRH,GARyB,CAA1B,SDgCWzyB,AXiQA+b,GAAP,MWjQN,CAAuB0L,EAAvB,GAA4BgL,aAAazyB,SAAb,CAAuB0nB,WAAnD;AXkQK,AQ7KHyG,oBAAkB1T,EAAlB,GAAuB;AGnFzBgY,AXiQIxlB,AYzRF,AJ2GuB,WR8Kd2b,AQ7KPsG,EGpFSlvB,GXiQG6oB,MWjQhB,CAAuBrK,CHoFN0Q,CR6KN,CAAe,CWjQ1B,GAA8B,CXiQCtqB,GAApB,AQ7KgBwrB,CR6KvB,KWjQmCvmB,AHoFtB,IGpFa,CHoFQynB,CGpFO0B,QAAf,CHoFkBxB,CGpFO,IHoFjB,CAAgBrD,iBAD7B;AGlFvB,AXiQE,AQ/KqB,GAAvB,GGlFI,CAACnD,CXiQC/d,KAAKd,KWjQK6mB,AXiQV,CAAW,OWjQZ,CAAL,EACE,MAAMtvB,UAAU,IXgQZ,CAAJ,EAAgD,sBWhQ1C,CAAN;AXiQEuJ,aAAOA,KAAKof,MAAL,CAAY,CAAZ,EAAepf,KAAK9P,MAAL,GAAc,CAA7B,CAAP;AW/PJ,AXgQI8P,AQ9KJ,MGlFIimB,OXgQOvnB,CWhQC,GXgQGse,EWhQf,KXgQW,CAAYhd,IAAZ,EAAkB,MAAlB,CAAP;AACD,KAHD,MAGO,gCJ/WFyY;AegHP,AXgQIzY,WWhQKjF,CAAT,CXgQWiF,EWhQE,GXgQGc,OAAL,CAAa,IAAb,EAAmB,KAAnB,EACKA,OADL,CACa,MADb,EACqB,GADrB,EAEKA,OAFL,CAEa,UAFb,EAEyB,GAFzB,CAAP;AW/PF,AXkQEd,AY3RJ,MAAMwnB,GDyBC7M,IXkQIjc,IAAIse,GY3RK,GDyBlB,CAAoBpgB,AXkQX,CAAYoD,GWlQrB,CXkQS,AY3RLwnB,CDyBsBzsB,CAA1B,AXkQ2B,QAAlB,CAAP,AY3RgB,IAAK;AZ4RtB,AY3RD,WAAO,UAAS0sB,OAAT,EAAkB;AD0BzB,AXkQD,AY3RG,QDyBE,CAACxB,ICzBIwB,CDyBT,EAAY,KCzBK9oB,IAAR,CAAa,kBAAU;AD0B9BsnB,ACzBExxB,cDyBM,IAAR;AACAsxB,AXkQJ,AY3RM,AJ2GN7E,SRgLOlhB,MWlQM7P,ACzBAkB,CZ2RC,IWlQV,AXkQG,AQhLWuzB,CGlFC,ACzBb,EZ2Re9V,EWlQjB,CXkQJ,CWlQyB7e,GHkFzB,GAA+B,GGlF3B;AACD,AXkQJ,AY3RM,AJ0G0B,OI7GpB,CAAP,GJ6GmCy0B,QAAQA,KAAKZ,cAArB;AGhF9B,ACzBE,AJyG4B,GAA/B,EI9GE;AZkSJ,AY5RG,GAPD,MZmSOjF,oBAAT,CAA8BlS,MAA9B,EAAsC6R,IAAtC,EAA4CC,GJ1XnChG,GI0XT,EAAoD;AWlQlD1d,AXmQA,AQnLA,IGhFEgrB,EXmQE1G,GQnLG,GGhFP,GAAa0G,KXmQK,CAAlB,EWnQA;AACA,AXmQA,AY5RA,AJyGE1B,MRmLEn0B,CWnQCsqB,EAAL,CAAQ5d,IAAR,CXmQa+P,CWnQC5R,CAAd,KXmQoBvE,EQpLb,IRoLM,CAAc,UAAS8oB,IAAT,EAAeC,GAAf,EAAoB;AAC7CF,AQnLA8B,4CAFK;AG7EP,AXmQE,AQnLAD,QRmLI3B,CWnQC,GXmQG9e,CWnQV,MXmQM,CAAY,IAAZ,KAAqB,CAAzB,EAA4B4e;AWlQ/B,AXmQG,AQvLK,CG/FT,EH+FE,QRuLSC,OAAOC,IAAIze,OAAJ,CAAY,iBAAZ,EAA+B,EAA/B,EAAmC5Q,MAA1C,GAAmD,CAA1D;AACD,AQnLF,CA1PD,ERyae,EAIV,CAJU,CAAb;AW9PF;AACAs1B,AXmQE,MAAIt1B,OWnQO6C,EXmQE,EAAb,EAAiB,GWnQnB,CAAuB4nB,cAAvB,GAAwC,UAAS/d,IAAT,EAAempB,QAAf,EAAyB;AAC/D,AXmQE,AY5RF,MDyBInzB,ACzBE80B,IDyBN,CXmQSjJ,CWnQCyH,MXmQM,CAAP,CWnQT,EAAoBh2B,ACzBE,EZ6RZsuB,IWpQV,EAA4BrY,CAA5B,ACzBMuhB,EZ6Ra,EAAT,GAAc,EAAd,GJnYHjP,AImYsB+F,CY7RP,CAACmJ,KZ6Ra,EY7Rd,EAAUC,CZ4RvB,IAEA,CY9Ra,EZ4Rb,GAGAjb,OAAOtO,IAAP,CAAY,OAAZ,CAHA,GAIA,GAJA,GAKAogB,OAAO,CAAP,CALP;AAMD,AYlSqB,WAAqBvgB,KAAKypB,OAAL,EAAcH,YAAYI,MAAZ,CAAd,CAArB;AD2BtB,AC3BsB,GAAtB,GD2BI,CAAC7J,WAAWgI,QAAX,CAAL,EACE,MAAMtvB,UAAU,6BAAV,CAAN;AXwQF,SAAOgoB,OAAO,CAAP,IAAYD,IAAZ,GAAmB,GAAnB,GAAyB7R,OAAOtO,IAAP,CAAY,IAAZ,CAAzB,GAA6C,GAA7C,GAAmDogB,OAAO,CAAP,CAA1D;AWtQA,AXuQD,AYnSC,MD4BI,CAAC,KAAKgH,OAAN,IAAiB,CAAC,KAAKA,OAAL,CAAa7oB,IAAb,CAAtB,EACE,OAAO,IAAP;AC5BF,MAAMirB,qBAAqB,SAArBA,kBAAqB,UAAW;AD8BtCj1B,AXuQF,AYpSI,SD6BK,KAAK6yB,OAAL,CAAa7oB,IAAb,CAAP;AACA1M,AXuQF,WWvQW0C,KAAK1C,MAAd;AACAg2B,AXuQF,AYpSI,SZoSKxyB,IWvQI,CAAC,CAAZ,CXuQF,CAAiB8rB,EAAjB,EAAqB;AACnB,AYpSE2H,SZoSKr0B,GYpSGk0B,GZoSGtzB,MYpSX,CZoSK,CAAc8rB,CYpSC9nB,CZoSf,CAAP,EYpS0B8uB,YAAYhD,ChB5G/B/K,OgB4Ge,EAA0B0O,QAAQH,SAAlC,CAApB;AD8BF,AXuQD,MWvQKp0B,SAASmzB,QAAT,IACChI,WAAWnrB,KAAKmzB,QAAhB,KAA6BnzB,KAAKmzB,QAAL,KAAkBA,QADpD,EAC+D;AAC7D,AXsQJnN,AYpSI,QZoSIllB,GWtQG,IXsQX,CWtQgB+xB,EXsQE/xB,KWtQP,CAAakJ,CXsQxB,GWtQW,CAAP;AACA,AC9BAuqB,QD8BI,IC9BIL,CD8BCrB,OAAL,CAAa9K,GC9BjB,GAAuBjjB,IAAI8uB,ID8B3B,EACE,KAAK3L,CC/BgCgJ,GD+BrC,CAAU,OC/BW,EAA6BsD,OD+BlD,CC/B0DL,CD+B9BlqB,IAA5B,EAAkCmpB,KC/Bb,CAAvB,ED+BE;AAEH,AXoQH,GW1QE,MAMO,AXoQA5I,IWpQIrB,KXoQb,CAAmB2D,GWpQG7sB,AXoQtB,EAAwB,EWpQX,CAAJ,EAAoB;AACzB,AXoQF,AYpSE,SDgCKuT,AXoQA,IWpQIjW,GXoQGuvB,GWpQZ,AXoQK,EWpQYtZ,GXoQG,GWpQG,CAAvB,GAA2B,EXoQ7B;AWnQI,AXoQL,AYpSGghB,UDgCMv0B,EChCEk1B,GDgCG3hB,CAAL,MAAY4f,GChClB,GAAwBruB,EDgClB,EC/BJ8uB,EDgCK5zB,KAAKuT,CAAL,EAAQ4f,EChCDhC,MDgCP,IAAoBnxB,ECjCH,EAEtBu0B,CD+B8BhhB,CAAL,EAAQ4f,IC/BzB+B,ID+BiB,KAAqB/B,IC/B9C,ID8BA,AC9ByB,ED+BgC,ACjCnC,CAAxB;ADkCIG,AXmQRtN,QAAQuE,SAAR,EWnQmBhX,CAAX,AXmQYgX,SAApB;AWlQQ,AC9BJ;AD+BG,AXmQP,AYjSI,QAAM4K,CZiSDlM,MAAT,CAAgB4D,GAAhB,AYjSqBvhB,EZiSA,GYjSKsoB,YAAY7C,IAAjB,EAAuBuD,GhBvHnCzO,kBgBuHwD0O,OAArB,CAAvB,CAAjB;AD+BC,AXmQH,AYjSEA,SZiSK1H,GYjSGiH,KZiSK,AYjSb,GAAgBhvB,CZiSlB,GYjSsBqwB,QAAJ,EAAcZ,QAAQT,KAAtB,CAAhB;AZkSH;AWlQG,AXmQJ9N,AYjSI,QD8BIsN,AXmQArK,MAAR,GAAiBA,EWnQE,CAAf,EACE,CXkQN,MWlQa,IAAP;AC9BF,QAAMmM,aAAa9pB,KAAKsoB,YAAYpD,MAAjB,EAAyBiE,kBAAkBF,OAAlB,CAAzB,CAAnB;ADgCA,AXkQJ,AYjSI,QD+BIv0B,CXkQC8sB,EYjSE+B,ED+BEvxB,MAAL,AC/BWwE,GAAR,CAAYgD,CD+BC,CAApB,CXkQJ,CWlQ2B,AXkQA+nB,AYjSAuI,GZiS3B,EAAgC,KYjST,EAAgBb,QAAQP,OAAxB,CAAZ,EAA8CjoB,IAA9C,CAAmD,mBAAW;ADgCnE/L,AXkQJ,AYjSIu0B,SZiSG1H,EWlQEvvB,GC/BG02B,EZiSE,CWlQV,GAAc,AXkQlB,CWlQI,AC/BA,GAAkBA,OAAlB;ADgCA,AXkQL,AYjSK,aD+BO,AC/BAO,KD+BK1B,EC/BZ,KD+BO,CAAa7oB,IAAb,CAAP;AACD,AXkQLgc,AYjSK,KD4BD,AC/BO,CAAP,EZoSI8G,GWlQG,cXkQX,GAA4BA,iBAA5B;AWjQM9sB,AC/BH,GAzBD,QDwDS6S,MAAL,CAAYygB,QAAZ,EAAsB,CAAtB,qBf9JGzN;Ae+JJ,AXkQL,SAASsG,QAAT,CAAkBU,GAAlB,EAAuB;AACrB,AYjSA,SZiSO,OAAOA,GAAP,KAAe,QAAtB;AWjQE,AXkQH,QWlQO,KAAKgG,OAAL,CAAa9K,cAAjB,EACE,KAAKE,IAAL,CAAU,gBAAV,EAA4Bje,IAA5B,EAAkCmpB,QAAlC;AACH,AXiQHnN,QAAQmG,QAAR,GAAmBA,QAAnB;;AW/PE,AXiQF,SWjQS,AXiQAvD,IWjQP,IXiQF,CAAkBiE,GAAlB,EAAuB;AWhQtB,AXiQC,CW5SF,QX4SS,OAAOA,GAAP,KAAe,QAAtB;AACD;AWhQD+F,AXiQA5M,QAAQ4C,KWjQKzoB,GXiQb,GAAmByoB,GWjQnB,CAAuBZ,IXiQvB,cWjQA,GAA4C,IfvKnCnC,MeuK4C7b,IAAT,EAAe;AACzD,MAAIjF,GAAJ,EAASqjB,SAAT;AXkQF,SAAS2E,QAAT,CAAkBF,GAAlB,EAAuB;AWhQrB,AXiQA,MWjQI,CAAC,EXiQE,GWjQGgG,IXiQIhG,GWjQd,AXiQO,EWhQL,GXgQoB,IWhQb,IAAP,AXgQF;AACD;AW/PC,AXgQF7G,QAAQ+G,QAAR,GAAmBA,QAAnB;AW/PE,MAAI,CAAC,KAAK8F,OAAL,CAAa9K,cAAlB,EAAkC;AAChC,AXgQJ,QWhQQ1qB,CXgQCgsB,SWhQS/rB,EXgQlB,CAAqBuvB,GWhQb,AXgQR,EAA0B,GWhQG,CAAzB,EACE,KAAKgG,OAAL,GAAe,EAAf,CADF,KAEK,IAAI,KAAKA,OAAL,CAAa7oB,IAAb,CAAJ,EACH,OAAO,KAAK6oB,OAAL,CAAa7oB,IAAb,CAAP;AACF,AX6PF,SAAO6iB,EW7PE,IAAP,EX6Pa,KAAK,CAApB;AW5PC,AX6PF,oDJhbQhH;AIibTG,QAAQqD,WAAR,GAAsBA,WAAtB;AW5PE;AACA,AX6PF,MW7PMhsB,GX6PGquB,OW7POpuB,CX6PhB,CAAkB0vB,EAAlB,EW7PM,AX6PgB,KW7PK,CAAzB,EAA4B;AAC1B,AX6PF,SW7POjoB,AX6PAmkB,GW7PL,IAAY,EX6PE8D,EAAT,CW7PY6F,IX6PI5F,GW7PrB,EAA0B,UX6PUD,EAAf,MAAuB,iBAA9C;AW5PI,AX6PL,UW7PSjoB,QAAQ,gBAAZ,EAA8B;AAC9B,AX6PNihB,QAAQ0F,GW7PG1D,KX6PX,GAAmB0D,QAAnB,EW7PM,CAAwB3mB,GAAxB;AACD;AACD,AX6PJ,SW7PSijB,AX6PAkB,QAAT,CAAkB2D,GAAlB,EAAuB,IW7PnB,CAAwB,gBAAxB;AACA,AX6PF,SW7POgG,AX6PA,OW7PL,AX6PYhG,GW7PG,AX6PV,EW7PL,GX6PoB,QAAf,IAA2BA,QAAQ,EJxbnChH,EIwbP;AW5PE,AX6PH,WW7PU,IAAP;AACD,AX6PHG,QAAQkD,QAAR,GAAmBA,QAAnB;;AW3PEd,AX6PF,SAASuD,KW7PK,CX6Pd,CAAgBrd,CAAhB,EW7PmBukB,AX6PA,OW7PL,CAAa7oB,IAAb,CAAZ;AX8PA,SAAOkf,SAAS5a,CAAT,KAAe2e,eAAe3e,CAAf,MAAsB,eAA5C;AW5PA,AX6PD,MW7PK6c,WAAW/C,SAAX,CAAJ,EAA2B;AACzB,AX6PJpC,QAAQ2F,CW7PC5D,KX6PT,GAAiB4D,MW7Pb,AX6PJ,CW7PwB3hB,IAApB,EAA0Boe,SAA1B;AACD,GAFD,MAEO,IAAIA,SAAJ,EAAe;AACpB,AX6PJ,SAASoD,OAAT,CAAiB1H,CAAjB,EAAoB,uBJhcX+B;AeoML,AX6PF,SAAOqD,EW7PEd,OX6POtE,CAAT,EW7PYxmB,IX8Pd2vB,EW9PH,EACE,KAAKlF,MX6PWjE,CAAf,MAAsB,CW7PvB,CAAoB9Z,IAApB,EAA0Boe,QX6PzB,EW7PmCA,EX6POtE,QW7PGxmB,KX6PUgC,CW7PpB,GAAmB,CAA7B,AX4PvB,CW5PH,AX4PJ;AW3PC,AX6PF;AW5PC,AX6PF0mB,QAAQwF,CW7PC,KAAKqH,CX6Pd,GAAkBrH,GW7PT,CAAaxhB,GX6PtB,CW7PS,CAAP;;AAEA,AX6PF,SW7PS,AX6PAmhB,IW7PP,MX6PF,CAAoB0B,GAApB,EAAyB;AW5PxB,AX6PC,CWnSF,QXmSS,OAAOA,GAAP,KAAe,UAAtB;AACD;AW5PD+F,AX6PA5M,QAAQmF,KW7PKhrB,KX6Pb,GAAqBgrB,CW7PrB,CAAuB/C,QX6PvB,CW7PA,GAAmC,UAASpe,IAAT,EAAe;AAChD,MAAIlB,GAAJ,iCf5MO+c;Ae6MP,AX6PF,MW7PM,CAAC,EX6PEqH,GW7PG2F,OAAN,CX6PN,CAAqBhG,EW7PE,CAAC,AX6PxB,EAA0B,GW7PGgG,OAAL,CAAa7oB,IAAb,CAAtB,EACElB,MAAM,EAAN,CADF,KAEK,IAAIqiB,WAAW,KAAK0H,OAAL,CAAa7oB,IAAb,CAAX,CAAJ,EACHlB,MAAM,CAAC,KAAK+pB,OAAL,CAAa7oB,IAAb,CAAD,CAAN,CADG,KAGHlB,MAAM,KAAK+pB,OAAL,CAAa7oB,IAAb,EAAmB5J,KAAnB,EAAN;AACF,AXwPA,SWxPO0I,AXwPA+jB,GWxPP,KXwPe,IAAR,IACA,OAAOA,GAAP,KAAe,SADf,IAEA,OAAOA,GAAP,KAAe,QAFf,IAGA,OAAOA,GAAP,KAAe,QAHf,IAIA,OAAOA,GAAP,KAAe,QAJf,IAI4B;AW3PpC,AX4PQ,CWrQT,QXqQgBA,GAAP,KAAe,WALtB;AAMD;AW3PD+F,AX4PA5M,QAAQkH,KW5PK/sB,MX4Pb,GW5PA,AX4PsB+sB,CW5PCqG,UX4PvB,GW5PA,GAAuC,UAASvpB,IAAT,EAAe;AACpD,MAAI,KAAK6oB,OAAT,EAAkB;AAChB,AX4PJ7M,QW5PQwN,AX4PArG,QAAR,GAAmBC,EW5PE,KAAKyF,CX4PC,MW5PN,CAAa7oB,IAAb,CAAjB,QX4Pe,CAAnB;;AW1PI,AX4PJ,QW5PQmhB,CX4PC8B,UW5PUuG,IX4PnB,CAAwBnV,CAAxB,EAA2B,EW5PnB,CAAJ,EACE,OAAO,CAAP,CADF,IfzNKwH,Ce2NA,IAAI2N,UAAJ,EACH,OAAOA,WAAWl2B,MAAlB;AACH,AXyPD,SAAO0D,OAAOb,SAAP,CAAiBc,QAAjB,CAA0BZ,IAA1B,CAA+Bge,CAA/B,CAAP;AWxPA,AXyPD,SWzPQ,CAAP;AACD,CAVD;AXqQA,SAASlQ,GAAT,CAAaxP,CAAb,EAAgB;AWzPhBi0B,AX0PE,SAAOj0B,IW1PI40B,AX0PA,EAAJ,GAAS,MAAM50B,EW1PxB,AX0P0BsC,GW1PG,KX0PL,CAAW,EAAX,CAAf,CW1P6BwyB,EX0PG90B,EAAEsC,GW1Pd,EAAkB+I,GX0PN,CW1PZ,AX0PuB,EW1PC,AX0PZ,CAAvC;AWzPA,AX0PD,SW1PQypB,QAAQF,aAAR,CAAsBvpB,IAAtB,CAAP;AACD,CAFD;AX8PA,IAAIqjB,SAAS,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,EAAkD,KAAlD,EAAyD,KAAzD,EACC,KADD,EACQ,KADR,EACe,KADf,CAAb;AW1PA,SAASlC,UAAT,CAAoB0B,GAApB,EAAyB,gBfpOhBhH;AeqOP,AX4PF,SW5PS,OAAOgH,GAAP,KAAe,UAAtB;AACD,AX4PD,SAASS,SAAT,GAAqB;AACnB,MAAIhf,IAAI,IAAI9D,IAAJ,EAAR;AW3PF,AX4PE,MAAI+iB,GW5PGpB,IX4PI,CAAChe,GW5Pd,CAAkB0e,AX4PAve,EAAEkf,CW5PpB,EAAuB,KX4PL,EAAJ,CAAD,EACCrf,IAAIG,EAAEmf,UAAF,EAAJ,CADD,EAECtf,IAAIG,EAAEof,UAAF,EAAJ,CAFD,EAEsBjiB,IAFtB,CAE2B,GAF3B,CAAX;AW3PA,AX8PA,SW9PO,AX8PA,CAAC6C,EAAEqf,IW9PId,GAAP,AX8PC,EAAD,EAAcQ,CW9PC,MX8PM/e,EW9P5B,AX8P8Bsf,QAAF,EAAP,CAAd,EAAoCL,IAApC,EAA0C9hB,IAA1C,CAA+C,GAA/C,CAAP;AW7PD,AX8PA;;AW5PD,AX+PA,SW/PSyd,QAAT,CAAkB2D,GAAlB,EAAuB;AACrB,AX+PF7G,QAAQ6H,CW/PC,EX+PT,GAAc,EW/PEhB,GAAP,KAAe,EX+PC,MW/PhB,IAA2BA,QAAQ,Af5OnChH,Ie4OP;AACD,AX+PC8D,UAAQkE,GAAR,CAAY,SAAZ,EAAuBP,WAAvB,EAAoCtH,QAAQ2C,MAAR,CAAeprB,KAAf,CAAqByoB,OAArB,EAA8B3oB,SAA9B,CAApC;AACD,CAFD;AW5PA,SAASgsB,WAAT,CAAqBwD,GAArB,EAA0B;AACxB,AXgQF,SWhQSA,QAAQ,KAAK,CAApB;AACD;;;;2CfhPQhH;;;;;;;;AI4fTG,QAAQ8H,QAAR,GAAmBV,QAAQ,UAAR,CAAnB;2CJ3fSvH;AI6fTG,QAAQyE,OAAR,GAAkB,UAASsD,MAAT,EAAiB9vB,GAAjB,EAAsB;AACtC;AACA,MAAI,CAACA,GAAD,IAAQ,CAACirB,SAASjrB,GAAT,CAAb,EAA4B,OAAO8vB,MAAP;;AAE5B,MAAIrpB,OAAO1D,OAAO0D,IAAP,CAAYzG,GAAZ,CAAX;AACA,MAAIsV,IAAI7O,KAAKpH,MAAb;AACA,SAAOiW,GAAP,EAAY;AACVwa,WAAOrpB,KAAK6O,CAAL,CAAP,IAAkBtV,IAAIyG,KAAK6O,CAAL,CAAJ,CAAlB;AACD,2CJpgBMsS;AIqgBP,SAAOkI,MAAP;AACD,CAVD;;AAYA,SAAStrB,cAAT,CAAwBtB,GAAxB,EAA6B8C,IAA7B,EAAmC;AACjC,SAAOjD,OAAOb,SAAP,CAAiBsC,cAAjB,CAAgCpC,IAAhC,CAAqCc,GAArC,EAA0C8C,IAA1C,CAAP;AACD;;;yCJzgBQ4hB;;;;;;;AgBsOP,WAASwP,aAAT,CAAuBp1B,IAAvB,EAA6B;AAAA,QACnBs0B,OADmB,GACQt0B,IADR,CACnBs0B,OADmB;AAAA,QACVe,IADU,GACQr1B,IADR,CACVq1B,IADU,sBhBrOtBzP;AgBqOsB,QACJ0P,OADI,GACQt1B,IADR,CACJs1B,OADI;;;AAG3B,WAAO,IAAI1G,OAAJ,CAAY,UAASC,OAAT,EAAkBxf,MAAlB,EAA0B;AAC3C,UAAI;AACFskB,oBAAYnD,aAAZ,CACE8D,OADF,EAEE,sCAFF;AAID,OALD,CAKE,OAAOtG,GAAP,EAAY;AACZ,eAAO3e,OAAO2e,GAAP,CAAP;AACD,6ChB/OEpI;AgBgPHiJ;AACD,KAVM,EAWJ/iB,IAXI,CAWC;AAAA,aAAMkpB,mBAAmBV,OAAnB,CAAN;AAAA,KAXD,EAYJxoB,IAZI,CAYC,oBAAY;AAChB,UAAIypB,cAAJ;AACA,UAAIC,aAAJ;AACA,UAAM5C,UAAU,IAAID,YAAJ,EAAhB;AACA,UAAM8C,WAAW5Y,MAAMuY,cAAcM,QAAd,CAAuBJ,OAA7B,EAAsCA,OAAtC,CAAjB;kDhBtPC1P;AgBwPD;;;;AAIA,eAAS+P,YAAT,GAAwB;AACtB,YAAMC,wBAAwB,CAACnH,MAAML,6CAAN,CAC7BmH,KAD6B,EAE7BlH,iBAF6B,EAG7BC,mBAH6B,CAA/B;;AAMAD,0BAAkBvX,OAAlB,CAA0Bye,KAA1B,EAAiC,UAASnG,SAAT,EAAoB;AACnDA,oBAAUuC,aAAV,GACEiE,QhBpQLhQ,iBgBqQK,CAAC6I,MAAMR,gCAAN,CAAuCsH,KAAvC,EAA8CnG,SAA9C,CAFH;AAGD,SAJD;AAKD;;AAED,eAASyG,iBAAT,GAA6B;AAC3BjD,gBAAQ5K,IAAR,CAAa,SAAb,EAAwBwN,IAAxB;AACD;;AAED,UAAMM,cAAczqB,KAAKsqB,YAAL,EAAmBE,iBAAnB,CAApB;yChB5QCjQ;AgB8QD;;;;;;;AAOA,eAASmQ,OAAT,CAAiB7H,IAAjB,EAAuB;AACrB,eAAOqD,WACJrC,kBhBtRJtJ,mBgBqRQ,CACkCsI,IADlC,EACwCG,iBADxC,EAEJviB,IAFI,CAEC,YAAM;AACVypB,kBAAQrH,IAAR;AACD,SAJI,CAAP;AAKD;;AAED;;;;AAIA,eAAS8H,SAAT,CAAmBnE,IAAnB,EAAyB,uBhB/RxBjM;AgBgSC,eAAO4L,UAAUI,QAAV,CAAmBC,IAAnB,EAAyB;AAC9BK,yBAAe;AAAA,mBACb4B,eAAemC,SAASlC,OAAxB,EAAiCpE,SAAjC,CADa;AAAA,WADe;AAG9B0C,8BAAoB;AAAA,mBAClB2B,oBAAoBiC,SAAShC,YAA7B,EAA2ChD,cAA3C,CADkB;AAAA,WAHU;AAK9BkB,2BAAiB;AAAA,mBACf+B,iBAAiB+B,SAAS9B,ChBrS/BvO,QgBqSK,EAAqCgL,WAArC,CADe;AAAA;AALa,SAAzB,CAAP;AAQD;;AAED;;;;4ChBxSChL;;;;;;AgBkTD,eAAS5nB,GAAT,QAA6C;AAAA,YAA9BmnB,KAA8B,SAA9BA,KAA8B;AAAA,8BAAvBoK,GAAuB;AAAA,YAAvBA,GAAuB,6BAAjB,EhBjT3B3J,KgBiT4C;AAAA,YAAR7b,IAAQ,SAARA,IAAQ;;AAC3C;AACA,eACE6kB,QAAQC,OAAR,GACG/iB,IADH,CACQ;AAAA,iBAAMylB,WAAWjC,oBAAX,CAAgCC,GAAhC,CAAN;AAAA,SADR,EAEGzjB,IAFH,CAEQ;AAAA,iBACJylB,WAAWzC,wBAAX,CAAoC/kB,IAApC,EAA0CynB,UAAUE,KAApD,CADI;AAAA,SAFR;AAKE,uChBxTL9L;AgBmTG,SAMG9Z,IANH,CAMQ;AAAA,iBAAM2pB,wBAAsB1rB,IAAtB,EAA8BksB,QAA9B,EAAwCR,QAAxC,CAAN;AAAA,SANR;AAOE;AAPF,SAQG3pB,IARH,CAQQ,qBAAa;AACjB,cAAMoqB,wBAAwB5H,oBAAoB3T,EAApB,CAAuBwK,KAAvB,CAA9B;;AAEA,cAAI+Q,yBAAyB7H,kBAAkB1T,EAAlB,CAAqBwK,KAArB,CAA7B,EAA0D;AACxD,gBAAI+Q,qBAAJ,EAA2B,ChB9TpCtQ;AgB+TW;AACA;AACA,kBAAM7gB,OAAOoxB,MAAMhR,KAAN,CAAb;AACA;;AAJyB,8BAKehQ,SAAS,CAAT,EAAYpQ,IAAZ,CALf;AAAA;AAAA,kBAKlBqxB,iBALkB;AAAA,wChB7TpCxQ;AgB6ToC,kBAKEjI,CALF;AAAA,kBAKKc,KALL;;AAMzB2X,gCAAkBzH,UAAlB,GAA+BrW,OAC7BmG,QAAQ,CADqB,EAE7B2Q,SAF6B,EAG7BgH,kBAAkBzH,UAHW,CAA/B;AAKD,aAXD,MAWO;AACL;AACA;AACA;AACAxJ,oBAAMwJ,UAAN,CAAiB0H,OAAjB,CAAyBjH,GhB3UpCxJ,MgB2UW;AACD;;AAED,mBAAOwJ,SAAP;AACD;;AAED,iBAAOR,QAAQvf,MAAR,CACL,IAAImf,OAAO8H,kEAAX,EADK,CAAP;AAGD,SApCH,CADF;AAuCD;yChBrVA1Q;AgBuVD;;;;;;;AAOA,eAASlT,MAAT,CAAgB0c,SAAhB,EAA2B;AACzB,eAAOR,QAAQC,OAAR,GACJ/iB,IADI,CACC,QhB/VT8Z;AgB+VS,iBACJ2L,WAAWrB,0CAAX,CACEqF,KADF,EAEEnG,SAFF,CADI;AAAA,SADD,EAOJtjB,IAPI,CAOC;AAAA,iBACJylB,WAAWnB,iDAAX,CACEmF,KADF,EAEEnG,SAFF,EAGEf,iBAHF,EAIEC,mBAJF,CADI;AAAA,SAPD,EAeJxiB,IAfI,CAeC,YAAM;AACV,cACEuiB,kBAAkB1T,EAAlB,CAAqByU,SAArB,KACAd,oBAAoB3T,EAApB,CAAuByU,SAAvB,CAFF,EAGE;AACA,gBAAMrqB,OAAOoxB,MAAM/G,SAAN,CAAb;AACA;AACA;6ChBnXPxJ;AgBgXO,6BAI8CzQ,SAAS,CAAT,EAAYpQ,IAAZ,CAJ9C;AAAA;AAAA,gBAIOwxB,uBAJP;AAAA;AAAA,gBAIiC5Y,CAJjC;AAAA,gBAIoCc,KAJpC;;AAKA8X,oCAAwB5H,UAAxB,CAAmC/b,MAAnC,CAA0C6L,KAA1C,EAAiD,CAAjD;2ChBpXPmH;AgBsXO,gBAAI2Q,wBAAwB5H,UAAxB,CAAmCtxB,MAAnC,KAA8C,CAAlD,EAAqD;AACnD;AACA;AACA,qBAAOqV,OAAO6jB,uBAAP,CAAP;AACD;;AAED,mBAAOnH,SAAP;AACD;wChB5XNxJ;AgB8XK,iBAAOgJ,QAAQvf,MAAR,CACL,IAAImf,OAAOgI,qEAAX,EADK,CAAP;AAGD,SAtCI,CAAP;AAuCD;;AAED;;;;4ChBnYC5Q;;;;AgB2YD,eAAS6Q,0BAAT,CAAoCrH,SAApC,EAA+CsH,iBAA/C,EAAkE;AAChE,eAAOnF,WACJlC,iCADI,CAC8BD,SAD9B,EACyCf,iBADzC,EAEJviB,IAFI,CAEC,YAAM;AACV;AACA,iBAAOkoB,oBACLiC,SAAShC,YADJ,EAELyC,iBAFK,CAAP;AAID,SARI,EASJ5qB,IATI,CASC,uBAAe;AACnBsjB,oBAAUgD,KAAV,GAAkBtC,WAAlB,KhBrZLlK;AgBsZI,SAXI,CAAP;AAYD;;AAED;;;;;yChBxZCA;;;AgBgaD,eAAS+Q,qBAAT,CAA+BvH,SAA/B,EAA0CwH,YAA1C,EAAwD;AACtD,eACErF,WACGpC,mCADH,CAEIC,SAFJ,EAGId,mBAHJ;AAKE;AALF,SAMGxiB,IANH,CAMQ;AAAA,iBAAMgoB,eAAemC,SAASlC,OAAxB,EAAiC6C,YAAjC,CAAN;AAAA,SANR,EAOG9qB,IAPH,CAOQ,kBAAU;AACdsjB,oBAAUjX,MAAV,GAAmBA,MAAnB,WhBzaPyN;;AgB2aO;AACA,iBAAOiR,wBACLzH,SADK,EAELrc,KAAKqc,UAAUjX,MAAV,CAAiBuc,KAAjB,CAAuBH,UAA5B,EAAwC3D,WAFnC,CAAP;AAID,SAfH,CADF;AAkBD;;AAED;;2ChBnbChL;;;;;;AgB2bD,eAASiR,uBAAT,CAAiCzH,SAAjC,EAA4C0H,cAA5C,EAA4D;AAC1D,eACElI,QAAQC,OAAR;AACE;AADF,SAEG/iB,IAFH,CAEQ,gChB9bX8Z;AgB8bW,iBACJ2L,WAAWvB,sCAAX,CACEZ,UAAUjX,MAAV,CAAiBuc,KAAjB,CAAuBH,UAAvB,CAAkCte,IAAlC,CACE;AAAA,mBAAYga,SAASW,WAAT,KAAyBkG,cAArC;AAAA,WADF,CADF,CADI;AAAA,SAFR;;AAUE;AAVF,SAWGhrB,IAXH,CAWQ,oBAAY;AAChBsjB,oBAAUa,QAAV,GAAqBA,QAArB;iDhBvcPrK;AgBycO;AACAwJ,oBAAU6C,QAAV,GAAqB,IAArB;AACD,SAhBH,CADF;AAmBD;;AAED;;;gDhB9cCrM;;;;;AgBsdD,eAASmR,gBAAT,CAA0B3H,SAA1B,EAAqC4H,QAArC,EAA+C;AAC7C,eAAOpI,QAAQC,OAAR,GAAkB/iB,IAAlB,CAAuB,YAAM;AAClCsjB,oBAAU6C,QAAV,GAAqB+E,QAArB;AACD,SAFM,CAAP;AAGD,yChBzdApR;;AgB2dD;;;;;;;AAOA,eAASqR,4BhBjeRrR,AgBieD,CAAsCiL,eAAtC,EAAuD;AACrD,eAAO4C,OACJC,YADI,CAEHuC,SAAShB,aAAT,CAAuBhf,IAAvB,CACE;AAAA,iBAAgBkb,aAAaN,eAAb,KAAiCA,eAAjD;AAAA,SADF,CAFG,EAMJhsB,GANI,CAMA;AAAA,iBAAgBssB,aAAaC,SAA7B;AAAA,SANA,EAOJ8F,WAPI,CAOQ;AAAA,iBACXzB,SAAS0B,2BAAT,CAAqClB,QAArC,EAA+CR,QAA/C,CADW;AAAA,SAPR,CAAP;AAUD;8ChB3eA7P;AgB6eD;;;;;;;AAOA,eAASuQ,KAAT,CAAeiB,OAAf,EAAwB;AACtB,eAAO/I,kBAAkB1qB,MAAlB,CACL4xB,IhBrfH3P,CgBofQ,EAEL,UAACjjB,GAAD,EAAMysB,SAAN,EAAiBmD,OAAjB,EAA6B;AAC3B,iBAAO6E,YAAYhI,SAAZ,GAAwBmD,OAAxB,GAAkC5vB,GAAzC;AACD,SAJI,EAKL,IALK,CAAP;AAOD;;AAED;;;;uChB5fCijB;;;AgBmgBD,eAAS8K,MAAT,GAAkB;AAChB,eAAOc,UAAUd,MAAV,CAAiB6E,KAAjB,CAAP;AACD;;AAED;;4ChBtgBC3P;;;;;;AgB8gBD,eAAS+B,EAAT,CAAY0P,SAAZ,EAAuBnE,QAAvB,EAAiC;AAC/BN,gBAAQjL,EAAR,CAAW0P,SAAX,EAAsBnE,QAAtB;AACD;0ChB/gBAtN;AgBihBD;;;;;;;;AAQA,eAASlH,IAAT,CAAc2Y,SAAd,EAAyBnE,QAAzB,EhBxhBCtN,AgBwhBkC;AACjCgN,gBAAQlU,IAAR,CAAa2Y,SAAb,EAAwBnE,QAAxB;AACD;;AAED;;;;;yChB3hBCtN;;;;;AgBqiBD,eAASiC,GAAT,CAAawP,SAAb,EAAwBnE,QAAxB,EAAkC;AAChC,YAAI,CAACmE,SAAL,EAAgB;AACd;AACAzE,kBAAQ7K,kBAAR;AACD,SAHD,MAGO,IAAI,CAACmL,QAAL,EAAe,WhBxiBvBtN;AgByiBGgN,kBAAQ7K,kBAAR,CAA2BsP,SAA3B;AACD,SAFM,MAEA;AACLzE,kBAAQ9K,cAAR,CAAuBuP,SAAvB,EAAkCnE,QAAlC;AACD;AACF;;AAED;AACA,aACE,CAACmC,OAAOW,UAAUX,IAAV,CAAP,GAAyBI,SAAS6B,cAAT,CAAwBrB,QAAxB,EAAkCR,QAAlC,CAA1B;AACE,2ChBjjBH7P;AgBkjBI9Z,UAFH,CAEQ+oB,cAAckB,OAAd,EAAuBD,WAAvB,CAFR;AAGE;AAHF,OAIGhqB,IAJH,CAIQ,YAAM;AACV;;;;;AAKA0pB,eAAO,0BhBzjBZ5P;AgB0jBO+B,cAAIA,EADC;AAELjJ,gBAAMA,IAFD;AAGLmJ,eAAKA,GAHA;;AAKLkO,mBAASlB,cAAckB,OAAd,EAAuBD,WAAvB,CALJ;AAML93B,eAAK62B,cAAc72B,GAAd,EAAmB83B,WAAnB,CANA;AAOLpjB,kBAAQmiB,cAAcniB,MAAd,EAAsBojB,WAAtB,CAPH;AAQLa,iCAAuB9B,cACrB8B,qBADqB,EAErBb,WAFqB,CARlB;AAYLe,mCAAyBhC,ahBpkBhCjP,CgBqkBSiR,uBADuB,EAEvBf,WAFuB,CAZpB;AAgBLW,sCAA4B5B,cAC1B4B,0BAD0B,EAE1BX,WAF0B,CAhBvB;AAoBLiB,4BAAkBlC,cAAckC,gBAAd,EAAgCjB,WAAhC,CApBb;;AAsBLmB,oEAtBK;AAuBLvG,wBAvBK;;AAyBL;;2ChBhlBP9K;;;AgBqlBO,cAAIsI,IAAJ,GAAW;AACT,mBAAOqH,KAAP;AACD,WAhCI;;AAkCL;AACA,cAAIjB,OAAJ,GAAc;AACZ,mBAAO2B,QAAP,chB1lBTrQ;AgB2lBQ,WArCI;;AAuCL;AACA,cAAI0P,OAAJ,GAAc;AACZ,mBAAOG,QAAP;AACD;AA1CI,SAAP;;AA6CA,eAAOD,IAAP,2BhBlmBL5P;AgBmmBI,OAxDH,CADF;AA2DD,KAvaI,CAAP;AAwaD;;AAED;;;;6ChBvmBOA;AgB4mBPwP,gBAAcM,QAAd,GAAyB;AACvB;;;;;AAKAJ,aAAS;AACP;6ChBlnBG1P;;;;;;;;AgB2nBH0R,oBAVO,0BAUQhD,OAVR,EAUiBgB,OAVjB,EAU0B;AAC/B,eAAOA,QACJiC,kBhB5nBF3R,WgB2nBM,CAC0B0O,OAD1B,EACmCgB,OADnC,EAEJxpB,IAFI,CAEC,+BAAuB;AAC3B,iBAAOwpB,QAAQkC,2BAAR,CAAoClD,OAApC,EAA6CgB,OAA7C,EAAsD,CAC3DmC,mBAD2D,CAAtD,CAAP;AAGD,SANI,CAAP;AAOD,OAlBM;;;AAoBP;;;0ChBnoBG7R;;;;;;;;AgB8oBH4R,iCA/BO,uCA+BqBlD,OA/BrB,EA+B8BgB,OA/B9B,EA+BuC3G,UA/BvC,EA+BmD;AACxD,eAAO,CAAC,CAAC1uB,MAAMY,OAAN,CAAc8tB,QhB9oBtB/I,EgB8oBQ,CAAD,IAA8B+I,WAAWtxB,MAAX,KAAsB,CAApD,GACJi4B,QACGiC,6BADH,CACiCjD,OADjC,EAC0CgB,OAD1C,EAEGxpB,IAFH,CAEQ;AAAA,iBAAuB,CAAC2rB,mBAAD,CAAvB;AAAA,SAFR,CADI,GAIJ7I,QAAQC,OAAR,CAAgBF,UAAhB,CAJG,EAKL7iB,IALK,CAKA;AAAA,iBACLwpB,QACGoC,qBADH,CACyB/I,UADzB,EACqC2F,OADrC,EAC8CgB,OAD9C,EAEGxpB,IAFH,CAEQ;AAAA,mBAAeuiB,kBAAkByB,WAAlB,EAA+BnB,UAA/B,CAAf;AAAA,WAFR,CADK;AAAA,SALA,CAAP;AAUD,OA1CM;;wChB7mBJ/I;AgBypBH;;;;;;;;wChBxpBGA;;AgBkqBH2R,mCAtDO,yCAsDuBjD,OAtDvB,EAsDgCgB,OAtDhC,EAsDyC;AAC9C,YAAMqC,cAAc5kB,KAAKuhB,QAAQP,OAAb,CAApB;AACA,eAAOzF,oBACLqJ,WADK,EAEL5kB,KAAK4kB,YAAYjD,KAAZ,CAAkBH,UAAvB,CAFK,CAAP;AAID,OA5DM;;;AA8DP;6ChBzqBG3O;;;;;;;;;kDACAA;AgBmrBH8R,2BAzEO,iCAyEe/I,UAzEf,EAyE2B2F,OAzE3B,EAyEoCgB,OAzEpC,EAyE6C;AAClD,eAAO1G,QAAQC,OAAR,CAAgB9b,KAAKuhB,QAAQL,YAAb,CAAhB,CAAP;AACD,OA3EM;;;AA6EP;;;kDhBtrBGrO;;;;;AgB8rBHuR,iCArFO,uCAqFqB7C,OArFrB,EAqF8BgB,OArF9B,EAqFuC;AAC5C,cAAM,IAAI9G,OAAOoJ,mDAAX,CACJ,qDADI,CAAN;AAGD;AAzFM;AANc,GAAzB,uChBlmBOhS;;AgBqsBP,SAAOwP,aAAP;AACD,CArxBD;;;;;;4ChBgFSxP;;;;;;;;;wCACAA;;;;;;;;;0CACAA;;;;;;;;;yCACAA;;;;;;;;;2CACAA;;;;;;;;;4CACAA;;;;;;;;;gDACAA;;;;;;;;;0CACAA;;;;;;;;;6CACAA;;;;;;;;;kDACAA;;;;;;;;;mDACAA;;;;;;;;;kDACAA;;;;;;;;;qDACAA;;;;;;;;;8CACAA;;;;;;;;;iDACAA;;;;;;;;;wCACAA;;;;;;;;;0CACAA;;;;;;;;;2CACAA;;;;;;;;;6CACAA;;;;;;;;;yCACAA;;;;;;;;;2CACAA;;;;;;;;;yCACAA;;;;;;;;;wCACAA;;;;;;;;;wCACAA;;;;;;;;;2CACAA;;;;;;;;;sCACAA;;;;;;;;;0CACAA;;;;;;;;;uCACAA;;;;;;;;;yCACAA;;;;;;;;;yCACAA;;;;;;;;;uCACAA;;;;;;;;;yCACAA;;;;;;;;;yCACAA;;;;;;;;;4CACAA;;;;;;;;;iDACAA;;;;;;;;;8CACAA;;;;;;;;;yCACAA;;;;;;;;;2CACAA;;;;;;;;;2CACAA;;;;;;;;;kDACAA;;;;;;;;;yCACAA;;;;;;;;;4CACAA;;;;;;;;;2CACAA;;;;;;;;;yCACAA;;;;;;;;;0CACAA;;;;;;;;;0CACAA;;;;;;;;;0CACAA;;;;;;;;;4CACAA;;;;;;;;;4CACAA;;;;;;;;;4CACAA;;;;;;;;;yCACAA;;;;;;;;;2CACAA;;;;;;;;;2CACAA;;;;;;;;;2CACAA;;;;;;;;;kDACAA;;;;;;;;;0CACAA;;;;;;;;;0CACAA;;;;;;;;;2CACAA;;;;;;;;;6CACAA;;;;;;;;;gDACAA;;;;;;;;;gDACAA;;;;;;;;;4CACAA;;;;;;;;;2CACAA;;;;;;;;;2CACAA;;;;;;;;;2CACAA;;;;;;;;;4CACAA;;;;;;;;;4CACAA;;;;;;;;;yCACAA;;;;;;;;;6CACAA;;;;;;;;;wCACAA;;;;;;;;;0CACAA;;;;;;;;;yCACAA;;;;;;;;;2CACAA;;;;;;;;;6CACAA;;;;;;;;;0CACAA;;;;;;;;;4CACAA;;;;;;;;;+CACAA;;;;;;;;;8CACAA;;;;;;;;;+CACAA;;;;;;;;;6CACAA;;;;;;;;;wCACAA;;;;;;;;;wDACAA;;;;;;;;;4DACAA;;;;;;;;;yCACAA;;;;;;;;;yCACAA;;;;;;;;;6CACAA;;;;;;;;;kDACAA;;;;;;;;;8CACAA;;;;;;;;;wCACAA;;;;;;;;;yCACAA;;;;;;;;;0CACAA;;;;;;;;;4CACAA;;;;;;;;;4CACAA;;;;;;;;;8CACAA;;;;;;;;;6CACAA;;;;;;;;;4CACAA;;;;;;;;;8CACAA;;;;;;;;;8CACAA;;;;;;;;;6CACAA;;;;;;;;;yCACAA;;;;;;;;;6CACAA;;;;;;;;;yCACAA;;;;;;;;;4CACAA;;;;;;;;;0CACAA;;;;;;;;;6CACAA;;;;;;;;;2CACAA;;;;;;;;;0CACAA;;;;;;;;;8CACAA;;;;;;;;;yCACAA;;;;;;;;;2CACAA;;;;;;;;;6CACAA;;;;;;;;;2CACAA;;;;;;;;;2CACAA;;;;;;;;;0CACAA;;;;;;;;;2CACAA;;;;;;;;;4CACAA;;;;;;;;;2CACAA;;;;;;;;;6CACAA;;;;;;;;;yCACAA;;;;;;;;;yCACAA;;;;;;;;;0CACAA;;;;;;;;;4CACAA;;;;;;;;;4CACAA;;;;;;;;;0CACAA;;;;;;;;;wCACAA;;;;;;;;;2CACAA;;;;;;;;;4CACAA","file":"examples.6565d760.map","sourceRoot":"../../../../../packages/ui-predicate-core","sourcesContent":["export default function _isPlaceholder(a) {\n       return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;\n}","import _isPlaceholder from './_isPlaceholder';\n\n/**\n * Optimized internal one-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curry1(fn) {\n  return function f1(a) {\n    if (arguments.length === 0 || _isPlaceholder(a)) {\n      return f1;\n    } else {\n      return fn.apply(this, arguments);\n    }\n  };\n}","import _curry1 from './internal/_curry1';\n\n/**\n * Returns a function that always returns the given value. Note that for\n * non-primitives the value returned is a reference to the original value.\n *\n * This function is known as `const`, `constant`, or `K` (for K combinator) in\n * other languages and libraries.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> (* -> a)\n * @param {*} val The value to wrap in a function\n * @return {Function} A Function :: * -> val.\n * @example\n *\n *      var t = R.always('Tee');\n *      t(); //=> 'Tee'\n */\nvar always = /*#__PURE__*/_curry1(function always(val) {\n  return function () {\n    return val;\n  };\n});\nexport default always;","import always from './always';\n\n/**\n * A function that always returns `false`. Any passed in parameters are ignored.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig * -> Boolean\n * @param {*}\n * @return {Boolean}\n * @see R.always, R.T\n * @example\n *\n *      R.F(); //=> false\n */\nvar F = /*#__PURE__*/always(false);\nexport default F;","import always from './always';\n\n/**\n * A function that always returns `true`. Any passed in parameters are ignored.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig * -> Boolean\n * @param {*}\n * @return {Boolean}\n * @see R.always, R.F\n * @example\n *\n *      R.T(); //=> true\n */\nvar T = /*#__PURE__*/always(true);\nexport default T;","/**\n * A special placeholder value used to specify \"gaps\" within curried functions,\n * allowing partial application of any combination of arguments, regardless of\n * their positions.\n *\n * If `g` is a curried ternary function and `_` is `R.__`, the following are\n * equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2, _)(1, 3)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @constant\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @example\n *\n *      var greet = R.replace('{name}', R.__, 'Hello, {name}!');\n *      greet('Alice'); //=> 'Hello, Alice!'\n */\nexport default { '@@functional/placeholder': true };","import _curry1 from './_curry1';\nimport _isPlaceholder from './_isPlaceholder';\n\n/**\n * Optimized internal two-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curry2(fn) {\n  return function f2(a, b) {\n    switch (arguments.length) {\n      case 0:\n        return f2;\n      case 1:\n        return _isPlaceholder(a) ? f2 : _curry1(function (_b) {\n          return fn(a, _b);\n        });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b);\n        }) : fn(a, b);\n    }\n  };\n}","import _curry2 from './internal/_curry2';\n\n/**\n * Adds two values.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a\n * @param {Number} b\n * @return {Number}\n * @see R.subtract\n * @example\n *\n *      R.add(2, 3);       //=>  5\n *      R.add(7)(10);      //=> 17\n */\nvar add = /*#__PURE__*/_curry2(function add(a, b) {\n  return Number(a) + Number(b);\n});\nexport default add;","/**\n * Private `concat` function to merge two array-like objects.\n *\n * @private\n * @param {Array|Arguments} [set1=[]] An array-like object.\n * @param {Array|Arguments} [set2=[]] An array-like object.\n * @return {Array} A new, merged array.\n * @example\n *\n *      _concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n */\nexport default function _concat(set1, set2) {\n  set1 = set1 || [];\n  set2 = set2 || [];\n  var idx;\n  var len1 = set1.length;\n  var len2 = set2.length;\n  var result = [];\n\n  idx = 0;\n  while (idx < len1) {\n    result[result.length] = set1[idx];\n    idx += 1;\n  }\n  idx = 0;\n  while (idx < len2) {\n    result[result.length] = set2[idx];\n    idx += 1;\n  }\n  return result;\n}","export default function _arity(n, fn) {\n  /* eslint-disable no-unused-vars */\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.apply(this, arguments);\n      };\n    case 1:\n      return function (a0) {\n        return fn.apply(this, arguments);\n      };\n    case 2:\n      return function (a0, a1) {\n        return fn.apply(this, arguments);\n      };\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.apply(this, arguments);\n      };\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.apply(this, arguments);\n      };\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.apply(this, arguments);\n      };\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.apply(this, arguments);\n      };\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.apply(this, arguments);\n      };\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.apply(this, arguments);\n      };\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.apply(this, arguments);\n      };\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.apply(this, arguments);\n      };\n    default:\n      throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n  }\n}","import _arity from './_arity';\nimport _isPlaceholder from './_isPlaceholder';\n\n/**\n * Internal curryN function.\n *\n * @private\n * @category Function\n * @param {Number} length The arity of the curried function.\n * @param {Array} received An array of arguments received thus far.\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curryN(length, received, fn) {\n  return function () {\n    var combined = [];\n    var argsIdx = 0;\n    var left = length;\n    var combinedIdx = 0;\n    while (combinedIdx < received.length || argsIdx < arguments.length) {\n      var result;\n      if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {\n        result = received[combinedIdx];\n      } else {\n        result = arguments[argsIdx];\n        argsIdx += 1;\n      }\n      combined[combinedIdx] = result;\n      if (!_isPlaceholder(result)) {\n        left -= 1;\n      }\n      combinedIdx += 1;\n    }\n    return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\n  };\n}","import _arity from './internal/_arity';\nimport _curry1 from './internal/_curry1';\nimport _curry2 from './internal/_curry2';\nimport _curryN from './internal/_curryN';\n\n/**\n * Returns a curried equivalent of the provided function, with the specified\n * arity. The curried function has two unusual capabilities. First, its\n * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curry\n * @example\n *\n *      var sumArgs = (...args) => R.sum(args);\n *\n *      var curriedAddFourNumbers = R.curryN(4, sumArgs);\n *      var f = curriedAddFourNumbers(1, 2);\n *      var g = f(3);\n *      g(4); //=> 10\n */\nvar curryN = /*#__PURE__*/_curry2(function curryN(length, fn) {\n  if (length === 1) {\n    return _curry1(fn);\n  }\n  return _arity(length, _curryN(length, [], fn));\n});\nexport default curryN;","import _concat from './internal/_concat';\nimport _curry1 from './internal/_curry1';\nimport curryN from './curryN';\n\n/**\n * Creates a new list iteration function from an existing one by adding two new\n * parameters to its callback function: the current index, and the entire list.\n *\n * This would turn, for instance, [`R.map`](#map) function into one that\n * more closely resembles `Array.prototype.map`. Note that this will only work\n * for functions in which the iteration callback function is the first\n * parameter, and where the list is the last parameter. (This latter might be\n * unimportant if the list parameter is not used.)\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Function\n * @category List\n * @sig ((a ... -> b) ... -> [a] -> *) -> (a ..., Int, [a] -> b) ... -> [a] -> *)\n * @param {Function} fn A list iteration function that does not pass index or list to its callback\n * @return {Function} An altered list iteration function that passes (item, index, list) to its callback\n * @example\n *\n *      var mapIndexed = R.addIndex(R.map);\n *      mapIndexed((val, idx) => idx + '-' + val, ['f', 'o', 'o', 'b', 'a', 'r']);\n *      //=> ['0-f', '1-o', '2-o', '3-b', '4-a', '5-r']\n */\nvar addIndex = /*#__PURE__*/_curry1(function addIndex(fn) {\n  return curryN(fn.length, function () {\n    var idx = 0;\n    var origFn = arguments[0];\n    var list = arguments[arguments.length - 1];\n    var args = Array.prototype.slice.call(arguments, 0);\n    args[0] = function () {\n      var result = origFn.apply(this, _concat(arguments, [idx, list]));\n      idx += 1;\n      return result;\n    };\n    return fn.apply(this, args);\n  });\n});\nexport default addIndex;","import _curry1 from './_curry1';\nimport _curry2 from './_curry2';\nimport _isPlaceholder from './_isPlaceholder';\n\n/**\n * Optimized internal three-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curry3(fn) {\n  return function f3(a, b, c) {\n    switch (arguments.length) {\n      case 0:\n        return f3;\n      case 1:\n        return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        });\n      case 2:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _curry1(function (_c) {\n          return fn(a, b, _c);\n        });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {\n          return fn(_a, _b, c);\n        }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b, c);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b, c);\n        }) : _isPlaceholder(c) ? _curry1(function (_c) {\n          return fn(a, b, _c);\n        }) : fn(a, b, c);\n    }\n  };\n}","import _concat from './internal/_concat';\nimport _curry3 from './internal/_curry3';\n\n/**\n * Applies a function to the value at the given index of an array, returning a\n * new copy of the array with the element at the given index replaced with the\n * result of the function application.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig (a -> a) -> Number -> [a] -> [a]\n * @param {Function} fn The function to apply.\n * @param {Number} idx The index.\n * @param {Array|Arguments} list An array-like object whose value\n *        at the supplied index will be replaced.\n * @return {Array} A copy of the supplied array-like object with\n *         the element at index `idx` replaced with the value\n *         returned by applying `fn` to the existing element.\n * @see R.update\n * @example\n *\n *      R.adjust(R.add(10), 1, [1, 2, 3]);     //=> [1, 12, 3]\n *      R.adjust(R.add(10))(1)([1, 2, 3]);     //=> [1, 12, 3]\n * @symb R.adjust(f, -1, [a, b]) = [a, f(b)]\n * @symb R.adjust(f, 0, [a, b]) = [f(a), b]\n */\nvar adjust = /*#__PURE__*/_curry3(function adjust(fn, idx, list) {\n  if (idx >= list.length || idx < -list.length) {\n    return list;\n  }\n  var start = idx < 0 ? list.length : 0;\n  var _idx = start + idx;\n  var _list = _concat(list);\n  _list[_idx] = fn(list[_idx]);\n  return _list;\n});\nexport default adjust;","/**\n * Tests whether or not an object is an array.\n *\n * @private\n * @param {*} val The object to test.\n * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n * @example\n *\n *      _isArray([]); //=> true\n *      _isArray(null); //=> false\n *      _isArray({}); //=> false\n */\nexport default Array.isArray || function _isArray(val) {\n  return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n};","export default function _isTransformer(obj) {\n  return typeof obj['@@transducer/step'] === 'function';\n}","import _isArray from './_isArray';\nimport _isTransformer from './_isTransformer';\n\n/**\n * Returns a function that dispatches with different strategies based on the\n * object in list position (last argument). If it is an array, executes [fn].\n * Otherwise, if it has a function with one of the given method names, it will\n * execute that function (functor case). Otherwise, if it is a transformer,\n * uses transducer [xf] to return a new transformer (transducer case).\n * Otherwise, it will default to executing [fn].\n *\n * @private\n * @param {Array} methodNames properties to check for a custom implementation\n * @param {Function} xf transducer to initialize if object is transformer\n * @param {Function} fn default ramda implementation\n * @return {Function} A function that dispatches on object in list position\n */\nexport default function _dispatchable(methodNames, xf, fn) {\n  return function () {\n    if (arguments.length === 0) {\n      return fn();\n    }\n    var args = Array.prototype.slice.call(arguments, 0);\n    var obj = args.pop();\n    if (!_isArray(obj)) {\n      var idx = 0;\n      while (idx < methodNames.length) {\n        if (typeof obj[methodNames[idx]] === 'function') {\n          return obj[methodNames[idx]].apply(obj, args);\n        }\n        idx += 1;\n      }\n      if (_isTransformer(obj)) {\n        var transducer = xf.apply(null, args);\n        return transducer(obj);\n      }\n    }\n    return fn.apply(this, arguments);\n  };\n}","export default function _reduced(x) {\n  return x && x['@@transducer/reduced'] ? x : {\n    '@@transducer/value': x,\n    '@@transducer/reduced': true\n  };\n}","export default {\n  init: function () {\n    return this.xf['@@transducer/init']();\n  },\n  result: function (result) {\n    return this.xf['@@transducer/result'](result);\n  }\n};","import _curry2 from './_curry2';\nimport _reduced from './_reduced';\nimport _xfBase from './_xfBase';\n\nvar XAll = /*#__PURE__*/function () {\n  function XAll(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.all = true;\n  }\n  XAll.prototype['@@transducer/init'] = _xfBase.init;\n  XAll.prototype['@@transducer/result'] = function (result) {\n    if (this.all) {\n      result = this.xf['@@transducer/step'](result, true);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XAll.prototype['@@transducer/step'] = function (result, input) {\n    if (!this.f(input)) {\n      this.all = false;\n      result = _reduced(this.xf['@@transducer/step'](result, false));\n    }\n    return result;\n  };\n\n  return XAll;\n}();\n\nvar _xall = /*#__PURE__*/_curry2(function _xall(f, xf) {\n  return new XAll(f, xf);\n});\nexport default _xall;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xall from './internal/_xall';\n\n/**\n * Returns `true` if all elements of the list match the predicate, `false` if\n * there are any that don't.\n *\n * Dispatches to the `all` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is satisfied by every element, `false`\n *         otherwise.\n * @see R.any, R.none, R.transduce\n * @example\n *\n *      var equals3 = R.equals(3);\n *      R.all(equals3)([3, 3, 3, 3]); //=> true\n *      R.all(equals3)([3, 3, 1, 3]); //=> false\n */\nvar all = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['all'], _xall, function all(fn, list) {\n  var idx = 0;\n  while (idx < list.length) {\n    if (!fn(list[idx])) {\n      return false;\n    }\n    idx += 1;\n  }\n  return true;\n}));\nexport default all;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns the larger of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.maxBy, R.min\n * @example\n *\n *      R.max(789, 123); //=> 789\n *      R.max('a', 'b'); //=> 'b'\n */\nvar max = /*#__PURE__*/_curry2(function max(a, b) {\n  return b > a ? b : a;\n});\nexport default max;","export default function _map(fn, functor) {\n  var idx = 0;\n  var len = functor.length;\n  var result = Array(len);\n  while (idx < len) {\n    result[idx] = fn(functor[idx]);\n    idx += 1;\n  }\n  return result;\n}","export default function _isString(x) {\n  return Object.prototype.toString.call(x) === '[object String]';\n}","import _curry1 from './_curry1';\nimport _isArray from './_isArray';\nimport _isString from './_isString';\n\n/**\n * Tests whether or not an object is similar to an array.\n *\n * @private\n * @category Type\n * @category List\n * @sig * -> Boolean\n * @param {*} x The object to test.\n * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n * @example\n *\n *      _isArrayLike([]); //=> true\n *      _isArrayLike(true); //=> false\n *      _isArrayLike({}); //=> false\n *      _isArrayLike({length: 10}); //=> false\n *      _isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n */\nvar _isArrayLike = /*#__PURE__*/_curry1(function isArrayLike(x) {\n  if (_isArray(x)) {\n    return true;\n  }\n  if (!x) {\n    return false;\n  }\n  if (typeof x !== 'object') {\n    return false;\n  }\n  if (_isString(x)) {\n    return false;\n  }\n  if (x.nodeType === 1) {\n    return !!x.length;\n  }\n  if (x.length === 0) {\n    return true;\n  }\n  if (x.length > 0) {\n    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n  }\n  return false;\n});\nexport default _isArrayLike;","var XWrap = /*#__PURE__*/function () {\n  function XWrap(fn) {\n    this.f = fn;\n  }\n  XWrap.prototype['@@transducer/init'] = function () {\n    throw new Error('init not implemented on XWrap');\n  };\n  XWrap.prototype['@@transducer/result'] = function (acc) {\n    return acc;\n  };\n  XWrap.prototype['@@transducer/step'] = function (acc, x) {\n    return this.f(acc, x);\n  };\n\n  return XWrap;\n}();\n\nexport default function _xwrap(fn) {\n  return new XWrap(fn);\n}","import _arity from './internal/_arity';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Creates a function that is bound to a context.\n * Note: `R.bind` does not provide the additional argument-binding capabilities of\n * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @category Object\n * @sig (* -> *) -> {*} -> (* -> *)\n * @param {Function} fn The function to bind to context\n * @param {Object} thisObj The context to bind `fn` to\n * @return {Function} A function that will execute in the context of `thisObj`.\n * @see R.partial\n * @example\n *\n *      var log = R.bind(console.log, console);\n *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}\n *      // logs {a: 2}\n * @symb R.bind(f, o)(a, b) = f.call(o, a, b)\n */\nvar bind = /*#__PURE__*/_curry2(function bind(fn, thisObj) {\n  return _arity(fn.length, function () {\n    return fn.apply(thisObj, arguments);\n  });\n});\nexport default bind;","import _isArrayLike from './_isArrayLike';\nimport _xwrap from './_xwrap';\nimport bind from '../bind';\n\nfunction _arrayReduce(xf, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    acc = xf['@@transducer/step'](acc, list[idx]);\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n    idx += 1;\n  }\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _iterableReduce(xf, acc, iter) {\n  var step = iter.next();\n  while (!step.done) {\n    acc = xf['@@transducer/step'](acc, step.value);\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n    step = iter.next();\n  }\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _methodReduce(xf, acc, obj, methodName) {\n  return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));\n}\n\nvar symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\n\nexport default function _reduce(fn, acc, list) {\n  if (typeof fn === 'function') {\n    fn = _xwrap(fn);\n  }\n  if (_isArrayLike(list)) {\n    return _arrayReduce(fn, acc, list);\n  }\n  if (typeof list['fantasy-land/reduce'] === 'function') {\n    return _methodReduce(fn, acc, list, 'fantasy-land/reduce');\n  }\n  if (list[symIterator] != null) {\n    return _iterableReduce(fn, acc, list[symIterator]());\n  }\n  if (typeof list.next === 'function') {\n    return _iterableReduce(fn, acc, list);\n  }\n  if (typeof list.reduce === 'function') {\n    return _methodReduce(fn, acc, list, 'reduce');\n  }\n\n  throw new TypeError('reduce: list must be array or iterable');\n}","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XMap = /*#__PURE__*/function () {\n  function XMap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XMap.prototype['@@transducer/init'] = _xfBase.init;\n  XMap.prototype['@@transducer/result'] = _xfBase.result;\n  XMap.prototype['@@transducer/step'] = function (result, input) {\n    return this.xf['@@transducer/step'](result, this.f(input));\n  };\n\n  return XMap;\n}();\n\nvar _xmap = /*#__PURE__*/_curry2(function _xmap(f, xf) {\n  return new XMap(f, xf);\n});\nexport default _xmap;","export default function _has(prop, obj) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}","import _has from './_has';\n\nvar toString = Object.prototype.toString;\nvar _isArguments = function () {\n  return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {\n    return toString.call(x) === '[object Arguments]';\n  } : function _isArguments(x) {\n    return _has('callee', x);\n  };\n};\n\nexport default _isArguments;","import _curry1 from './internal/_curry1';\nimport _has from './internal/_has';\nimport _isArguments from './internal/_isArguments';\n\n// cover IE < 9 keys issues\nvar hasEnumBug = ! /*#__PURE__*/{ toString: null }.propertyIsEnumerable('toString');\nvar nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n// Safari bug\nvar hasArgsEnumBug = /*#__PURE__*/function () {\n  'use strict';\n\n  return arguments.propertyIsEnumerable('length');\n}();\n\nvar contains = function contains(list, item) {\n  var idx = 0;\n  while (idx < list.length) {\n    if (list[idx] === item) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n};\n\n/**\n * Returns a list containing the names of all the enumerable own properties of\n * the supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own properties.\n * @see R.keysIn, R.values\n * @example\n *\n *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n */\nvar _keys = typeof Object.keys === 'function' && !hasArgsEnumBug ? function keys(obj) {\n  return Object(obj) !== obj ? [] : Object.keys(obj);\n} : function keys(obj) {\n  if (Object(obj) !== obj) {\n    return [];\n  }\n  var prop, nIdx;\n  var ks = [];\n  var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n  for (prop in obj) {\n    if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n      ks[ks.length] = prop;\n    }\n  }\n  if (hasEnumBug) {\n    nIdx = nonEnumerableProps.length - 1;\n    while (nIdx >= 0) {\n      prop = nonEnumerableProps[nIdx];\n      if (_has(prop, obj) && !contains(ks, prop)) {\n        ks[ks.length] = prop;\n      }\n      nIdx -= 1;\n    }\n  }\n  return ks;\n};\nvar keys = /*#__PURE__*/_curry1(_keys);\nexport default keys;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _map from './internal/_map';\nimport _reduce from './internal/_reduce';\nimport _xmap from './internal/_xmap';\nimport curryN from './curryN';\nimport keys from './keys';\n\n/**\n * Takes a function and\n * a [functor](https://github.com/fantasyland/fantasy-land#functor),\n * applies the function to each of the functor's values, and returns\n * a functor of the same shape.\n *\n * Ramda provides suitable `map` implementations for `Array` and `Object`,\n * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.\n *\n * Dispatches to the `map` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * Also treats functions as functors and will compose them together.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => (a -> b) -> f a -> f b\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {Array} list The list to be iterated over.\n * @return {Array} The new list.\n * @see R.transduce, R.addIndex\n * @example\n *\n *      var double = x => x * 2;\n *\n *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n *\n *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}\n * @symb R.map(f, [a, b]) = [f(a), f(b)]\n * @symb R.map(f, { x: a, y: b }) = { x: f(a), y: f(b) }\n * @symb R.map(f, functor_o) = functor_o.map(f)\n */\nvar map = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['fantasy-land/map', 'map'], _xmap, function map(fn, functor) {\n  switch (Object.prototype.toString.call(functor)) {\n    case '[object Function]':\n      return curryN(functor.length, function () {\n        return fn.call(this, functor.apply(this, arguments));\n      });\n    case '[object Object]':\n      return _reduce(function (acc, key) {\n        acc[key] = fn(functor[key]);\n        return acc;\n      }, {}, keys(functor));\n    default:\n      return _map(fn, functor);\n  }\n}));\nexport default map;","import _curry2 from './internal/_curry2';\n\n/**\n * Retrieve the value at a given path.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {a} -> a | Undefined\n * @param {Array} path The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path`.\n * @see R.prop\n * @example\n *\n *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined\n */\nvar path = /*#__PURE__*/_curry2(function path(paths, obj) {\n  var val = obj;\n  var idx = 0;\n  while (idx < paths.length) {\n    if (val == null) {\n      return;\n    }\n    val = val[paths[idx]];\n    idx += 1;\n  }\n  return val;\n});\nexport default path;","import _curry2 from './internal/_curry2';\nimport path from './path';\n\n/**\n * Returns a function that when supplied an object returns the indicated\n * property of that object, if it exists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig s -> {s: a} -> a | Undefined\n * @param {String} p The property name\n * @param {Object} obj The object to query\n * @return {*} The value at `obj.p`.\n * @see R.path\n * @example\n *\n *      R.prop('x', {x: 100}); //=> 100\n *      R.prop('x', {}); //=> undefined\n */\n\nvar prop = /*#__PURE__*/_curry2(function prop(p, obj) {\n  return path([p], obj);\n});\nexport default prop;","import _curry2 from './internal/_curry2';\nimport map from './map';\nimport prop from './prop';\n\n/**\n * Returns a new list by plucking the same named property off all objects in\n * the list supplied.\n *\n * `pluck` will work on\n * any [functor](https://github.com/fantasyland/fantasy-land#functor) in\n * addition to arrays, as it is equivalent to `R.map(R.prop(k), f)`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => k -> f {k: v} -> f v\n * @param {Number|String} key The key name to pluck off of each object.\n * @param {Array} f The array or functor to consider.\n * @return {Array} The list of values for the given key.\n * @see R.props\n * @example\n *\n *      R.pluck('a')([{a: 1}, {a: 2}]); //=> [1, 2]\n *      R.pluck(0)([[1, 2], [3, 4]]);   //=> [1, 3]\n *      R.pluck('val', {a: {val: 3}, b: {val: 5}}); //=> {a: 3, b: 5}\n * @symb R.pluck('x', [{x: 1, y: 2}, {x: 3, y: 4}, {x: 5, y: 6}]) = [1, 3, 5]\n * @symb R.pluck(0, [[1, 2], [3, 4], [5, 6]]) = [1, 3, 5]\n */\nvar pluck = /*#__PURE__*/_curry2(function pluck(p, list) {\n  return map(prop(p), list);\n});\nexport default pluck;","import _curry3 from './internal/_curry3';\nimport _reduce from './internal/_reduce';\n\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It may use\n * [`R.reduced`](#reduced) to shortcut the iteration.\n *\n * The arguments' order of [`reduceRight`](#reduceRight)'s iterator function\n * is *(value, acc)*.\n *\n * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduce` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n *\n * Dispatches to the `reduce` method of the third argument, if present. When\n * doing so, it is up to the user to handle the [`R.reduced`](#reduced)\n * shortcuting, as this is not implemented by `reduce`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduced, R.addIndex, R.reduceRight\n * @example\n *\n *      R.reduce(R.subtract, 0, [1, 2, 3, 4]) // => ((((0 - 1) - 2) - 3) - 4) = -10\n *      //          -               -10\n *      //         / \\              / \\\n *      //        -   4           -6   4\n *      //       / \\              / \\\n *      //      -   3   ==>     -3   3\n *      //     / \\              / \\\n *      //    -   2           -1   2\n *      //   / \\              / \\\n *      //  0   1            0   1\n *\n * @symb R.reduce(f, a, [b, c, d]) = f(f(f(a, b), c), d)\n */\nvar reduce = /*#__PURE__*/_curry3(_reduce);\nexport default reduce;","import _curry1 from './internal/_curry1';\nimport curryN from './curryN';\nimport max from './max';\nimport pluck from './pluck';\nimport reduce from './reduce';\n\n/**\n * Takes a list of predicates and returns a predicate that returns true for a\n * given list of arguments if every one of the provided predicates is satisfied\n * by those arguments.\n *\n * The function returned is a curried function whose arity matches that of the\n * highest-arity predicate.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Logic\n * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n * @param {Array} predicates An array of predicates to check\n * @return {Function} The combined predicate\n * @see R.anyPass\n * @example\n *\n *      var isQueen = R.propEq('rank', 'Q');\n *      var isSpade = R.propEq('suit', '♠︎');\n *      var isQueenOfSpades = R.allPass([isQueen, isSpade]);\n *\n *      isQueenOfSpades({rank: 'Q', suit: '♣︎'}); //=> false\n *      isQueenOfSpades({rank: 'Q', suit: '♠︎'}); //=> true\n */\nvar allPass = /*#__PURE__*/_curry1(function allPass(preds) {\n  return curryN(reduce(max, 0, pluck('length', preds)), function () {\n    var idx = 0;\n    var len = preds.length;\n    while (idx < len) {\n      if (!preds[idx].apply(this, arguments)) {\n        return false;\n      }\n      idx += 1;\n    }\n    return true;\n  });\n});\nexport default allPass;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns `true` if both arguments are `true`; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {Any} a\n * @param {Any} b\n * @return {Any} the first argument if it is falsy, otherwise the second argument.\n * @see R.both\n * @example\n *\n *      R.and(true, true); //=> true\n *      R.and(true, false); //=> false\n *      R.and(false, true); //=> false\n *      R.and(false, false); //=> false\n */\nvar and = /*#__PURE__*/_curry2(function and(a, b) {\n  return a && b;\n});\nexport default and;","import _curry2 from './_curry2';\nimport _reduced from './_reduced';\nimport _xfBase from './_xfBase';\n\nvar XAny = /*#__PURE__*/function () {\n  function XAny(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.any = false;\n  }\n  XAny.prototype['@@transducer/init'] = _xfBase.init;\n  XAny.prototype['@@transducer/result'] = function (result) {\n    if (!this.any) {\n      result = this.xf['@@transducer/step'](result, false);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XAny.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.any = true;\n      result = _reduced(this.xf['@@transducer/step'](result, true));\n    }\n    return result;\n  };\n\n  return XAny;\n}();\n\nvar _xany = /*#__PURE__*/_curry2(function _xany(f, xf) {\n  return new XAny(f, xf);\n});\nexport default _xany;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xany from './internal/_xany';\n\n/**\n * Returns `true` if at least one of elements of the list match the predicate,\n * `false` otherwise.\n *\n * Dispatches to the `any` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is satisfied by at least one element, `false`\n *         otherwise.\n * @see R.all, R.none, R.transduce\n * @example\n *\n *      var lessThan0 = R.flip(R.lt)(0);\n *      var lessThan2 = R.flip(R.lt)(2);\n *      R.any(lessThan0)([1, 2]); //=> false\n *      R.any(lessThan2)([1, 2]); //=> true\n */\nvar any = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['any'], _xany, function any(fn, list) {\n  var idx = 0;\n  while (idx < list.length) {\n    if (fn(list[idx])) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n}));\nexport default any;","import _curry1 from './internal/_curry1';\nimport curryN from './curryN';\nimport max from './max';\nimport pluck from './pluck';\nimport reduce from './reduce';\n\n/**\n * Takes a list of predicates and returns a predicate that returns true for a\n * given list of arguments if at least one of the provided predicates is\n * satisfied by those arguments.\n *\n * The function returned is a curried function whose arity matches that of the\n * highest-arity predicate.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Logic\n * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n * @param {Array} predicates An array of predicates to check\n * @return {Function} The combined predicate\n * @see R.allPass\n * @example\n *\n *      var isClub = R.propEq('suit', '♣');\n *      var isSpade = R.propEq('suit', '♠');\n *      var isBlackCard = R.anyPass([isClub, isSpade]);\n *\n *      isBlackCard({rank: '10', suit: '♣'}); //=> true\n *      isBlackCard({rank: 'Q', suit: '♠'}); //=> true\n *      isBlackCard({rank: 'Q', suit: '♦'}); //=> false\n */\nvar anyPass = /*#__PURE__*/_curry1(function anyPass(preds) {\n  return curryN(reduce(max, 0, pluck('length', preds)), function () {\n    var idx = 0;\n    var len = preds.length;\n    while (idx < len) {\n      if (preds[idx].apply(this, arguments)) {\n        return true;\n      }\n      idx += 1;\n    }\n    return false;\n  });\n});\nexport default anyPass;","import _concat from './internal/_concat';\nimport _curry2 from './internal/_curry2';\nimport _reduce from './internal/_reduce';\nimport map from './map';\n\n/**\n * ap applies a list of functions to a list of values.\n *\n * Dispatches to the `ap` method of the second argument, if present. Also\n * treats curried functions as applicatives.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig [a -> b] -> [a] -> [b]\n * @sig Apply f => f (a -> b) -> f a -> f b\n * @sig (a -> b -> c) -> (a -> b) -> (a -> c)\n * @param {*} applyF\n * @param {*} applyX\n * @return {*}\n * @example\n *\n *      R.ap([R.multiply(2), R.add(3)], [1,2,3]); //=> [2, 4, 6, 4, 5, 6]\n *      R.ap([R.concat('tasty '), R.toUpper], ['pizza', 'salad']); //=> [\"tasty pizza\", \"tasty salad\", \"PIZZA\", \"SALAD\"]\n *\n *      // R.ap can also be used as S combinator\n *      // when only two functions are passed\n *      R.ap(R.concat, R.toUpper)('Ramda') //=> 'RamdaRAMDA'\n * @symb R.ap([f, g], [a, b]) = [f(a), f(b), g(a), g(b)]\n */\nvar ap = /*#__PURE__*/_curry2(function ap(applyF, applyX) {\n  return typeof applyX['fantasy-land/ap'] === 'function' ? applyX['fantasy-land/ap'](applyF) : typeof applyF.ap === 'function' ? applyF.ap(applyX) : typeof applyF === 'function' ? function (x) {\n    return applyF(x)(applyX(x));\n  } :\n  // else\n  _reduce(function (acc, f) {\n    return _concat(acc, map(f, applyX));\n  }, [], applyF);\n});\nexport default ap;","export default function _aperture(n, list) {\n  var idx = 0;\n  var limit = list.length - (n - 1);\n  var acc = new Array(limit >= 0 ? limit : 0);\n  while (idx < limit) {\n    acc[idx] = Array.prototype.slice.call(list, idx, idx + n);\n    idx += 1;\n  }\n  return acc;\n}","import _concat from './_concat';\nimport _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XAperture = /*#__PURE__*/function () {\n  function XAperture(n, xf) {\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n  XAperture.prototype['@@transducer/init'] = _xfBase.init;\n  XAperture.prototype['@@transducer/result'] = function (result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XAperture.prototype['@@transducer/step'] = function (result, input) {\n    this.store(input);\n    return this.full ? this.xf['@@transducer/step'](result, this.getCopy()) : result;\n  };\n  XAperture.prototype.store = function (input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n  XAperture.prototype.getCopy = function () {\n    return _concat(Array.prototype.slice.call(this.acc, this.pos), Array.prototype.slice.call(this.acc, 0, this.pos));\n  };\n\n  return XAperture;\n}();\n\nvar _xaperture = /*#__PURE__*/_curry2(function _xaperture(n, xf) {\n  return new XAperture(n, xf);\n});\nexport default _xaperture;","import _aperture from './internal/_aperture';\nimport _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xaperture from './internal/_xaperture';\n\n/**\n * Returns a new list, composed of n-tuples of consecutive elements. If `n` is\n * greater than the length of the list, an empty list is returned.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig Number -> [a] -> [[a]]\n * @param {Number} n The size of the tuples to create\n * @param {Array} list The list to split into `n`-length tuples\n * @return {Array} The resulting list of `n`-length tuples\n * @see R.transduce\n * @example\n *\n *      R.aperture(2, [1, 2, 3, 4, 5]); //=> [[1, 2], [2, 3], [3, 4], [4, 5]]\n *      R.aperture(3, [1, 2, 3, 4, 5]); //=> [[1, 2, 3], [2, 3, 4], [3, 4, 5]]\n *      R.aperture(7, [1, 2, 3, 4, 5]); //=> []\n */\nvar aperture = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xaperture, _aperture));\nexport default aperture;","import _concat from './internal/_concat';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Returns a new list containing the contents of the given list, followed by\n * the given element.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} el The element to add to the end of the new list.\n * @param {Array} list The list of elements to add a new item to.\n *        list.\n * @return {Array} A new list containing the elements of the old list followed by `el`.\n * @see R.prepend\n * @example\n *\n *      R.append('tests', ['write', 'more']); //=> ['write', 'more', 'tests']\n *      R.append('tests', []); //=> ['tests']\n *      R.append(['tests'], ['write', 'more']); //=> ['write', 'more', ['tests']]\n */\nvar append = /*#__PURE__*/_curry2(function append(el, list) {\n  return _concat(list, [el]);\n});\nexport default append;","import _curry2 from './internal/_curry2';\n\n/**\n * Applies function `fn` to the argument list `args`. This is useful for\n * creating a fixed-arity function from a variadic function. `fn` should be a\n * bound function if context is significant.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> a) -> [*] -> a\n * @param {Function} fn The function which will be called with `args`\n * @param {Array} args The arguments to call `fn` with\n * @return {*} result The result, equivalent to `fn(...args)`\n * @see R.call, R.unapply\n * @example\n *\n *      var nums = [1, 2, 3, -99, 42, 6, 7];\n *      R.apply(Math.max, nums); //=> 42\n * @symb R.apply(f, [a, b, c]) = f(a, b, c)\n */\nvar apply = /*#__PURE__*/_curry2(function apply(fn, args) {\n  return fn.apply(this, args);\n});\nexport default apply;","import _curry1 from './internal/_curry1';\nimport keys from './keys';\n\n/**\n * Returns a list of all the enumerable own properties of the supplied object.\n * Note that the order of the output array is not guaranteed across different\n * JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [v]\n * @param {Object} obj The object to extract values from\n * @return {Array} An array of the values of the object's own properties.\n * @see R.valuesIn, R.keys\n * @example\n *\n *      R.values({a: 1, b: 2, c: 3}); //=> [1, 2, 3]\n */\nvar values = /*#__PURE__*/_curry1(function values(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var vals = [];\n  var idx = 0;\n  while (idx < len) {\n    vals[idx] = obj[props[idx]];\n    idx += 1;\n  }\n  return vals;\n});\nexport default values;","import _curry1 from './internal/_curry1';\nimport apply from './apply';\nimport curryN from './curryN';\nimport map from './map';\nimport max from './max';\nimport pluck from './pluck';\nimport reduce from './reduce';\nimport values from './values';\n\n/**\n * Given a spec object recursively mapping properties to functions, creates a\n * function producing an object of the same structure, by mapping each property\n * to the result of calling its associated function with the supplied arguments.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Function\n * @sig {k: ((a, b, ..., m) -> v)} -> ((a, b, ..., m) -> {k: v})\n * @param {Object} spec an object recursively mapping properties to functions for\n *        producing the values for these properties.\n * @return {Function} A function that returns an object of the same structure\n * as `spec', with each property set to the value returned by calling its\n * associated function with the supplied arguments.\n * @see R.converge, R.juxt\n * @example\n *\n *      var getMetrics = R.applySpec({\n *        sum: R.add,\n *        nested: { mul: R.multiply }\n *      });\n *      getMetrics(2, 4); // => { sum: 6, nested: { mul: 8 } }\n * @symb R.applySpec({ x: f, y: { z: g } })(a, b) = { x: f(a, b), y: { z: g(a, b) } }\n */\nvar applySpec = /*#__PURE__*/_curry1(function applySpec(spec) {\n  spec = map(function (v) {\n    return typeof v == 'function' ? v : applySpec(v);\n  }, spec);\n  return curryN(reduce(max, 0, pluck('length', values(spec))), function () {\n    var args = arguments;\n    return map(function (f) {\n      return apply(f, args);\n    }, spec);\n  });\n});\nexport default applySpec;","import _curry2 from './internal/_curry2';\n\n/**\n* Takes a value and applies a function to it.\n*\n* This function is also known as the `thrush` combinator.\n*\n* @func\n* @memberOf R\n * @since v0.25.0\n* @category Function\n* @sig a -> (a -> b) -> b\n* @param {*} x The value\n* @param {Function} f The function to apply\n* @return {*} The result of applying `f` to `x`\n* @example\n*\n*      var t42 = R.applyTo(42);\n*      t42(R.identity); //=> 42\n*      t42(R.add(1)); //=> 43\n*/\nvar applyTo = /*#__PURE__*/_curry2(function applyTo(x, f) {\n  return f(x);\n});\nexport default applyTo;","import _curry3 from './internal/_curry3';\n\n/**\n * Makes an ascending comparator function out of a function that returns a value\n * that can be compared with `<` and `>`.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Function\n * @sig Ord b => (a -> b) -> a -> a -> Number\n * @param {Function} fn A function of arity one that returns a value that can be compared\n * @param {*} a The first item to be compared.\n * @param {*} b The second item to be compared.\n * @return {Number} `-1` if fn(a) < fn(b), `1` if fn(b) < fn(a), otherwise `0`\n * @see R.descend\n * @example\n *\n *      var byAge = R.ascend(R.prop('age'));\n *      var people = [\n *        // ...\n *      ];\n *      var peopleByYoungestFirst = R.sort(byAge, people);\n */\nvar ascend = /*#__PURE__*/_curry3(function ascend(fn, a, b) {\n  var aa = fn(a);\n  var bb = fn(b);\n  return aa < bb ? -1 : aa > bb ? 1 : 0;\n});\nexport default ascend;","import _curry3 from './internal/_curry3';\n\n/**\n * Makes a shallow clone of an object, setting or overriding the specified\n * property with the given value. Note that this copies and flattens prototype\n * properties onto the new object as well. All non-primitive properties are\n * copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @sig String -> a -> {k: v} -> {k: v}\n * @param {String} prop The property name to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except for the changed property.\n * @see R.dissoc\n * @example\n *\n *      R.assoc('c', 3, {a: 1, b: 2}); //=> {a: 1, b: 2, c: 3}\n */\nvar assoc = /*#__PURE__*/_curry3(function assoc(prop, val, obj) {\n  var result = {};\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n  result[prop] = val;\n  return result;\n});\nexport default assoc;","/**\n * Determine if the passed argument is an integer.\n *\n * @private\n * @param {*} n\n * @category Type\n * @return {Boolean}\n */\nexport default Number.isInteger || function _isInteger(n) {\n  return n << 0 === n;\n};","import _curry1 from './internal/_curry1';\n\n/**\n * Checks if the input value is `null` or `undefined`.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Type\n * @sig * -> Boolean\n * @param {*} x The value to test.\n * @return {Boolean} `true` if `x` is `undefined` or `null`, otherwise `false`.\n * @example\n *\n *      R.isNil(null); //=> true\n *      R.isNil(undefined); //=> true\n *      R.isNil(0); //=> false\n *      R.isNil([]); //=> false\n */\nvar isNil = /*#__PURE__*/_curry1(function isNil(x) {\n  return x == null;\n});\nexport default isNil;","import _curry3 from './internal/_curry3';\nimport _has from './internal/_has';\nimport _isArray from './internal/_isArray';\nimport _isInteger from './internal/_isInteger';\nimport assoc from './assoc';\nimport isNil from './isNil';\n\n/**\n * Makes a shallow clone of an object, setting or overriding the nodes required\n * to create the given path, and placing the specific value at the tail end of\n * that path. Note that this copies and flattens prototype properties onto the\n * new object as well. All non-primitive properties are copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> a -> {a} -> {a}\n * @param {Array} path the path to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except along the specified path.\n * @see R.dissocPath\n * @example\n *\n *      R.assocPath(['a', 'b', 'c'], 42, {a: {b: {c: 0}}}); //=> {a: {b: {c: 42}}}\n *\n *      // Any missing or non-object keys in path will be overridden\n *      R.assocPath(['a', 'b', 'c'], 42, {a: 5}); //=> {a: {b: {c: 42}}}\n */\nvar assocPath = /*#__PURE__*/_curry3(function assocPath(path, val, obj) {\n  if (path.length === 0) {\n    return val;\n  }\n  var idx = path[0];\n  if (path.length > 1) {\n    var nextObj = !isNil(obj) && _has(idx, obj) ? obj[idx] : _isInteger(path[1]) ? [] : {};\n    val = assocPath(Array.prototype.slice.call(path, 1), val, nextObj);\n  }\n  if (_isInteger(idx) && _isArray(obj)) {\n    var arr = [].concat(obj);\n    arr[idx] = val;\n    return arr;\n  } else {\n    return assoc(idx, val, obj);\n  }\n});\nexport default assocPath;","import _curry2 from './internal/_curry2';\n\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly `n` parameters. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} n The desired arity of the new function.\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity `n`.\n * @see R.binary, R.unary\n * @example\n *\n *      var takesTwoArgs = (a, b) => [a, b];\n *\n *      takesTwoArgs.length; //=> 2\n *      takesTwoArgs(1, 2); //=> [1, 2]\n *\n *      var takesOneArg = R.nAry(1, takesTwoArgs);\n *      takesOneArg.length; //=> 1\n *      // Only `n` arguments are passed to the wrapped function\n *      takesOneArg(1, 2); //=> [1, undefined]\n * @symb R.nAry(0, f)(a, b) = f()\n * @symb R.nAry(1, f)(a, b) = f(a)\n * @symb R.nAry(2, f)(a, b) = f(a, b)\n */\nvar nAry = /*#__PURE__*/_curry2(function nAry(n, fn) {\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.call(this);\n      };\n    case 1:\n      return function (a0) {\n        return fn.call(this, a0);\n      };\n    case 2:\n      return function (a0, a1) {\n        return fn.call(this, a0, a1);\n      };\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.call(this, a0, a1, a2);\n      };\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.call(this, a0, a1, a2, a3);\n      };\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.call(this, a0, a1, a2, a3, a4);\n      };\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5);\n      };\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6);\n      };\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7);\n      };\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8);\n      };\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);\n      };\n    default:\n      throw new Error('First argument to nAry must be a non-negative integer no greater than ten');\n  }\n});\nexport default nAry;","import _curry1 from './internal/_curry1';\nimport nAry from './nAry';\n\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly 2 parameters. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Function\n * @sig (* -> c) -> (a, b -> c)\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity 2.\n * @see R.nAry, R.unary\n * @example\n *\n *      var takesThreeArgs = function(a, b, c) {\n *        return [a, b, c];\n *      };\n *      takesThreeArgs.length; //=> 3\n *      takesThreeArgs(1, 2, 3); //=> [1, 2, 3]\n *\n *      var takesTwoArgs = R.binary(takesThreeArgs);\n *      takesTwoArgs.length; //=> 2\n *      // Only 2 arguments are passed to the wrapped function\n *      takesTwoArgs(1, 2, 3); //=> [1, 2, undefined]\n * @symb R.binary(f)(a, b, c) = f(a, b)\n */\nvar binary = /*#__PURE__*/_curry1(function binary(fn) {\n  return nAry(2, fn);\n});\nexport default binary;","export default function _isFunction(x) {\n  return Object.prototype.toString.call(x) === '[object Function]';\n}","import _curry2 from './internal/_curry2';\nimport _reduce from './internal/_reduce';\nimport ap from './ap';\nimport curryN from './curryN';\nimport map from './map';\n\n/**\n * \"lifts\" a function to be the specified arity, so that it may \"map over\" that\n * many lists, Functions or other objects that satisfy the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig Number -> (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.lift, R.ap\n * @example\n *\n *      var madd3 = R.liftN(3, (...args) => R.sum(args));\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n */\nvar liftN = /*#__PURE__*/_curry2(function liftN(arity, fn) {\n  var lifted = curryN(arity, fn);\n  return curryN(arity, function () {\n    return _reduce(ap, map(lifted, arguments[0]), Array.prototype.slice.call(arguments, 1));\n  });\n});\nexport default liftN;","import _curry1 from './internal/_curry1';\nimport liftN from './liftN';\n\n/**\n * \"lifts\" a function of arity > 1 so that it may \"map over\" a list, Function or other\n * object that satisfies the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.liftN\n * @example\n *\n *      var madd3 = R.lift((a, b, c) => a + b + c);\n *\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n *\n *      var madd5 = R.lift((a, b, c, d, e) => a + b + c + d + e);\n *\n *      madd5([1,2], [3], [4, 5], [6], [7, 8]); //=> [21, 22, 22, 23, 22, 23, 23, 24]\n */\nvar lift = /*#__PURE__*/_curry1(function lift(fn) {\n  return liftN(fn.length, fn);\n});\nexport default lift;","import _curry2 from './internal/_curry2';\nimport _isFunction from './internal/_isFunction';\nimport and from './and';\nimport lift from './lift';\n\n/**\n * A function which calls the two provided functions and returns the `&&`\n * of the results.\n * It returns the result of the first function if it is false-y and the result\n * of the second function otherwise. Note that this is short-circuited,\n * meaning that the second function will not be invoked if the first returns a\n * false-y value.\n *\n * In addition to functions, `R.both` also accepts any fantasy-land compatible\n * applicative functor.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n * @param {Function} f A predicate\n * @param {Function} g Another predicate\n * @return {Function} a function that applies its arguments to `f` and `g` and `&&`s their outputs together.\n * @see R.and\n * @example\n *\n *      var gt10 = R.gt(R.__, 10)\n *      var lt20 = R.lt(R.__, 20)\n *      var f = R.both(gt10, lt20);\n *      f(15); //=> true\n *      f(30); //=> false\n */\nvar both = /*#__PURE__*/_curry2(function both(f, g) {\n  return _isFunction(f) ? function _both() {\n    return f.apply(this, arguments) && g.apply(this, arguments);\n  } : lift(and)(f, g);\n});\nexport default both;","import _curry1 from './internal/_curry1';\nimport curryN from './curryN';\n\n/**\n * Returns a curried equivalent of the provided function. The curried function\n * has two unusual capabilities. First, its arguments needn't be provided one\n * at a time. If `f` is a ternary function and `g` is `R.curry(f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> a) -> (* -> a)\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curryN\n * @example\n *\n *      var addFourNumbers = (a, b, c, d) => a + b + c + d;\n *\n *      var curriedAddFourNumbers = R.curry(addFourNumbers);\n *      var f = curriedAddFourNumbers(1, 2);\n *      var g = f(3);\n *      g(4); //=> 10\n */\nvar curry = /*#__PURE__*/_curry1(function curry(fn) {\n  return curryN(fn.length, fn);\n});\nexport default curry;","import curry from './curry';\n\n/**\n * Returns the result of calling its first argument with the remaining\n * arguments. This is occasionally useful as a converging function for\n * [`R.converge`](#converge): the first branch can produce a function while the\n * remaining branches produce values to be passed to that function as its\n * arguments.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig (*... -> a),*... -> a\n * @param {Function} fn The function to apply to the remaining arguments.\n * @param {...*} args Any number of positional arguments.\n * @return {*}\n * @see R.apply\n * @example\n *\n *      R.call(R.add, 1, 2); //=> 3\n *\n *      var indentN = R.pipe(R.repeat(' '),\n *                           R.join(''),\n *                           R.replace(/^(?!$)/gm));\n *\n *      var format = R.converge(R.call, [\n *                                  R.pipe(R.prop('indent'), indentN),\n *                                  R.prop('value')\n *                              ]);\n *\n *      format({indent: 2, value: 'foo\\nbar\\nbaz\\n'}); //=> '  foo\\n  bar\\n  baz\\n'\n * @symb R.call(f, a, b) = f(a, b)\n */\nvar call = /*#__PURE__*/curry(function call(fn) {\n  return fn.apply(this, Array.prototype.slice.call(arguments, 1));\n});\nexport default call;","import _isArrayLike from './_isArrayLike';\n\n/**\n * `_makeFlat` is a helper function that returns a one-level or fully recursive\n * function based on the flag passed in.\n *\n * @private\n */\nexport default function _makeFlat(recursive) {\n  return function flatt(list) {\n    var value, jlen, j;\n    var result = [];\n    var idx = 0;\n    var ilen = list.length;\n\n    while (idx < ilen) {\n      if (_isArrayLike(list[idx])) {\n        value = recursive ? flatt(list[idx]) : list[idx];\n        j = 0;\n        jlen = value.length;\n        while (j < jlen) {\n          result[result.length] = value[j];\n          j += 1;\n        }\n      } else {\n        result[result.length] = list[idx];\n      }\n      idx += 1;\n    }\n    return result;\n  };\n}","export default function _forceReduced(x) {\n  return {\n    '@@transducer/value': x,\n    '@@transducer/reduced': true\n  };\n}","import _forceReduced from './_forceReduced';\nimport _isArrayLike from './_isArrayLike';\nimport _reduce from './_reduce';\nimport _xfBase from './_xfBase';\n\nvar preservingReduced = function (xf) {\n  return {\n    '@@transducer/init': _xfBase.init,\n    '@@transducer/result': function (result) {\n      return xf['@@transducer/result'](result);\n    },\n    '@@transducer/step': function (result, input) {\n      var ret = xf['@@transducer/step'](result, input);\n      return ret['@@transducer/reduced'] ? _forceReduced(ret) : ret;\n    }\n  };\n};\n\nvar _flatCat = function _xcat(xf) {\n  var rxf = preservingReduced(xf);\n  return {\n    '@@transducer/init': _xfBase.init,\n    '@@transducer/result': function (result) {\n      return rxf['@@transducer/result'](result);\n    },\n    '@@transducer/step': function (result, input) {\n      return !_isArrayLike(input) ? _reduce(rxf, result, [input]) : _reduce(rxf, result, input);\n    }\n  };\n};\n\nexport default _flatCat;","import _curry2 from './_curry2';\nimport _flatCat from './_flatCat';\nimport map from '../map';\n\nvar _xchain = /*#__PURE__*/_curry2(function _xchain(f, xf) {\n  return map(f, _flatCat(xf));\n});\nexport default _xchain;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _makeFlat from './internal/_makeFlat';\nimport _xchain from './internal/_xchain';\nimport map from './map';\n\n/**\n * `chain` maps a function over a list and concatenates the results. `chain`\n * is also known as `flatMap` in some libraries\n *\n * Dispatches to the `chain` method of the second argument, if present,\n * according to the [FantasyLand Chain spec](https://github.com/fantasyland/fantasy-land#chain).\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig Chain m => (a -> m b) -> m a -> m b\n * @param {Function} fn The function to map with\n * @param {Array} list The list to map over\n * @return {Array} The result of flat-mapping `list` with `fn`\n * @example\n *\n *      var duplicate = n => [n, n];\n *      R.chain(duplicate, [1, 2, 3]); //=> [1, 1, 2, 2, 3, 3]\n *\n *      R.chain(R.append, R.head)([1, 2, 3]); //=> [1, 2, 3, 1]\n */\nvar chain = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['fantasy-land/chain', 'chain'], _xchain, function chain(fn, monad) {\n  if (typeof monad === 'function') {\n    return function (x) {\n      return fn(monad(x))(x);\n    };\n  }\n  return _makeFlat(false)(map(fn, monad));\n}));\nexport default chain;","import _curry3 from './internal/_curry3';\n\n/**\n * Restricts a number to be within a range.\n *\n * Also works for other ordered types such as Strings and Dates.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Relation\n * @sig Ord a => a -> a -> a -> a\n * @param {Number} minimum The lower limit of the clamp (inclusive)\n * @param {Number} maximum The upper limit of the clamp (inclusive)\n * @param {Number} value Value to be clamped\n * @return {Number} Returns `minimum` when `val < minimum`, `maximum` when `val > maximum`, returns `val` otherwise\n * @example\n *\n *      R.clamp(1, 10, -5) // => 1\n *      R.clamp(1, 10, 15) // => 10\n *      R.clamp(1, 10, 4)  // => 4\n */\nvar clamp = /*#__PURE__*/_curry3(function clamp(min, max, value) {\n  if (min > max) {\n    throw new Error('min must not be greater than max in clamp(min, max, value)');\n  }\n  return value < min ? min : value > max ? max : value;\n});\nexport default clamp;","export default function _cloneRegExp(pattern) {\n                                  return new RegExp(pattern.source, (pattern.global ? 'g' : '') + (pattern.ignoreCase ? 'i' : '') + (pattern.multiline ? 'm' : '') + (pattern.sticky ? 'y' : '') + (pattern.unicode ? 'u' : ''));\n}","import _curry1 from './internal/_curry1';\n\n/**\n * Gives a single-word string description of the (native) type of a value,\n * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n * attempt to distinguish user Object types any further, reporting them all as\n * 'Object'.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Type\n * @sig (* -> {*}) -> String\n * @param {*} val The value to test\n * @return {String}\n * @example\n *\n *      R.type({}); //=> \"Object\"\n *      R.type(1); //=> \"Number\"\n *      R.type(false); //=> \"Boolean\"\n *      R.type('s'); //=> \"String\"\n *      R.type(null); //=> \"Null\"\n *      R.type([]); //=> \"Array\"\n *      R.type(/[A-z]/); //=> \"RegExp\"\n *      R.type(() => {}); //=> \"Function\"\n *      R.type(undefined); //=> \"Undefined\"\n */\nvar type = /*#__PURE__*/_curry1(function type(val) {\n  return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n});\nexport default type;","import _cloneRegExp from './_cloneRegExp';\nimport type from '../type';\n\n/**\n * Copies an object.\n *\n * @private\n * @param {*} value The value to be copied\n * @param {Array} refFrom Array containing the source references\n * @param {Array} refTo Array containing the copied source references\n * @param {Boolean} deep Whether or not to perform deep cloning.\n * @return {*} The copied value.\n */\nexport default function _clone(value, refFrom, refTo, deep) {\n  var copy = function copy(copiedValue) {\n    var len = refFrom.length;\n    var idx = 0;\n    while (idx < len) {\n      if (value === refFrom[idx]) {\n        return refTo[idx];\n      }\n      idx += 1;\n    }\n    refFrom[idx + 1] = value;\n    refTo[idx + 1] = copiedValue;\n    for (var key in value) {\n      copiedValue[key] = deep ? _clone(value[key], refFrom, refTo, true) : value[key];\n    }\n    return copiedValue;\n  };\n  switch (type(value)) {\n    case 'Object':\n      return copy({});\n    case 'Array':\n      return copy([]);\n    case 'Date':\n      return new Date(value.valueOf());\n    case 'RegExp':\n      return _cloneRegExp(value);\n    default:\n      return value;\n  }\n}","import _clone from './internal/_clone';\nimport _curry1 from './internal/_curry1';\n\n/**\n * Creates a deep copy of the value which may contain (nested) `Array`s and\n * `Object`s, `Number`s, `String`s, `Boolean`s and `Date`s. `Function`s are\n * assigned by reference rather than copied\n *\n * Dispatches to a `clone` method if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {*} -> {*}\n * @param {*} value The object or array to clone\n * @return {*} A deeply cloned copy of `val`\n * @example\n *\n *      var objects = [{}, {}, {}];\n *      var objectsClone = R.clone(objects);\n *      objects === objectsClone; //=> false\n *      objects[0] === objectsClone[0]; //=> false\n */\nvar clone = /*#__PURE__*/_curry1(function clone(value) {\n  return value != null && typeof value.clone === 'function' ? value.clone() : _clone(value, [], [], true);\n});\nexport default clone;","import _curry1 from './internal/_curry1';\n\n/**\n * Makes a comparator function out of a function that reports whether the first\n * element is less than the second.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((a, b) -> Boolean) -> ((a, b) -> Number)\n * @param {Function} pred A predicate function of arity two which will return `true` if the first argument\n * is less than the second, `false` otherwise\n * @return {Function} A Function :: a -> b -> Int that returns `-1` if a < b, `1` if b < a, otherwise `0`\n * @example\n *\n *      var byAge = R.comparator((a, b) => a.age < b.age);\n *      var people = [\n *        // ...\n *      ];\n *      var peopleByIncreasingAge = R.sort(byAge, people);\n */\nvar comparator = /*#__PURE__*/_curry1(function comparator(pred) {\n  return function (a, b) {\n    return pred(a, b) ? -1 : pred(b, a) ? 1 : 0;\n  };\n});\nexport default comparator;","import _curry1 from './internal/_curry1';\n\n/**\n * A function that returns the `!` of its argument. It will return `true` when\n * passed false-y value, and `false` when passed a truth-y one.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig * -> Boolean\n * @param {*} a any value\n * @return {Boolean} the logical inverse of passed argument.\n * @see R.complement\n * @example\n *\n *      R.not(true); //=> false\n *      R.not(false); //=> true\n *      R.not(0); //=> true\n *      R.not(1); //=> false\n */\nvar not = /*#__PURE__*/_curry1(function not(a) {\n  return !a;\n});\nexport default not;","import lift from './lift';\nimport not from './not';\n\n/**\n * Takes a function `f` and returns a function `g` such that if called with the same arguments\n * when `f` returns a \"truthy\" value, `g` returns `false` and when `f` returns a \"falsy\" value `g` returns `true`.\n *\n * `R.complement` may be applied to any functor\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> *) -> (*... -> Boolean)\n * @param {Function} f\n * @return {Function}\n * @see R.not\n * @example\n *\n *      var isNotNil = R.complement(R.isNil);\n *      isNil(null); //=> true\n *      isNotNil(null); //=> false\n *      isNil(7); //=> false\n *      isNotNil(7); //=> true\n */\nvar complement = /*#__PURE__*/lift(not);\nexport default complement;","export default function _pipe(f, g) {\n  return function () {\n    return g.call(this, f.apply(this, arguments));\n  };\n}","import _isArray from './_isArray';\n\n/**\n * This checks whether a function has a [methodname] function. If it isn't an\n * array it will execute that function otherwise it will default to the ramda\n * implementation.\n *\n * @private\n * @param {Function} fn ramda implemtation\n * @param {String} methodname property to check for a custom implementation\n * @return {Object} Whatever the return value of the method is.\n */\nexport default function _checkForMethod(methodname, fn) {\n  return function () {\n    var length = arguments.length;\n    if (length === 0) {\n      return fn();\n    }\n    var obj = arguments[length - 1];\n    return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));\n  };\n}","import _checkForMethod from './internal/_checkForMethod';\nimport _curry3 from './internal/_curry3';\n\n/**\n * Returns the elements of the given list or string (or object with a `slice`\n * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n *\n * Dispatches to the `slice` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @sig Number -> Number -> String -> String\n * @param {Number} fromIndex The start index (inclusive).\n * @param {Number} toIndex The end index (exclusive).\n * @param {*} list\n * @return {*}\n * @example\n *\n *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n */\nvar slice = /*#__PURE__*/_curry3( /*#__PURE__*/_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n  return Array.prototype.slice.call(list, fromIndex, toIndex);\n}));\nexport default slice;","import _checkForMethod from './internal/_checkForMethod';\nimport _curry1 from './internal/_curry1';\nimport slice from './slice';\n\n/**\n * Returns all but the first element of the given list or string (or object\n * with a `tail` method).\n *\n * Dispatches to the `slice` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.head, R.init, R.last\n * @example\n *\n *      R.tail([1, 2, 3]);  //=> [2, 3]\n *      R.tail([1, 2]);     //=> [2]\n *      R.tail([1]);        //=> []\n *      R.tail([]);         //=> []\n *\n *      R.tail('abc');  //=> 'bc'\n *      R.tail('ab');   //=> 'b'\n *      R.tail('a');    //=> ''\n *      R.tail('');     //=> ''\n */\nvar tail = /*#__PURE__*/_curry1( /*#__PURE__*/_checkForMethod('tail', /*#__PURE__*/slice(1, Infinity)));\nexport default tail;","import _arity from './internal/_arity';\nimport _pipe from './internal/_pipe';\nimport reduce from './reduce';\nimport tail from './tail';\n\n/**\n * Performs left-to-right function composition. The leftmost function may have\n * any arity; the remaining functions must be unary.\n *\n * In some libraries this function is named `sequence`.\n *\n * **Note:** The result of pipe is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> ((a, b, ..., n) -> z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.compose\n * @example\n *\n *      var f = R.pipe(Math.pow, R.negate, R.inc);\n *\n *      f(3, 4); // -(3^4) + 1\n * @symb R.pipe(f, g, h)(a, b) = h(g(f(a, b)))\n */\nexport default function pipe() {\n  if (arguments.length === 0) {\n    throw new Error('pipe requires at least one argument');\n  }\n  return _arity(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));\n}","import _curry1 from './internal/_curry1';\nimport _isString from './internal/_isString';\n\n/**\n * Returns a new list or string with the elements or characters in reverse\n * order.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {Array|String} list\n * @return {Array|String}\n * @example\n *\n *      R.reverse([1, 2, 3]);  //=> [3, 2, 1]\n *      R.reverse([1, 2]);     //=> [2, 1]\n *      R.reverse([1]);        //=> [1]\n *      R.reverse([]);         //=> []\n *\n *      R.reverse('abc');      //=> 'cba'\n *      R.reverse('ab');       //=> 'ba'\n *      R.reverse('a');        //=> 'a'\n *      R.reverse('');         //=> ''\n */\nvar reverse = /*#__PURE__*/_curry1(function reverse(list) {\n  return _isString(list) ? list.split('').reverse().join('') : Array.prototype.slice.call(list, 0).reverse();\n});\nexport default reverse;","import pipe from './pipe';\nimport reverse from './reverse';\n\n/**\n * Performs right-to-left function composition. The rightmost function may have\n * any arity; the remaining functions must be unary.\n *\n * **Note:** The result of compose is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)) -> ((a, b, ..., n) -> z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.pipe\n * @example\n *\n *      var classyGreeting = (firstName, lastName) => \"The name's \" + lastName + \", \" + firstName + \" \" + lastName\n *      var yellGreeting = R.compose(R.toUpper, classyGreeting);\n *      yellGreeting('James', 'Bond'); //=> \"THE NAME'S BOND, JAMES BOND\"\n *\n *      R.compose(Math.abs, R.add(1), R.multiply(2))(-4) //=> 7\n *\n * @symb R.compose(f, g, h)(a, b) = f(g(h(a, b)))\n */\nexport default function compose() {\n  if (arguments.length === 0) {\n    throw new Error('compose requires at least one argument');\n  }\n  return pipe.apply(this, reverse(arguments));\n}","import chain from './chain';\nimport compose from './compose';\nimport map from './map';\n\n/**\n * Returns the right-to-left Kleisli composition of the provided functions,\n * each of which must return a value of a type supported by [`chain`](#chain).\n *\n * `R.composeK(h, g, f)` is equivalent to `R.compose(R.chain(h), R.chain(g), f)`.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Function\n * @sig Chain m => ((y -> m z), (x -> m y), ..., (a -> m b)) -> (a -> m z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.pipeK\n * @example\n *\n *       //  get :: String -> Object -> Maybe *\n *       var get = R.curry((propName, obj) => Maybe(obj[propName]))\n *\n *       //  getStateCode :: Maybe String -> Maybe String\n *       var getStateCode = R.composeK(\n *         R.compose(Maybe.of, R.toUpper),\n *         get('state'),\n *         get('address'),\n *         get('user'),\n *       );\n *       getStateCode({\"user\":{\"address\":{\"state\":\"ny\"}}}); //=> Maybe.Just(\"NY\")\n *       getStateCode({}); //=> Maybe.Nothing()\n * @symb R.composeK(f, g, h)(a) = R.chain(f, R.chain(g, h(a)))\n */\nexport default function composeK() {\n  if (arguments.length === 0) {\n    throw new Error('composeK requires at least one argument');\n  }\n  var init = Array.prototype.slice.call(arguments);\n  var last = init.pop();\n  return compose(compose.apply(this, map(chain, init)), last);\n}","export default function _pipeP(f, g) {\n  return function () {\n    var ctx = this;\n    return f.apply(ctx, arguments).then(function (x) {\n      return g.call(ctx, x);\n    });\n  };\n}","import _arity from './internal/_arity';\nimport _pipeP from './internal/_pipeP';\nimport reduce from './reduce';\nimport tail from './tail';\n\n/**\n * Performs left-to-right composition of one or more Promise-returning\n * functions. The leftmost function may have any arity; the remaining functions\n * must be unary.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a -> Promise b), (b -> Promise c), ..., (y -> Promise z)) -> (a -> Promise z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.composeP\n * @example\n *\n *      //  followersForUser :: String -> Promise [User]\n *      var followersForUser = R.pipeP(db.getUserById, db.getFollowers);\n */\nexport default function pipeP() {\n  if (arguments.length === 0) {\n    throw new Error('pipeP requires at least one argument');\n  }\n  return _arity(arguments[0].length, reduce(_pipeP, arguments[0], tail(arguments)));\n}","import pipeP from './pipeP';\nimport reverse from './reverse';\n\n/**\n * Performs right-to-left composition of one or more Promise-returning\n * functions. The rightmost function may have any arity; the remaining\n * functions must be unary.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((y -> Promise z), (x -> Promise y), ..., (a -> Promise b)) -> (a -> Promise z)\n * @param {...Function} functions The functions to compose\n * @return {Function}\n * @see R.pipeP\n * @example\n *\n *      var db = {\n *        users: {\n *          JOE: {\n *            name: 'Joe',\n *            followers: ['STEVE', 'SUZY']\n *          }\n *        }\n *      }\n *\n *      // We'll pretend to do a db lookup which returns a promise\n *      var lookupUser = (userId) => Promise.resolve(db.users[userId])\n *      var lookupFollowers = (user) => Promise.resolve(user.followers)\n *      lookupUser('JOE').then(lookupFollowers)\n *\n *      //  followersForUser :: String -> Promise [UserId]\n *      var followersForUser = R.composeP(lookupFollowers, lookupUser);\n *      followersForUser('JOE').then(followers => console.log('Followers:', followers))\n *      // Followers: [\"STEVE\",\"SUZY\"]\n */\nexport default function composeP() {\n  if (arguments.length === 0) {\n    throw new Error('composeP requires at least one argument');\n  }\n  return pipeP.apply(this, reverse(arguments));\n}","export default function _arrayFromIterator(iter) {\n  var list = [];\n  var next;\n  while (!(next = iter.next()).done) {\n    list.push(next.value);\n  }\n  return list;\n}","export default function _containsWith(pred, x, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (pred(x, list[idx])) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n}","export default function _functionName(f) {\n  // String(x => x) evaluates to \"x => x\", so the pattern may not match.\n  var match = String(f).match(/^function (\\w*)/);\n  return match == null ? '' : match[1];\n}","import _curry2 from './internal/_curry2';\n\n/**\n * Returns true if its arguments are identical, false otherwise. Values are\n * identical if they reference the same memory. `NaN` is identical to `NaN`;\n * `0` and `-0` are not identical.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      var o = {};\n *      R.identical(o, o); //=> true\n *      R.identical(1, 1); //=> true\n *      R.identical(1, '1'); //=> false\n *      R.identical([], []); //=> false\n *      R.identical(0, -0); //=> false\n *      R.identical(NaN, NaN); //=> true\n */\nvar identical = /*#__PURE__*/_curry2(function identical(a, b) {\n  // SameValue algorithm\n  if (a === b) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return a !== 0 || 1 / a === 1 / b;\n  } else {\n    // Step 6.a: NaN == NaN\n    return a !== a && b !== b;\n  }\n});\nexport default identical;","import _arrayFromIterator from './_arrayFromIterator';\nimport _containsWith from './_containsWith';\nimport _functionName from './_functionName';\nimport _has from './_has';\nimport identical from '../identical';\nimport keys from '../keys';\nimport type from '../type';\n\n/**\n * private _uniqContentEquals function.\n * That function is checking equality of 2 iterator contents with 2 assumptions\n * - iterators lengths are the same\n * - iterators values are unique\n *\n * false-positive result will be returned for comparision of, e.g.\n * - [1,2,3] and [1,2,3,4]\n * - [1,1,1] and [1,2,3]\n * */\n\nfunction _uniqContentEquals(aIterator, bIterator, stackA, stackB) {\n  var a = _arrayFromIterator(aIterator);\n  var b = _arrayFromIterator(bIterator);\n\n  function eq(_a, _b) {\n    return _equals(_a, _b, stackA.slice(), stackB.slice());\n  }\n\n  // if *a* array contains any element that is not included in *b*\n  return !_containsWith(function (b, aItem) {\n    return !_containsWith(eq, aItem, b);\n  }, b, a);\n}\n\nexport default function _equals(a, b, stackA, stackB) {\n  if (identical(a, b)) {\n    return true;\n  }\n\n  var typeA = type(a);\n\n  if (typeA !== type(b)) {\n    return false;\n  }\n\n  if (a == null || b == null) {\n    return false;\n  }\n\n  if (typeof a['fantasy-land/equals'] === 'function' || typeof b['fantasy-land/equals'] === 'function') {\n    return typeof a['fantasy-land/equals'] === 'function' && a['fantasy-land/equals'](b) && typeof b['fantasy-land/equals'] === 'function' && b['fantasy-land/equals'](a);\n  }\n\n  if (typeof a.equals === 'function' || typeof b.equals === 'function') {\n    return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);\n  }\n\n  switch (typeA) {\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n      if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {\n        return a === b;\n      }\n      break;\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n      if (!(typeof a === typeof b && identical(a.valueOf(), b.valueOf()))) {\n        return false;\n      }\n      break;\n    case 'Date':\n      if (!identical(a.valueOf(), b.valueOf())) {\n        return false;\n      }\n      break;\n    case 'Error':\n      return a.name === b.name && a.message === b.message;\n    case 'RegExp':\n      if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {\n        return false;\n      }\n      break;\n  }\n\n  var idx = stackA.length - 1;\n  while (idx >= 0) {\n    if (stackA[idx] === a) {\n      return stackB[idx] === b;\n    }\n    idx -= 1;\n  }\n\n  switch (typeA) {\n    case 'Map':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.entries(), b.entries(), stackA.concat([a]), stackB.concat([b]));\n    case 'Set':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.values(), b.values(), stackA.concat([a]), stackB.concat([b]));\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n    case 'Date':\n    case 'Error':\n    case 'RegExp':\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'ArrayBuffer':\n      break;\n    default:\n      // Values of other types are only equal if identical.\n      return false;\n  }\n\n  var keysA = keys(a);\n  if (keysA.length !== keys(b).length) {\n    return false;\n  }\n\n  var extendedStackA = stackA.concat([a]);\n  var extendedStackB = stackB.concat([b]);\n\n  idx = keysA.length - 1;\n  while (idx >= 0) {\n    var key = keysA[idx];\n    if (!(_has(key, b) && _equals(b[key], a[key], extendedStackA, extendedStackB))) {\n      return false;\n    }\n    idx -= 1;\n  }\n  return true;\n}","import _curry2 from './internal/_curry2';\nimport _equals from './internal/_equals';\n\n/**\n * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\n * cyclical data structures.\n *\n * Dispatches symmetrically to the `equals` methods of both arguments, if\n * present.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> b -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      R.equals(1, 1); //=> true\n *      R.equals(1, '1'); //=> false\n *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n *\n *      var a = {}; a.v = a;\n *      var b = {}; b.v = b;\n *      R.equals(a, b); //=> true\n */\nvar equals = /*#__PURE__*/_curry2(function equals(a, b) {\n  return _equals(a, b, [], []);\n});\nexport default equals;","import equals from '../equals';\n\nexport default function _indexOf(list, a, idx) {\n  var inf, item;\n  // Array.prototype.indexOf doesn't exist below IE9\n  if (typeof list.indexOf === 'function') {\n    switch (typeof a) {\n      case 'number':\n        if (a === 0) {\n          // manually crawl the list to distinguish between +0 and -0\n          inf = 1 / a;\n          while (idx < list.length) {\n            item = list[idx];\n            if (item === 0 && 1 / item === inf) {\n              return idx;\n            }\n            idx += 1;\n          }\n          return -1;\n        } else if (a !== a) {\n          // NaN\n          while (idx < list.length) {\n            item = list[idx];\n            if (typeof item === 'number' && item !== item) {\n              return idx;\n            }\n            idx += 1;\n          }\n          return -1;\n        }\n        // non-zero numbers can utilise Set\n        return list.indexOf(a, idx);\n\n      // all these types can utilise Set\n      case 'string':\n      case 'boolean':\n      case 'function':\n      case 'undefined':\n        return list.indexOf(a, idx);\n\n      case 'object':\n        if (a === null) {\n          // null can utilise Set\n          return list.indexOf(a, idx);\n        }\n    }\n  }\n  // anything else not covered above, defer to R.equals\n  while (idx < list.length) {\n    if (equals(list[idx], a)) {\n      return idx;\n    }\n    idx += 1;\n  }\n  return -1;\n}","import _indexOf from './_indexOf';\n\nexport default function _contains(a, list) {\n  return _indexOf(list, a, 0) >= 0;\n}","export default function _quote(s) {\n  var escaped = s.replace(/\\\\/g, '\\\\\\\\').replace(/[\\b]/g, '\\\\b') // \\b matches word boundary; [\\b] matches backspace\n  .replace(/\\f/g, '\\\\f').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/\\t/g, '\\\\t').replace(/\\v/g, '\\\\v').replace(/\\0/g, '\\\\0');\n\n  return '\"' + escaped.replace(/\"/g, '\\\\\"') + '\"';\n}","/**\n * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n */\nvar pad = function pad(n) {\n  return (n < 10 ? '0' : '') + n;\n};\n\nvar _toISOString = typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {\n  return d.toISOString();\n} : function _toISOString(d) {\n  return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';\n};\n\nexport default _toISOString;","export default function _complement(f) {\n  return function () {\n    return !f.apply(this, arguments);\n  };\n}","export default function _filter(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      result[result.length] = list[idx];\n    }\n    idx += 1;\n  }\n  return result;\n}","export default function _isObject(x) {\n  return Object.prototype.toString.call(x) === '[object Object]';\n}","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XFilter = /*#__PURE__*/function () {\n  function XFilter(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XFilter.prototype['@@transducer/init'] = _xfBase.init;\n  XFilter.prototype['@@transducer/result'] = _xfBase.result;\n  XFilter.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;\n  };\n\n  return XFilter;\n}();\n\nvar _xfilter = /*#__PURE__*/_curry2(function _xfilter(f, xf) {\n  return new XFilter(f, xf);\n});\nexport default _xfilter;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _filter from './internal/_filter';\nimport _isObject from './internal/_isObject';\nimport _reduce from './internal/_reduce';\nimport _xfilter from './internal/_xfilter';\nimport keys from './keys';\n\n/**\n * Takes a predicate and a `Filterable`, and returns a new filterable of the\n * same type containing the members of the given filterable which satisfy the\n * given predicate. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * Dispatches to the `filter` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array} Filterable\n * @see R.reject, R.transduce, R.addIndex\n * @example\n *\n *      var isEven = n => n % 2 === 0;\n *\n *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\nvar filter = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['filter'], _xfilter, function (pred, filterable) {\n  return _isObject(filterable) ? _reduce(function (acc, key) {\n    if (pred(filterable[key])) {\n      acc[key] = filterable[key];\n    }\n    return acc;\n  }, {}, keys(filterable)) :\n  // else\n  _filter(pred, filterable);\n}));\nexport default filter;","import _complement from './internal/_complement';\nimport _curry2 from './internal/_curry2';\nimport filter from './filter';\n\n/**\n * The complement of [`filter`](#filter).\n *\n * Acts as a transducer if a transformer is given in list position. Filterable\n * objects include plain objects or any object that has a filter method such\n * as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array}\n * @see R.filter, R.transduce, R.addIndex\n * @example\n *\n *      var isOdd = (n) => n % 2 === 1;\n *\n *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\nvar reject = /*#__PURE__*/_curry2(function reject(pred, filterable) {\n  return filter(_complement(pred), filterable);\n});\nexport default reject;","import _contains from './_contains';\nimport _map from './_map';\nimport _quote from './_quote';\nimport _toISOString from './_toISOString';\nimport keys from '../keys';\nimport reject from '../reject';\n\nexport default function _toString(x, seen) {\n  var recur = function recur(y) {\n    var xs = seen.concat([x]);\n    return _contains(y, xs) ? '<Circular>' : _toString(y, xs);\n  };\n\n  //  mapPairs :: (Object, [String]) -> [String]\n  var mapPairs = function (obj, keys) {\n    return _map(function (k) {\n      return _quote(k) + ': ' + recur(obj[k]);\n    }, keys.slice().sort());\n  };\n\n  switch (Object.prototype.toString.call(x)) {\n    case '[object Arguments]':\n      return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';\n    case '[object Array]':\n      return '[' + _map(recur, x).concat(mapPairs(x, reject(function (k) {\n        return (/^\\d+$/.test(k)\n        );\n      }, keys(x)))).join(', ') + ']';\n    case '[object Boolean]':\n      return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();\n    case '[object Date]':\n      return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';\n    case '[object Null]':\n      return 'null';\n    case '[object Number]':\n      return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);\n    case '[object String]':\n      return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);\n    case '[object Undefined]':\n      return 'undefined';\n    default:\n      if (typeof x.toString === 'function') {\n        var repr = x.toString();\n        if (repr !== '[object Object]') {\n          return repr;\n        }\n      }\n      return '{' + mapPairs(x, keys(x)).join(', ') + '}';\n  }\n}","import _curry1 from './internal/_curry1';\nimport _toString from './internal/_toString';\n\n/**\n * Returns the string representation of the given value. `eval`'ing the output\n * should result in a value equivalent to the input value. Many of the built-in\n * `toString` methods do not satisfy this requirement.\n *\n * If the given value is an `[object Object]` with a `toString` method other\n * than `Object.prototype.toString`, this method is invoked with no arguments\n * to produce the return value. This means user-defined constructor functions\n * can provide a suitable `toString` method. For example:\n *\n *     function Point(x, y) {\n *       this.x = x;\n *       this.y = y;\n *     }\n *\n *     Point.prototype.toString = function() {\n *       return 'new Point(' + this.x + ', ' + this.y + ')';\n *     };\n *\n *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category String\n * @sig * -> String\n * @param {*} val\n * @return {String}\n * @example\n *\n *      R.toString(42); //=> '42'\n *      R.toString('abc'); //=> '\"abc\"'\n *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'\n *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{\"bar\": 2, \"baz\": 3, \"foo\": 1}'\n *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date(\"2001-02-03T04:05:06.000Z\")'\n */\nvar toString = /*#__PURE__*/_curry1(function toString(val) {\n  return _toString(val, []);\n});\nexport default toString;","import _curry2 from './internal/_curry2';\nimport _isArray from './internal/_isArray';\nimport _isFunction from './internal/_isFunction';\nimport _isString from './internal/_isString';\nimport toString from './toString';\n\n/**\n * Returns the result of concatenating the given lists or strings.\n *\n * Note: `R.concat` expects both arguments to be of the same type,\n * unlike the native `Array.prototype.concat` method. It will throw\n * an error if you `concat` an Array with a non-Array value.\n *\n * Dispatches to the `concat` method of the first argument, if present.\n * Can also concatenate two members of a [fantasy-land\n * compatible semigroup](https://github.com/fantasyland/fantasy-land#semigroup).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @sig String -> String -> String\n * @param {Array|String} firstList The first list\n * @param {Array|String} secondList The second list\n * @return {Array|String} A list consisting of the elements of `firstList` followed by the elements of\n * `secondList`.\n *\n * @example\n *\n *      R.concat('ABC', 'DEF'); // 'ABCDEF'\n *      R.concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n *      R.concat([], []); //=> []\n */\nvar concat = /*#__PURE__*/_curry2(function concat(a, b) {\n  if (_isArray(a)) {\n    if (_isArray(b)) {\n      return a.concat(b);\n    }\n    throw new TypeError(toString(b) + ' is not an array');\n  }\n  if (_isString(a)) {\n    if (_isString(b)) {\n      return a + b;\n    }\n    throw new TypeError(toString(b) + ' is not a string');\n  }\n  if (a != null && _isFunction(a['fantasy-land/concat'])) {\n    return a['fantasy-land/concat'](b);\n  }\n  if (a != null && _isFunction(a.concat)) {\n    return a.concat(b);\n  }\n  throw new TypeError(toString(a) + ' does not have a method named \"concat\" or \"fantasy-land/concat\"');\n});\nexport default concat;","import _arity from './internal/_arity';\nimport _curry1 from './internal/_curry1';\nimport map from './map';\nimport max from './max';\nimport reduce from './reduce';\n\n/**\n * Returns a function, `fn`, which encapsulates `if/else, if/else, ...` logic.\n * `R.cond` takes a list of [predicate, transformer] pairs. All of the arguments\n * to `fn` are applied to each of the predicates in turn until one returns a\n * \"truthy\" value, at which point `fn` returns the result of applying its\n * arguments to the corresponding transformer. If none of the predicates\n * matches, `fn` returns undefined.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Logic\n * @sig [[(*... -> Boolean),(*... -> *)]] -> (*... -> *)\n * @param {Array} pairs A list of [predicate, transformer]\n * @return {Function}\n * @example\n *\n *      var fn = R.cond([\n *        [R.equals(0),   R.always('water freezes at 0°C')],\n *        [R.equals(100), R.always('water boils at 100°C')],\n *        [R.T,           temp => 'nothing special happens at ' + temp + '°C']\n *      ]);\n *      fn(0); //=> 'water freezes at 0°C'\n *      fn(50); //=> 'nothing special happens at 50°C'\n *      fn(100); //=> 'water boils at 100°C'\n */\nvar cond = /*#__PURE__*/_curry1(function cond(pairs) {\n  var arity = reduce(max, 0, map(function (pair) {\n    return pair[0].length;\n  }, pairs));\n  return _arity(arity, function () {\n    var idx = 0;\n    while (idx < pairs.length) {\n      if (pairs[idx][0].apply(this, arguments)) {\n        return pairs[idx][1].apply(this, arguments);\n      }\n      idx += 1;\n    }\n  });\n});\nexport default cond;","import _curry2 from './internal/_curry2';\nimport curry from './curry';\nimport nAry from './nAry';\n\n/**\n * Wraps a constructor function inside a curried function that can be called\n * with the same arguments and returns the same type. The arity of the function\n * returned is specified to allow using variadic constructor functions.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Function\n * @sig Number -> (* -> {*}) -> (* -> {*})\n * @param {Number} n The arity of the constructor function.\n * @param {Function} Fn The constructor function to wrap.\n * @return {Function} A wrapped, curried constructor function.\n * @example\n *\n *      // Variadic Constructor function\n *      function Salad() {\n *        this.ingredients = arguments;\n *      }\n *\n *      Salad.prototype.recipe = function() {\n *        var instructions = R.map(ingredient => 'Add a dollop of ' + ingredient, this.ingredients);\n *        return R.join('\\n', instructions);\n *      };\n *\n *      var ThreeLayerSalad = R.constructN(3, Salad);\n *\n *      // Notice we no longer need the 'new' keyword, and the constructor is curried for 3 arguments.\n *      var salad = ThreeLayerSalad('Mayonnaise')('Potato Chips')('Ketchup');\n *\n *      console.log(salad.recipe());\n *      // Add a dollop of Mayonnaise\n *      // Add a dollop of Potato Chips\n *      // Add a dollop of Ketchup\n */\nvar constructN = /*#__PURE__*/_curry2(function constructN(n, Fn) {\n  if (n > 10) {\n    throw new Error('Constructor with greater than ten arguments');\n  }\n  if (n === 0) {\n    return function () {\n      return new Fn();\n    };\n  }\n  return curry(nAry(n, function ($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {\n    switch (arguments.length) {\n      case 1:\n        return new Fn($0);\n      case 2:\n        return new Fn($0, $1);\n      case 3:\n        return new Fn($0, $1, $2);\n      case 4:\n        return new Fn($0, $1, $2, $3);\n      case 5:\n        return new Fn($0, $1, $2, $3, $4);\n      case 6:\n        return new Fn($0, $1, $2, $3, $4, $5);\n      case 7:\n        return new Fn($0, $1, $2, $3, $4, $5, $6);\n      case 8:\n        return new Fn($0, $1, $2, $3, $4, $5, $6, $7);\n      case 9:\n        return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8);\n      case 10:\n        return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8, $9);\n    }\n  }));\n});\nexport default constructN;","import _curry1 from './internal/_curry1';\nimport constructN from './constructN';\n\n/**\n * Wraps a constructor function inside a curried function that can be called\n * with the same arguments and returns the same type.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> {*}) -> (* -> {*})\n * @param {Function} fn The constructor function to wrap.\n * @return {Function} A wrapped, curried constructor function.\n * @see R.invoker\n * @example\n *\n *      // Constructor function\n *      function Animal(kind) {\n *        this.kind = kind;\n *      };\n *      Animal.prototype.sighting = function() {\n *        return \"It's a \" + this.kind + \"!\";\n *      }\n *\n *      var AnimalConstructor = R.construct(Animal)\n *\n *      // Notice we no longer need the 'new' keyword:\n *      AnimalConstructor('Pig'); //=> {\"kind\": \"Pig\", \"sighting\": function (){...}};\n *\n *      var animalTypes = [\"Lion\", \"Tiger\", \"Bear\"];\n *      var animalSighting = R.invoker(0, 'sighting');\n *      var sightNewAnimal = R.compose(animalSighting, AnimalConstructor);\n *      R.map(sightNewAnimal, animalTypes); //=> [\"It's a Lion!\", \"It's a Tiger!\", \"It's a Bear!\"]\n */\nvar construct = /*#__PURE__*/_curry1(function construct(Fn) {\n  return constructN(Fn.length, Fn);\n});\nexport default construct;","import _contains from './internal/_contains';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Returns `true` if the specified value is equal, in [`R.equals`](#equals)\n * terms, to at least one element of the given list; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Boolean\n * @param {Object} a The item to compare against.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if an equivalent item is in the list, `false` otherwise.\n * @see R.any\n * @example\n *\n *      R.contains(3, [1, 2, 3]); //=> true\n *      R.contains(4, [1, 2, 3]); //=> false\n *      R.contains({ name: 'Fred' }, [{ name: 'Fred' }]); //=> true\n *      R.contains([42], [[42]]); //=> true\n */\nvar contains = /*#__PURE__*/_curry2(_contains);\nexport default contains;","import _curry2 from './internal/_curry2';\nimport _map from './internal/_map';\nimport curryN from './curryN';\nimport max from './max';\nimport pluck from './pluck';\nimport reduce from './reduce';\n\n/**\n * Accepts a converging function and a list of branching functions and returns\n * a new function. When invoked, this new function is applied to some\n * arguments, each branching function is applied to those same arguments. The\n * results of each branching function are passed as arguments to the converging\n * function to produce the return value.\n *\n * @func\n * @memberOf R\n * @since v0.4.2\n * @category Function\n * @sig ((x1, x2, ...) -> z) -> [((a, b, ...) -> x1), ((a, b, ...) -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} after A function. `after` will be invoked with the return values of\n *        `fn1` and `fn2` as its arguments.\n * @param {Array} functions A list of functions.\n * @return {Function} A new function.\n * @see R.useWith\n * @example\n *\n *      var average = R.converge(R.divide, [R.sum, R.length])\n *      average([1, 2, 3, 4, 5, 6, 7]) //=> 4\n *\n *      var strangeConcat = R.converge(R.concat, [R.toUpper, R.toLower])\n *      strangeConcat(\"Yodel\") //=> \"YODELyodel\"\n *\n * @symb R.converge(f, [g, h])(a, b) = f(g(a, b), h(a, b))\n */\nvar converge = /*#__PURE__*/_curry2(function converge(after, fns) {\n  return curryN(reduce(max, 0, pluck('length', fns)), function () {\n    var args = arguments;\n    var context = this;\n    return after.apply(context, _map(function (fn) {\n      return fn.apply(context, args);\n    }, fns));\n  });\n});\nexport default converge;","import _curryN from './_curryN';\nimport _has from './_has';\nimport _xfBase from './_xfBase';\n\nvar XReduceBy = /*#__PURE__*/function () {\n  function XReduceBy(valueFn, valueAcc, keyFn, xf) {\n    this.valueFn = valueFn;\n    this.valueAcc = valueAcc;\n    this.keyFn = keyFn;\n    this.xf = xf;\n    this.inputs = {};\n  }\n  XReduceBy.prototype['@@transducer/init'] = _xfBase.init;\n  XReduceBy.prototype['@@transducer/result'] = function (result) {\n    var key;\n    for (key in this.inputs) {\n      if (_has(key, this.inputs)) {\n        result = this.xf['@@transducer/step'](result, this.inputs[key]);\n        if (result['@@transducer/reduced']) {\n          result = result['@@transducer/value'];\n          break;\n        }\n      }\n    }\n    this.inputs = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XReduceBy.prototype['@@transducer/step'] = function (result, input) {\n    var key = this.keyFn(input);\n    this.inputs[key] = this.inputs[key] || [key, this.valueAcc];\n    this.inputs[key][1] = this.valueFn(this.inputs[key][1], input);\n    return result;\n  };\n\n  return XReduceBy;\n}();\n\nvar _xreduceBy = /*#__PURE__*/_curryN(4, [], function _xreduceBy(valueFn, valueAcc, keyFn, xf) {\n  return new XReduceBy(valueFn, valueAcc, keyFn, xf);\n});\nexport default _xreduceBy;","import _curryN from './internal/_curryN';\nimport _dispatchable from './internal/_dispatchable';\nimport _has from './internal/_has';\nimport _reduce from './internal/_reduce';\nimport _xreduceBy from './internal/_xreduceBy';\n\n/**\n * Groups the elements of the list according to the result of calling\n * the String-returning function `keyFn` on each element and reduces the elements\n * of each group to a single value via the reducer function `valueFn`.\n *\n * This function is basically a more general [`groupBy`](#groupBy) function.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category List\n * @sig ((a, b) -> a) -> a -> (b -> String) -> [b] -> {String: a}\n * @param {Function} valueFn The function that reduces the elements of each group to a single\n *        value. Receives two values, accumulator for a particular group and the current element.\n * @param {*} acc The (initial) accumulator value for each group.\n * @param {Function} keyFn The function that maps the list's element into a key.\n * @param {Array} list The array to group.\n * @return {Object} An object with the output of `keyFn` for keys, mapped to the output of\n *         `valueFn` for elements which produced that key when passed to `keyFn`.\n * @see R.groupBy, R.reduce\n * @example\n *\n *      var reduceToNamesBy = R.reduceBy((acc, student) => acc.concat(student.name), []);\n *      var namesByGrade = reduceToNamesBy(function(student) {\n *        var score = student.score;\n *        return score < 65 ? 'F' :\n *               score < 70 ? 'D' :\n *               score < 80 ? 'C' :\n *               score < 90 ? 'B' : 'A';\n *      });\n *      var students = [{name: 'Lucy', score: 92},\n *                      {name: 'Drew', score: 85},\n *                      // ...\n *                      {name: 'Bart', score: 62}];\n *      namesByGrade(students);\n *      // {\n *      //   'A': ['Lucy'],\n *      //   'B': ['Drew']\n *      //   // ...,\n *      //   'F': ['Bart']\n *      // }\n */\nvar reduceBy = /*#__PURE__*/_curryN(4, [], /*#__PURE__*/_dispatchable([], _xreduceBy, function reduceBy(valueFn, valueAcc, keyFn, list) {\n  return _reduce(function (acc, elt) {\n    var key = keyFn(elt);\n    acc[key] = valueFn(_has(key, acc) ? acc[key] : valueAcc, elt);\n    return acc;\n  }, {}, list);\n}));\nexport default reduceBy;","import reduceBy from './reduceBy';\n\n/**\n * Counts the elements of a list according to how many match each value of a\n * key generated by the supplied function. Returns an object mapping the keys\n * produced by `fn` to the number of occurrences in the list. Note that all\n * keys are coerced to strings because of how JavaScript objects work.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig (a -> String) -> [a] -> {*}\n * @param {Function} fn The function used to map values to keys.\n * @param {Array} list The list to count elements from.\n * @return {Object} An object mapping keys to number of occurrences in the list.\n * @example\n *\n *      var numbers = [1.0, 1.1, 1.2, 2.0, 3.0, 2.2];\n *      R.countBy(Math.floor)(numbers);    //=> {'1': 3, '2': 2, '3': 1}\n *\n *      var letters = ['a', 'b', 'A', 'a', 'B', 'c'];\n *      R.countBy(R.toLower)(letters);   //=> {'a': 3, 'b': 2, 'c': 1}\n */\nvar countBy = /*#__PURE__*/reduceBy(function (acc, elem) {\n  return acc + 1;\n}, 0);\nexport default countBy;","import add from './add';\n\n/**\n * Decrements its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number} n - 1\n * @see R.inc\n * @example\n *\n *      R.dec(42); //=> 41\n */\nvar dec = /*#__PURE__*/add(-1);\nexport default dec;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns the second argument if it is not `null`, `undefined` or `NaN`;\n * otherwise the first argument is returned.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {a} default The default value.\n * @param {b} val `val` will be returned instead of `default` unless `val` is `null`, `undefined` or `NaN`.\n * @return {*} The second value if it is not `null`, `undefined` or `NaN`, otherwise the default value\n * @example\n *\n *      var defaultTo42 = R.defaultTo(42);\n *\n *      defaultTo42(null);  //=> 42\n *      defaultTo42(undefined);  //=> 42\n *      defaultTo42('Ramda');  //=> 'Ramda'\n *      // parseInt('string') results in NaN\n *      defaultTo42(parseInt('string')); //=> 42\n */\nvar defaultTo = /*#__PURE__*/_curry2(function defaultTo(d, v) {\n  return v == null || v !== v ? d : v;\n});\nexport default defaultTo;","import _curry3 from './internal/_curry3';\n\n/**\n * Makes a descending comparator function out of a function that returns a value\n * that can be compared with `<` and `>`.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Function\n * @sig Ord b => (a -> b) -> a -> a -> Number\n * @param {Function} fn A function of arity one that returns a value that can be compared\n * @param {*} a The first item to be compared.\n * @param {*} b The second item to be compared.\n * @return {Number} `-1` if fn(a) > fn(b), `1` if fn(b) > fn(a), otherwise `0`\n * @see R.ascend\n * @example\n *\n *      var byAge = R.descend(R.prop('age'));\n *      var people = [\n *        // ...\n *      ];\n *      var peopleByOldestFirst = R.sort(byAge, people);\n */\nvar descend = /*#__PURE__*/_curry3(function descend(fn, a, b) {\n  var aa = fn(a);\n  var bb = fn(b);\n  return aa > bb ? -1 : aa < bb ? 1 : 0;\n});\nexport default descend;","import _contains from './internal/_contains';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Finds the set (i.e. no duplicates) of all elements in the first list not\n * contained in the second list. Objects and Arrays are compared in terms of\n * value equality, not reference equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` that are not in `list2`.\n * @see R.differenceWith, R.symmetricDifference, R.symmetricDifferenceWith, R.without\n * @example\n *\n *      R.difference([1,2,3,4], [7,6,5,4,3]); //=> [1,2]\n *      R.difference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5]\n *      R.difference([{a: 1}, {b: 2}], [{a: 1}, {c: 3}]) //=> [{b: 2}]\n */\nvar difference = /*#__PURE__*/_curry2(function difference(first, second) {\n  var out = [];\n  var idx = 0;\n  var firstLen = first.length;\n  while (idx < firstLen) {\n    if (!_contains(first[idx], second) && !_contains(first[idx], out)) {\n      out[out.length] = first[idx];\n    }\n    idx += 1;\n  }\n  return out;\n});\nexport default difference;","import _containsWith from './internal/_containsWith';\nimport _curry3 from './internal/_curry3';\n\n/**\n * Finds the set (i.e. no duplicates) of all elements in the first list not\n * contained in the second list. Duplication is determined according to the\n * value returned by applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` that are not in `list2`.\n * @see R.difference, R.symmetricDifference, R.symmetricDifferenceWith\n * @example\n *\n *      var cmp = (x, y) => x.a === y.a;\n *      var l1 = [{a: 1}, {a: 2}, {a: 3}];\n *      var l2 = [{a: 3}, {a: 4}];\n *      R.differenceWith(cmp, l1, l2); //=> [{a: 1}, {a: 2}]\n */\nvar differenceWith = /*#__PURE__*/_curry3(function differenceWith(pred, first, second) {\n  var out = [];\n  var idx = 0;\n  var firstLen = first.length;\n  while (idx < firstLen) {\n    if (!_containsWith(pred, first[idx], second) && !_containsWith(pred, first[idx], out)) {\n      out.push(first[idx]);\n    }\n    idx += 1;\n  }\n  return out;\n});\nexport default differenceWith;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns a new object that does not contain a `prop` property.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Object\n * @sig String -> {k: v} -> {k: v}\n * @param {String} prop The name of the property to dissociate\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original but without the specified property\n * @see R.assoc\n * @example\n *\n *      R.dissoc('b', {a: 1, b: 2, c: 3}); //=> {a: 1, c: 3}\n */\nvar dissoc = /*#__PURE__*/_curry2(function dissoc(prop, obj) {\n  var result = {};\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n  delete result[prop];\n  return result;\n});\nexport default dissoc;","import _curry3 from './internal/_curry3';\n\n/**\n * Removes the sub-list of `list` starting at index `start` and containing\n * `count` elements. _Note that this is not destructive_: it returns a copy of\n * the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.2.2\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @param {Number} start The position to start removing elements\n * @param {Number} count The number of elements to remove\n * @param {Array} list The list to remove from\n * @return {Array} A new Array with `count` elements from `start` removed.\n * @example\n *\n *      R.remove(2, 3, [1,2,3,4,5,6,7,8]); //=> [1,2,6,7,8]\n */\nvar remove = /*#__PURE__*/_curry3(function remove(start, count, list) {\n  var result = Array.prototype.slice.call(list, 0);\n  result.splice(start, count);\n  return result;\n});\nexport default remove;","import _curry3 from './internal/_curry3';\nimport adjust from './adjust';\nimport always from './always';\n\n/**\n * Returns a new copy of the array with the element at the provided index\n * replaced with the given value.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig Number -> a -> [a] -> [a]\n * @param {Number} idx The index to update.\n * @param {*} x The value to exist at the given index of the returned array.\n * @param {Array|Arguments} list The source array-like object to be updated.\n * @return {Array} A copy of `list` with the value at index `idx` replaced with `x`.\n * @see R.adjust\n * @example\n *\n *      R.update(1, 11, [0, 1, 2]);     //=> [0, 11, 2]\n *      R.update(1)(11)([0, 1, 2]);     //=> [0, 11, 2]\n * @symb R.update(-1, a, [b, c]) = [b, a]\n * @symb R.update(0, a, [b, c]) = [a, c]\n * @symb R.update(1, a, [b, c]) = [b, a]\n */\nvar update = /*#__PURE__*/_curry3(function update(idx, x, list) {\n  return adjust(always(x), idx, list);\n});\nexport default update;","import _curry2 from './internal/_curry2';\nimport _isInteger from './internal/_isInteger';\nimport assoc from './assoc';\nimport dissoc from './dissoc';\nimport remove from './remove';\nimport update from './update';\n\n/**\n * Makes a shallow clone of an object, omitting the property at the given path.\n * Note that this copies and flattens prototype properties onto the new object\n * as well. All non-primitive properties are copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.11.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {k: v} -> {k: v}\n * @param {Array} path The path to the value to omit\n * @param {Object} obj The object to clone\n * @return {Object} A new object without the property at path\n * @see R.assocPath\n * @example\n *\n *      R.dissocPath(['a', 'b', 'c'], {a: {b: {c: 42}}}); //=> {a: {b: {}}}\n */\nvar dissocPath = /*#__PURE__*/_curry2(function dissocPath(path, obj) {\n  switch (path.length) {\n    case 0:\n      return obj;\n    case 1:\n      return _isInteger(path[0]) ? remove(path[0], 1, obj) : dissoc(path[0], obj);\n    default:\n      var head = path[0];\n      var tail = Array.prototype.slice.call(path, 1);\n      if (obj[head] == null) {\n        return obj;\n      } else if (_isInteger(path[0])) {\n        return update(head, dissocPath(tail, obj[head]), obj);\n      } else {\n        return assoc(head, dissocPath(tail, obj[head]), obj);\n      }\n  }\n});\nexport default dissocPath;","import _curry2 from './internal/_curry2';\n\n/**\n * Divides two numbers. Equivalent to `a / b`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a / b`.\n * @see R.multiply\n * @example\n *\n *      R.divide(71, 100); //=> 0.71\n *\n *      var half = R.divide(R.__, 2);\n *      half(42); //=> 21\n *\n *      var reciprocal = R.divide(1);\n *      reciprocal(4);   //=> 0.25\n */\nvar divide = /*#__PURE__*/_curry2(function divide(a, b) {\n  return a / b;\n});\nexport default divide;","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XDrop = /*#__PURE__*/function () {\n  function XDrop(n, xf) {\n    this.xf = xf;\n    this.n = n;\n  }\n  XDrop.prototype['@@transducer/init'] = _xfBase.init;\n  XDrop.prototype['@@transducer/result'] = _xfBase.result;\n  XDrop.prototype['@@transducer/step'] = function (result, input) {\n    if (this.n > 0) {\n      this.n -= 1;\n      return result;\n    }\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDrop;\n}();\n\nvar _xdrop = /*#__PURE__*/_curry2(function _xdrop(n, xf) {\n  return new XDrop(n, xf);\n});\nexport default _xdrop;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xdrop from './internal/_xdrop';\nimport slice from './slice';\n\n/**\n * Returns all but the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `drop` method).\n *\n * Dispatches to the `drop` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*} A copy of list without the first `n` elements\n * @see R.take, R.transduce, R.dropLast, R.dropWhile\n * @example\n *\n *      R.drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.drop(2, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.drop(3, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(4, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(3, 'ramda');               //=> 'da'\n */\nvar drop = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['drop'], _xdrop, function drop(n, xs) {\n  return slice(Math.max(0, n), Infinity, xs);\n}));\nexport default drop;","import _curry2 from './_curry2';\nimport _reduced from './_reduced';\nimport _xfBase from './_xfBase';\n\nvar XTake = /*#__PURE__*/function () {\n  function XTake(n, xf) {\n    this.xf = xf;\n    this.n = n;\n    this.i = 0;\n  }\n  XTake.prototype['@@transducer/init'] = _xfBase.init;\n  XTake.prototype['@@transducer/result'] = _xfBase.result;\n  XTake.prototype['@@transducer/step'] = function (result, input) {\n    this.i += 1;\n    var ret = this.n === 0 ? result : this.xf['@@transducer/step'](result, input);\n    return this.n >= 0 && this.i >= this.n ? _reduced(ret) : ret;\n  };\n\n  return XTake;\n}();\n\nvar _xtake = /*#__PURE__*/_curry2(function _xtake(n, xf) {\n  return new XTake(n, xf);\n});\nexport default _xtake;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xtake from './internal/_xtake';\nimport slice from './slice';\n\n/**\n * Returns the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `take` method).\n *\n * Dispatches to the `take` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*}\n * @see R.drop\n * @example\n *\n *      R.take(1, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.take(2, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.take(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(3, 'ramda');               //=> 'ram'\n *\n *      var personnel = [\n *        'Dave Brubeck',\n *        'Paul Desmond',\n *        'Eugene Wright',\n *        'Joe Morello',\n *        'Gerry Mulligan',\n *        'Bob Bates',\n *        'Joe Dodge',\n *        'Ron Crotty'\n *      ];\n *\n *      var takeFive = R.take(5);\n *      takeFive(personnel);\n *      //=> ['Dave Brubeck', 'Paul Desmond', 'Eugene Wright', 'Joe Morello', 'Gerry Mulligan']\n * @symb R.take(-1, [a, b]) = [a, b]\n * @symb R.take(0, [a, b]) = []\n * @symb R.take(1, [a, b]) = [a]\n * @symb R.take(2, [a, b]) = [a, b]\n */\nvar take = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['take'], _xtake, function take(n, xs) {\n  return slice(0, n < 0 ? Infinity : n, xs);\n}));\nexport default take;","import take from '../take';\n\nexport default function dropLast(n, xs) {\n  return take(n < xs.length ? xs.length - n : 0, xs);\n}","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XDropLast = /*#__PURE__*/function () {\n  function XDropLast(n, xf) {\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n  XDropLast.prototype['@@transducer/init'] = _xfBase.init;\n  XDropLast.prototype['@@transducer/result'] = function (result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XDropLast.prototype['@@transducer/step'] = function (result, input) {\n    if (this.full) {\n      result = this.xf['@@transducer/step'](result, this.acc[this.pos]);\n    }\n    this.store(input);\n    return result;\n  };\n  XDropLast.prototype.store = function (input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n\n  return XDropLast;\n}();\n\nvar _xdropLast = /*#__PURE__*/_curry2(function _xdropLast(n, xf) {\n  return new XDropLast(n, xf);\n});\nexport default _xdropLast;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _dropLast from './internal/_dropLast';\nimport _xdropLast from './internal/_xdropLast';\n\n/**\n * Returns a list containing all but the last `n` elements of the given `list`.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements of `list` to skip.\n * @param {Array} list The list of elements to consider.\n * @return {Array} A copy of the list with only the first `list.length - n` elements\n * @see R.takeLast, R.drop, R.dropWhile, R.dropLastWhile\n * @example\n *\n *      R.dropLast(1, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.dropLast(2, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.dropLast(3, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(4, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(3, 'ramda');               //=> 'ra'\n */\nvar dropLast = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xdropLast, _dropLast));\nexport default dropLast;","import slice from '../slice';\n\nexport default function dropLastWhile(pred, xs) {\n  var idx = xs.length - 1;\n  while (idx >= 0 && pred(xs[idx])) {\n    idx -= 1;\n  }\n  return slice(0, idx + 1, xs);\n}","import _curry2 from './_curry2';\nimport _reduce from './_reduce';\nimport _xfBase from './_xfBase';\n\nvar XDropLastWhile = /*#__PURE__*/function () {\n  function XDropLastWhile(fn, xf) {\n    this.f = fn;\n    this.retained = [];\n    this.xf = xf;\n  }\n  XDropLastWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XDropLastWhile.prototype['@@transducer/result'] = function (result) {\n    this.retained = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XDropLastWhile.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.retain(result, input) : this.flush(result, input);\n  };\n  XDropLastWhile.prototype.flush = function (result, input) {\n    result = _reduce(this.xf['@@transducer/step'], result, this.retained);\n    this.retained = [];\n    return this.xf['@@transducer/step'](result, input);\n  };\n  XDropLastWhile.prototype.retain = function (result, input) {\n    this.retained.push(input);\n    return result;\n  };\n\n  return XDropLastWhile;\n}();\n\nvar _xdropLastWhile = /*#__PURE__*/_curry2(function _xdropLastWhile(fn, xf) {\n  return new XDropLastWhile(fn, xf);\n});\nexport default _xdropLastWhile;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _dropLastWhile from './internal/_dropLastWhile';\nimport _xdropLastWhile from './internal/_xdropLastWhile';\n\n/**\n * Returns a new list excluding all the tailing elements of a given list which\n * satisfy the supplied predicate function. It passes each value from the right\n * to the supplied predicate function, skipping elements until the predicate\n * function returns a `falsy` value. The predicate function is applied to one argument:\n * *(value)*.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} predicate The function to be called on each element\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array without any trailing elements that return `falsy` values from the `predicate`.\n * @see R.takeLastWhile, R.addIndex, R.drop, R.dropWhile\n * @example\n *\n *      var lteThree = x => x <= 3;\n *\n *      R.dropLastWhile(lteThree, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3, 4]\n *\n *      R.dropLastWhile(x => x !== 'd' , 'Ramda'); //=> 'Ramd'\n */\nvar dropLastWhile = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xdropLastWhile, _dropLastWhile));\nexport default dropLastWhile;","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XDropRepeatsWith = /*#__PURE__*/function () {\n  function XDropRepeatsWith(pred, xf) {\n    this.xf = xf;\n    this.pred = pred;\n    this.lastValue = undefined;\n    this.seenFirstValue = false;\n  }\n\n  XDropRepeatsWith.prototype['@@transducer/init'] = _xfBase.init;\n  XDropRepeatsWith.prototype['@@transducer/result'] = _xfBase.result;\n  XDropRepeatsWith.prototype['@@transducer/step'] = function (result, input) {\n    var sameAsLast = false;\n    if (!this.seenFirstValue) {\n      this.seenFirstValue = true;\n    } else if (this.pred(this.lastValue, input)) {\n      sameAsLast = true;\n    }\n    this.lastValue = input;\n    return sameAsLast ? result : this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDropRepeatsWith;\n}();\n\nvar _xdropRepeatsWith = /*#__PURE__*/_curry2(function _xdropRepeatsWith(pred, xf) {\n  return new XDropRepeatsWith(pred, xf);\n});\nexport default _xdropRepeatsWith;","import _curry2 from './internal/_curry2';\nimport _isString from './internal/_isString';\n\n/**\n * Returns the nth element of the given list or string. If n is negative the\n * element at index length + n is returned.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> a | Undefined\n * @sig Number -> String -> String\n * @param {Number} offset\n * @param {*} list\n * @return {*}\n * @example\n *\n *      var list = ['foo', 'bar', 'baz', 'quux'];\n *      R.nth(1, list); //=> 'bar'\n *      R.nth(-1, list); //=> 'quux'\n *      R.nth(-99, list); //=> undefined\n *\n *      R.nth(2, 'abc'); //=> 'c'\n *      R.nth(3, 'abc'); //=> ''\n * @symb R.nth(-1, [a, b, c]) = c\n * @symb R.nth(0, [a, b, c]) = a\n * @symb R.nth(1, [a, b, c]) = b\n */\nvar nth = /*#__PURE__*/_curry2(function nth(offset, list) {\n  var idx = offset < 0 ? list.length + offset : offset;\n  return _isString(list) ? list.charAt(idx) : list[idx];\n});\nexport default nth;","import nth from './nth';\n\n/**\n * Returns the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.init, R.head, R.tail\n * @example\n *\n *      R.last(['fi', 'fo', 'fum']); //=> 'fum'\n *      R.last([]); //=> undefined\n *\n *      R.last('abc'); //=> 'c'\n *      R.last(''); //=> ''\n */\nvar last = /*#__PURE__*/nth(-1);\nexport default last;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xdropRepeatsWith from './internal/_xdropRepeatsWith';\nimport last from './last';\n\n/**\n * Returns a new list without any consecutively repeating elements. Equality is\n * determined by applying the supplied predicate to each pair of consecutive elements. The\n * first element in a series of equal elements will be preserved.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig ((a, a) -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} `list` without repeating elements.\n * @see R.transduce\n * @example\n *\n *      var l = [1, -1, 1, 3, 4, -4, -4, -5, 5, 3, 3];\n *      R.dropRepeatsWith(R.eqBy(Math.abs), l); //=> [1, 3, 4, -5, 3]\n */\nvar dropRepeatsWith = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xdropRepeatsWith, function dropRepeatsWith(pred, list) {\n  var result = [];\n  var idx = 1;\n  var len = list.length;\n  if (len !== 0) {\n    result[0] = list[0];\n    while (idx < len) {\n      if (!pred(last(result), list[idx])) {\n        result[result.length] = list[idx];\n      }\n      idx += 1;\n    }\n  }\n  return result;\n}));\nexport default dropRepeatsWith;","import _curry1 from './internal/_curry1';\nimport _dispatchable from './internal/_dispatchable';\nimport _xdropRepeatsWith from './internal/_xdropRepeatsWith';\nimport dropRepeatsWith from './dropRepeatsWith';\nimport equals from './equals';\n\n/**\n * Returns a new list without any consecutively repeating elements.\n * [`R.equals`](#equals) is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig [a] -> [a]\n * @param {Array} list The array to consider.\n * @return {Array} `list` without repeating elements.\n * @see R.transduce\n * @example\n *\n *     R.dropRepeats([1, 1, 1, 2, 3, 4, 4, 2, 2]); //=> [1, 2, 3, 4, 2]\n */\nvar dropRepeats = /*#__PURE__*/_curry1( /*#__PURE__*/_dispatchable([], /*#__PURE__*/_xdropRepeatsWith(equals), /*#__PURE__*/dropRepeatsWith(equals)));\nexport default dropRepeats;","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XDropWhile = /*#__PURE__*/function () {\n  function XDropWhile(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XDropWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XDropWhile.prototype['@@transducer/result'] = _xfBase.result;\n  XDropWhile.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f) {\n      if (this.f(input)) {\n        return result;\n      }\n      this.f = null;\n    }\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDropWhile;\n}();\n\nvar _xdropWhile = /*#__PURE__*/_curry2(function _xdropWhile(f, xf) {\n  return new XDropWhile(f, xf);\n});\nexport default _xdropWhile;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xdropWhile from './internal/_xdropWhile';\nimport slice from './slice';\n\n/**\n * Returns a new list excluding the leading elements of a given list which\n * satisfy the supplied predicate function. It passes each value to the supplied\n * predicate function, skipping elements while the predicate function returns\n * `true`. The predicate function is applied to one argument: *(value)*.\n *\n * Dispatches to the `dropWhile` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.takeWhile, R.transduce, R.addIndex\n * @example\n *\n *      var lteTwo = x => x <= 2;\n *\n *      R.dropWhile(lteTwo, [1, 2, 3, 4, 3, 2, 1]); //=> [3, 4, 3, 2, 1]\n *\n *      R.dropWhile(x => x !== 'd' , 'Ramda'); //=> 'da'\n */\nvar dropWhile = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['dropWhile'], _xdropWhile, function dropWhile(pred, xs) {\n  var idx = 0;\n  var len = xs.length;\n  while (idx < len && pred(xs[idx])) {\n    idx += 1;\n  }\n  return slice(idx, Infinity, xs);\n}));\nexport default dropWhile;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns `true` if one or both of its arguments are `true`. Returns `false`\n * if both arguments are `false`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {Any} a\n * @param {Any} b\n * @return {Any} the first argument if truthy, otherwise the second argument.\n * @see R.either\n * @example\n *\n *      R.or(true, true); //=> true\n *      R.or(true, false); //=> true\n *      R.or(false, true); //=> true\n *      R.or(false, false); //=> false\n */\nvar or = /*#__PURE__*/_curry2(function or(a, b) {\n  return a || b;\n});\nexport default or;","import _curry2 from './internal/_curry2';\nimport _isFunction from './internal/_isFunction';\nimport lift from './lift';\nimport or from './or';\n\n/**\n * A function wrapping calls to the two functions in an `||` operation,\n * returning the result of the first function if it is truth-y and the result\n * of the second function otherwise. Note that this is short-circuited,\n * meaning that the second function will not be invoked if the first returns a\n * truth-y value.\n *\n * In addition to functions, `R.either` also accepts any fantasy-land compatible\n * applicative functor.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n * @param {Function} f a predicate\n * @param {Function} g another predicate\n * @return {Function} a function that applies its arguments to `f` and `g` and `||`s their outputs together.\n * @see R.or\n * @example\n *\n *      var gt10 = x => x > 10;\n *      var even = x => x % 2 === 0;\n *      var f = R.either(gt10, even);\n *      f(101); //=> true\n *      f(8); //=> true\n */\nvar either = /*#__PURE__*/_curry2(function either(f, g) {\n  return _isFunction(f) ? function _either() {\n    return f.apply(this, arguments) || g.apply(this, arguments);\n  } : lift(or)(f, g);\n});\nexport default either;","import _curry1 from './internal/_curry1';\nimport _isArguments from './internal/_isArguments';\nimport _isArray from './internal/_isArray';\nimport _isObject from './internal/_isObject';\nimport _isString from './internal/_isString';\n\n/**\n * Returns the empty value of its argument's type. Ramda defines the empty\n * value of Array (`[]`), Object (`{}`), String (`''`), and Arguments. Other\n * types are supported if they define `<Type>.empty`,\n * `<Type>.prototype.empty` or implement the\n * [FantasyLand Monoid spec](https://github.com/fantasyland/fantasy-land#monoid).\n *\n * Dispatches to the `empty` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> a\n * @param {*} x\n * @return {*}\n * @example\n *\n *      R.empty(Just(42));      //=> Nothing()\n *      R.empty([1, 2, 3]);     //=> []\n *      R.empty('unicorns');    //=> ''\n *      R.empty({x: 1, y: 2});  //=> {}\n */\nvar empty = /*#__PURE__*/_curry1(function empty(x) {\n  return x != null && typeof x['fantasy-land/empty'] === 'function' ? x['fantasy-land/empty']() : x != null && x.constructor != null && typeof x.constructor['fantasy-land/empty'] === 'function' ? x.constructor['fantasy-land/empty']() : x != null && typeof x.empty === 'function' ? x.empty() : x != null && x.constructor != null && typeof x.constructor.empty === 'function' ? x.constructor.empty() : _isArray(x) ? [] : _isString(x) ? '' : _isObject(x) ? {} : _isArguments(x) ? function () {\n    return arguments;\n  }() :\n  // else\n  void 0;\n});\nexport default empty;","import _curry2 from './internal/_curry2';\nimport drop from './drop';\n\n/**\n * Returns a new list containing the last `n` elements of the given list.\n * If `n > list.length`, returns a list of `list.length` elements.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements to return.\n * @param {Array} xs The collection to consider.\n * @return {Array}\n * @see R.dropLast\n * @example\n *\n *      R.takeLast(1, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.takeLast(2, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.takeLast(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.takeLast(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.takeLast(3, 'ramda');               //=> 'mda'\n */\nvar takeLast = /*#__PURE__*/_curry2(function takeLast(n, xs) {\n  return drop(n >= 0 ? xs.length - n : 0, xs);\n});\nexport default takeLast;","import _curry2 from './internal/_curry2';\nimport equals from './equals';\nimport takeLast from './takeLast';\n\n/**\n * Checks if a list ends with the provided values\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category List\n * @sig [a] -> Boolean\n * @sig String -> Boolean\n * @param {*} suffix\n * @param {*} list\n * @return {Boolean}\n * @example\n *\n *      R.endsWith('c', 'abc')                //=> true\n *      R.endsWith('b', 'abc')                //=> false\n *      R.endsWith(['c'], ['a', 'b', 'c'])    //=> true\n *      R.endsWith(['b'], ['a', 'b', 'c'])    //=> false\n */\nvar endsWith = /*#__PURE__*/_curry2(function (suffix, list) {\n  return equals(takeLast(suffix.length, list), suffix);\n});\nexport default endsWith;","import _curry3 from './internal/_curry3';\nimport equals from './equals';\n\n/**\n * Takes a function and two values in its domain and returns `true` if the\n * values map to the same value in the codomain; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Relation\n * @sig (a -> b) -> a -> a -> Boolean\n * @param {Function} f\n * @param {*} x\n * @param {*} y\n * @return {Boolean}\n * @example\n *\n *      R.eqBy(Math.abs, 5, -5); //=> true\n */\nvar eqBy = /*#__PURE__*/_curry3(function eqBy(f, x, y) {\n  return equals(f(x), f(y));\n});\nexport default eqBy;","import _curry3 from './internal/_curry3';\nimport equals from './equals';\n\n/**\n * Reports whether two objects have the same value, in [`R.equals`](#equals)\n * terms, for the specified property. Useful as a curried predicate.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig k -> {k: v} -> {k: v} -> Boolean\n * @param {String} prop The name of the property to compare\n * @param {Object} obj1\n * @param {Object} obj2\n * @return {Boolean}\n *\n * @example\n *\n *      var o1 = { a: 1, b: 2, c: 3, d: 4 };\n *      var o2 = { a: 10, b: 20, c: 3, d: 40 };\n *      R.eqProps('a', o1, o2); //=> false\n *      R.eqProps('c', o1, o2); //=> true\n */\nvar eqProps = /*#__PURE__*/_curry3(function eqProps(prop, obj1, obj2) {\n  return equals(obj1[prop], obj2[prop]);\n});\nexport default eqProps;","import _curry2 from './internal/_curry2';\n\n/**\n * Creates a new object by recursively evolving a shallow copy of `object`,\n * according to the `transformation` functions. All non-primitive properties\n * are copied by reference.\n *\n * A `transformation` function will not be invoked if its corresponding key\n * does not exist in the evolved object.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {k: (v -> v)} -> {k: v} -> {k: v}\n * @param {Object} transformations The object specifying transformation functions to apply\n *        to the object.\n * @param {Object} object The object to be transformed.\n * @return {Object} The transformed object.\n * @example\n *\n *      var tomato  = {firstName: '  Tomato ', data: {elapsed: 100, remaining: 1400}, id:123};\n *      var transformations = {\n *        firstName: R.trim,\n *        lastName: R.trim, // Will not get invoked.\n *        data: {elapsed: R.add(1), remaining: R.add(-1)}\n *      };\n *      R.evolve(transformations, tomato); //=> {firstName: 'Tomato', data: {elapsed: 101, remaining: 1399}, id:123}\n */\nvar evolve = /*#__PURE__*/_curry2(function evolve(transformations, object) {\n  var result = {};\n  var transformation, key, type;\n  for (key in object) {\n    transformation = transformations[key];\n    type = typeof transformation;\n    result[key] = type === 'function' ? transformation(object[key]) : transformation && type === 'object' ? evolve(transformation, object[key]) : object[key];\n  }\n  return result;\n});\nexport default evolve;","import _curry2 from './_curry2';\nimport _reduced from './_reduced';\nimport _xfBase from './_xfBase';\n\nvar XFind = /*#__PURE__*/function () {\n  function XFind(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.found = false;\n  }\n  XFind.prototype['@@transducer/init'] = _xfBase.init;\n  XFind.prototype['@@transducer/result'] = function (result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, void 0);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XFind.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, input));\n    }\n    return result;\n  };\n\n  return XFind;\n}();\n\nvar _xfind = /*#__PURE__*/_curry2(function _xfind(f, xf) {\n  return new XFind(f, xf);\n});\nexport default _xfind;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xfind from './internal/_xfind';\n\n/**\n * Returns the first element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Dispatches to the `find` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n *        desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.find(R.propEq('a', 2))(xs); //=> {a: 2}\n *      R.find(R.propEq('a', 4))(xs); //=> undefined\n */\nvar find = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['find'], _xfind, function find(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n    idx += 1;\n  }\n}));\nexport default find;","import _curry2 from './_curry2';\nimport _reduced from './_reduced';\nimport _xfBase from './_xfBase';\n\nvar XFindIndex = /*#__PURE__*/function () {\n  function XFindIndex(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.idx = -1;\n    this.found = false;\n  }\n  XFindIndex.prototype['@@transducer/init'] = _xfBase.init;\n  XFindIndex.prototype['@@transducer/result'] = function (result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, -1);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XFindIndex.prototype['@@transducer/step'] = function (result, input) {\n    this.idx += 1;\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, this.idx));\n    }\n    return result;\n  };\n\n  return XFindIndex;\n}();\n\nvar _xfindIndex = /*#__PURE__*/_curry2(function _xfindIndex(f, xf) {\n  return new XFindIndex(f, xf);\n});\nexport default _xfindIndex;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xfindIndex from './internal/_xfindIndex';\n\n/**\n * Returns the index of the first element of the list which matches the\n * predicate, or `-1` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Number} The index of the element found, or `-1`.\n * @see R.transduce\n * @example\n *\n *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.findIndex(R.propEq('a', 2))(xs); //=> 1\n *      R.findIndex(R.propEq('a', 4))(xs); //=> -1\n */\nvar findIndex = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xfindIndex, function findIndex(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return idx;\n    }\n    idx += 1;\n  }\n  return -1;\n}));\nexport default findIndex;","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XFindLast = /*#__PURE__*/function () {\n  function XFindLast(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XFindLast.prototype['@@transducer/init'] = _xfBase.init;\n  XFindLast.prototype['@@transducer/result'] = function (result) {\n    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.last));\n  };\n  XFindLast.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.last = input;\n    }\n    return result;\n  };\n\n  return XFindLast;\n}();\n\nvar _xfindLast = /*#__PURE__*/_curry2(function _xfindLast(f, xf) {\n  return new XFindLast(f, xf);\n});\nexport default _xfindLast;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xfindLast from './internal/_xfindLast';\n\n/**\n * Returns the last element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\n *      R.findLast(R.propEq('a', 1))(xs); //=> {a: 1, b: 1}\n *      R.findLast(R.propEq('a', 4))(xs); //=> undefined\n */\nvar findLast = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xfindLast, function findLast(fn, list) {\n  var idx = list.length - 1;\n  while (idx >= 0) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n    idx -= 1;\n  }\n}));\nexport default findLast;","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XFindLastIndex = /*#__PURE__*/function () {\n  function XFindLastIndex(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.idx = -1;\n    this.lastIdx = -1;\n  }\n  XFindLastIndex.prototype['@@transducer/init'] = _xfBase.init;\n  XFindLastIndex.prototype['@@transducer/result'] = function (result) {\n    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.lastIdx));\n  };\n  XFindLastIndex.prototype['@@transducer/step'] = function (result, input) {\n    this.idx += 1;\n    if (this.f(input)) {\n      this.lastIdx = this.idx;\n    }\n    return result;\n  };\n\n  return XFindLastIndex;\n}();\n\nvar _xfindLastIndex = /*#__PURE__*/_curry2(function _xfindLastIndex(f, xf) {\n  return new XFindLastIndex(f, xf);\n});\nexport default _xfindLastIndex;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xfindLastIndex from './internal/_xfindLastIndex';\n\n/**\n * Returns the index of the last element of the list which matches the\n * predicate, or `-1` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Number} The index of the element found, or `-1`.\n * @see R.transduce\n * @example\n *\n *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\n *      R.findLastIndex(R.propEq('a', 1))(xs); //=> 1\n *      R.findLastIndex(R.propEq('a', 4))(xs); //=> -1\n */\nvar findLastIndex = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xfindLastIndex, function findLastIndex(fn, list) {\n  var idx = list.length - 1;\n  while (idx >= 0) {\n    if (fn(list[idx])) {\n      return idx;\n    }\n    idx -= 1;\n  }\n  return -1;\n}));\nexport default findLastIndex;","import _curry1 from './internal/_curry1';\nimport _makeFlat from './internal/_makeFlat';\n\n/**\n * Returns a new list by pulling every item out of it (and all its sub-arrays)\n * and putting them in a new array, depth-first.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b]\n * @param {Array} list The array to consider.\n * @return {Array} The flattened list.\n * @see R.unnest\n * @example\n *\n *      R.flatten([1, 2, [3, 4], 5, [6, [7, 8, [9, [10, 11], 12]]]]);\n *      //=> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n */\nvar flatten = /*#__PURE__*/_curry1( /*#__PURE__*/_makeFlat(true));\nexport default flatten;","import _curry1 from './internal/_curry1';\nimport curryN from './curryN';\n\n/**\n * Returns a new function much like the supplied one, except that the first two\n * arguments' order is reversed.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((a, b, c, ...) -> z) -> (b -> a -> c -> ... -> z)\n * @param {Function} fn The function to invoke with its first two parameters reversed.\n * @return {*} The result of invoking `fn` with its first two parameters' order reversed.\n * @example\n *\n *      var mergeThree = (a, b, c) => [].concat(a, b, c);\n *\n *      mergeThree(1, 2, 3); //=> [1, 2, 3]\n *\n *      R.flip(mergeThree)(1, 2, 3); //=> [2, 1, 3]\n * @symb R.flip(f)(a, b, c) = f(b, a, c)\n */\nvar flip = /*#__PURE__*/_curry1(function flip(fn) {\n  return curryN(fn.length, function (a, b) {\n    var args = Array.prototype.slice.call(arguments, 0);\n    args[0] = b;\n    args[1] = a;\n    return fn.apply(this, args);\n  });\n});\nexport default flip;","import _checkForMethod from './internal/_checkForMethod';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Iterate over an input `list`, calling a provided function `fn` for each\n * element in the list.\n *\n * `fn` receives one argument: *(value)*.\n *\n * Note: `R.forEach` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.forEach` method. For more\n * details on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#Description\n *\n * Also note that, unlike `Array.prototype.forEach`, Ramda's `forEach` returns\n * the original array. In some libraries this function is named `each`.\n *\n * Dispatches to the `forEach` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> *) -> [a] -> [a]\n * @param {Function} fn The function to invoke. Receives one argument, `value`.\n * @param {Array} list The list to iterate over.\n * @return {Array} The original list.\n * @see R.addIndex\n * @example\n *\n *      var printXPlusFive = x => console.log(x + 5);\n *      R.forEach(printXPlusFive, [1, 2, 3]); //=> [1, 2, 3]\n *      // logs 6\n *      // logs 7\n *      // logs 8\n * @symb R.forEach(f, [a, b, c]) = [a, b, c]\n */\nvar forEach = /*#__PURE__*/_curry2( /*#__PURE__*/_checkForMethod('forEach', function forEach(fn, list) {\n  var len = list.length;\n  var idx = 0;\n  while (idx < len) {\n    fn(list[idx]);\n    idx += 1;\n  }\n  return list;\n}));\nexport default forEach;","import _curry2 from './internal/_curry2';\nimport keys from './keys';\n\n/**\n * Iterate over an input `object`, calling a provided function `fn` for each\n * key and value in the object.\n *\n * `fn` receives three argument: *(value, key, obj)*.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Object\n * @sig ((a, String, StrMap a) -> Any) -> StrMap a -> StrMap a\n * @param {Function} fn The function to invoke. Receives three argument, `value`, `key`, `obj`.\n * @param {Object} obj The object to iterate over.\n * @return {Object} The original object.\n * @example\n *\n *      var printKeyConcatValue = (value, key) => console.log(key + ':' + value);\n *      R.forEachObjIndexed(printKeyConcatValue, {x: 1, y: 2}); //=> {x: 1, y: 2}\n *      // logs x:1\n *      // logs y:2\n * @symb R.forEachObjIndexed(f, {x: a, y: b}) = {x: a, y: b}\n */\nvar forEachObjIndexed = /*#__PURE__*/_curry2(function forEachObjIndexed(fn, obj) {\n  var keyList = keys(obj);\n  var idx = 0;\n  while (idx < keyList.length) {\n    var key = keyList[idx];\n    fn(obj[key], key, obj);\n    idx += 1;\n  }\n  return obj;\n});\nexport default forEachObjIndexed;","import _curry1 from './internal/_curry1';\n\n/**\n * Creates a new object from a list key-value pairs. If a key appears in\n * multiple pairs, the rightmost pair is included in the object.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [[k,v]] -> {k: v}\n * @param {Array} pairs An array of two-element arrays that will be the keys and values of the output object.\n * @return {Object} The object made by pairing up `keys` and `values`.\n * @see R.toPairs, R.pair\n * @example\n *\n *      R.fromPairs([['a', 1], ['b', 2], ['c', 3]]); //=> {a: 1, b: 2, c: 3}\n */\nvar fromPairs = /*#__PURE__*/_curry1(function fromPairs(pairs) {\n  var result = {};\n  var idx = 0;\n  while (idx < pairs.length) {\n    result[pairs[idx][0]] = pairs[idx][1];\n    idx += 1;\n  }\n  return result;\n});\nexport default fromPairs;","import _checkForMethod from './internal/_checkForMethod';\nimport _curry2 from './internal/_curry2';\nimport reduceBy from './reduceBy';\n\n/**\n * Splits a list into sub-lists stored in an object, based on the result of\n * calling a String-returning function on each element, and grouping the\n * results according to values returned.\n *\n * Dispatches to the `groupBy` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> String) -> [a] -> {String: [a]}\n * @param {Function} fn Function :: a -> String\n * @param {Array} list The array to group\n * @return {Object} An object with the output of `fn` for keys, mapped to arrays of elements\n *         that produced that key when passed to `fn`.\n * @see R.transduce\n * @example\n *\n *      var byGrade = R.groupBy(function(student) {\n *        var score = student.score;\n *        return score < 65 ? 'F' :\n *               score < 70 ? 'D' :\n *               score < 80 ? 'C' :\n *               score < 90 ? 'B' : 'A';\n *      });\n *      var students = [{name: 'Abby', score: 84},\n *                      {name: 'Eddy', score: 58},\n *                      // ...\n *                      {name: 'Jack', score: 69}];\n *      byGrade(students);\n *      // {\n *      //   'A': [{name: 'Dianne', score: 99}],\n *      //   'B': [{name: 'Abby', score: 84}]\n *      //   // ...,\n *      //   'F': [{name: 'Eddy', score: 58}]\n *      // }\n */\nvar groupBy = /*#__PURE__*/_curry2( /*#__PURE__*/_checkForMethod('groupBy', /*#__PURE__*/reduceBy(function (acc, item) {\n  if (acc == null) {\n    acc = [];\n  }\n  acc.push(item);\n  return acc;\n}, null)));\nexport default groupBy;","import _curry2 from './internal/_curry2';\n\n/**\n * Takes a list and returns a list of lists where each sublist's elements are\n * all satisfied pairwise comparison according to the provided function.\n * Only adjacent elements are passed to the comparison function.\n *\n * @func\n * @memberOf R\n * @since v0.21.0\n * @category List\n * @sig ((a, a) → Boolean) → [a] → [[a]]\n * @param {Function} fn Function for determining whether two given (adjacent)\n *        elements should be in the same group\n * @param {Array} list The array to group. Also accepts a string, which will be\n *        treated as a list of characters.\n * @return {List} A list that contains sublists of elements,\n *         whose concatenations are equal to the original list.\n * @example\n *\n * R.groupWith(R.equals, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0], [1, 1], [2], [3], [5], [8], [13], [21]]\n *\n * R.groupWith((a, b) => a + 1 === b, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0, 1], [1, 2, 3], [5], [8], [13], [21]]\n *\n * R.groupWith((a, b) => a % 2 === b % 2, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0], [1, 1], [2], [3, 5], [8], [13, 21]]\n *\n * R.groupWith(R.eqBy(isVowel), 'aestiou')\n * //=> ['ae', 'st', 'iou']\n */\nvar groupWith = /*#__PURE__*/_curry2(function (fn, list) {\n  var res = [];\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    var nextidx = idx + 1;\n    while (nextidx < len && fn(list[nextidx - 1], list[nextidx])) {\n      nextidx += 1;\n    }\n    res.push(list.slice(idx, nextidx));\n    idx = nextidx;\n  }\n  return res;\n});\nexport default groupWith;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns `true` if the first argument is greater than the second; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @see R.lt\n * @example\n *\n *      R.gt(2, 1); //=> true\n *      R.gt(2, 2); //=> false\n *      R.gt(2, 3); //=> false\n *      R.gt('a', 'z'); //=> false\n *      R.gt('z', 'a'); //=> true\n */\nvar gt = /*#__PURE__*/_curry2(function gt(a, b) {\n  return a > b;\n});\nexport default gt;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns `true` if the first argument is greater than or equal to the second;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {Number} a\n * @param {Number} b\n * @return {Boolean}\n * @see R.lte\n * @example\n *\n *      R.gte(2, 1); //=> true\n *      R.gte(2, 2); //=> true\n *      R.gte(2, 3); //=> false\n *      R.gte('a', 'z'); //=> false\n *      R.gte('z', 'a'); //=> true\n */\nvar gte = /*#__PURE__*/_curry2(function gte(a, b) {\n  return a >= b;\n});\nexport default gte;","import _curry2 from './internal/_curry2';\nimport _has from './internal/_has';\n\n/**\n * Returns whether or not an object has an own property with the specified name\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Object\n * @sig s -> {s: x} -> Boolean\n * @param {String} prop The name of the property to check for.\n * @param {Object} obj The object to query.\n * @return {Boolean} Whether the property exists.\n * @example\n *\n *      var hasName = R.has('name');\n *      hasName({name: 'alice'});   //=> true\n *      hasName({name: 'bob'});     //=> true\n *      hasName({});                //=> false\n *\n *      var point = {x: 0, y: 0};\n *      var pointHas = R.has(R.__, point);\n *      pointHas('x');  //=> true\n *      pointHas('y');  //=> true\n *      pointHas('z');  //=> false\n */\nvar has = /*#__PURE__*/_curry2(_has);\nexport default has;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns whether or not an object or its prototype chain has a property with\n * the specified name\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Object\n * @sig s -> {s: x} -> Boolean\n * @param {String} prop The name of the property to check for.\n * @param {Object} obj The object to query.\n * @return {Boolean} Whether the property exists.\n * @example\n *\n *      function Rectangle(width, height) {\n *        this.width = width;\n *        this.height = height;\n *      }\n *      Rectangle.prototype.area = function() {\n *        return this.width * this.height;\n *      };\n *\n *      var square = new Rectangle(2, 2);\n *      R.hasIn('width', square);  //=> true\n *      R.hasIn('area', square);  //=> true\n */\nvar hasIn = /*#__PURE__*/_curry2(function hasIn(prop, obj) {\n  return prop in obj;\n});\nexport default hasIn;","import nth from './nth';\n\n/**\n * Returns the first element of the given list or string. In some libraries\n * this function is named `first`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {Array|String} list\n * @return {*}\n * @see R.tail, R.init, R.last\n * @example\n *\n *      R.head(['fi', 'fo', 'fum']); //=> 'fi'\n *      R.head([]); //=> undefined\n *\n *      R.head('abc'); //=> 'a'\n *      R.head(''); //=> ''\n */\nvar head = /*#__PURE__*/nth(0);\nexport default head;","export default function _identity(x) {\n  return x;\n}","import _curry1 from './internal/_curry1';\nimport _identity from './internal/_identity';\n\n/**\n * A function that does nothing but return the parameter supplied to it. Good\n * as a default or placeholder function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> a\n * @param {*} x The value to return.\n * @return {*} The input value, `x`.\n * @example\n *\n *      R.identity(1); //=> 1\n *\n *      var obj = {};\n *      R.identity(obj) === obj; //=> true\n * @symb R.identity(a) = a\n */\nvar identity = /*#__PURE__*/_curry1(_identity);\nexport default identity;","import _curry3 from './internal/_curry3';\nimport curryN from './curryN';\n\n/**\n * Creates a function that will process either the `onTrue` or the `onFalse`\n * function depending upon the result of the `condition` predicate.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> *) -> (*... -> *) -> (*... -> *)\n * @param {Function} condition A predicate function\n * @param {Function} onTrue A function to invoke when the `condition` evaluates to a truthy value.\n * @param {Function} onFalse A function to invoke when the `condition` evaluates to a falsy value.\n * @return {Function} A new unary function that will process either the `onTrue` or the `onFalse`\n *                    function depending upon the result of the `condition` predicate.\n * @see R.unless, R.when\n * @example\n *\n *      var incCount = R.ifElse(\n *        R.has('count'),\n *        R.over(R.lensProp('count'), R.inc),\n *        R.assoc('count', 1)\n *      );\n *      incCount({});           //=> { count: 1 }\n *      incCount({ count: 1 }); //=> { count: 2 }\n */\nvar ifElse = /*#__PURE__*/_curry3(function ifElse(condition, onTrue, onFalse) {\n  return curryN(Math.max(condition.length, onTrue.length, onFalse.length), function _ifElse() {\n    return condition.apply(this, arguments) ? onTrue.apply(this, arguments) : onFalse.apply(this, arguments);\n  });\n});\nexport default ifElse;","import add from './add';\n\n/**\n * Increments its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number} n + 1\n * @see R.dec\n * @example\n *\n *      R.inc(42); //=> 43\n */\nvar inc = /*#__PURE__*/add(1);\nexport default inc;","import reduceBy from './reduceBy';\n\n/**\n * Given a function that generates a key, turns a list of objects into an\n * object indexing the objects by the given key. Note that if multiple\n * objects generate the same value for the indexing key only the last value\n * will be included in the generated object.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (a -> String) -> [{k: v}] -> {k: {k: v}}\n * @param {Function} fn Function :: a -> String\n * @param {Array} array The array of objects to index\n * @return {Object} An object indexing each array element by the given property.\n * @example\n *\n *      var list = [{id: 'xyz', title: 'A'}, {id: 'abc', title: 'B'}];\n *      R.indexBy(R.prop('id'), list);\n *      //=> {abc: {id: 'abc', title: 'B'}, xyz: {id: 'xyz', title: 'A'}}\n */\nvar indexBy = /*#__PURE__*/reduceBy(function (acc, elem) {\n  return elem;\n}, null);\nexport default indexBy;","import _curry2 from './internal/_curry2';\nimport _indexOf from './internal/_indexOf';\nimport _isArray from './internal/_isArray';\n\n/**\n * Returns the position of the first occurrence of an item in an array, or -1\n * if the item is not included in the array. [`R.equals`](#equals) is used to\n * determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Number\n * @param {*} target The item to find.\n * @param {Array} xs The array to search in.\n * @return {Number} the index of the target, or -1 if the target is not found.\n * @see R.lastIndexOf\n * @example\n *\n *      R.indexOf(3, [1,2,3,4]); //=> 2\n *      R.indexOf(10, [1,2,3,4]); //=> -1\n */\nvar indexOf = /*#__PURE__*/_curry2(function indexOf(target, xs) {\n  return typeof xs.indexOf === 'function' && !_isArray(xs) ? xs.indexOf(target) : _indexOf(xs, target, 0);\n});\nexport default indexOf;","import slice from './slice';\n\n/**\n * Returns all but the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.last, R.head, R.tail\n * @example\n *\n *      R.init([1, 2, 3]);  //=> [1, 2]\n *      R.init([1, 2]);     //=> [1]\n *      R.init([1]);        //=> []\n *      R.init([]);         //=> []\n *\n *      R.init('abc');  //=> 'ab'\n *      R.init('ab');   //=> 'a'\n *      R.init('a');    //=> ''\n *      R.init('');     //=> ''\n */\nvar init = /*#__PURE__*/slice(0, -1);\nexport default init;","import _containsWith from './internal/_containsWith';\nimport _curry3 from './internal/_curry3';\nimport _filter from './internal/_filter';\n\n/**\n * Takes a predicate `pred`, a list `xs`, and a list `ys`, and returns a list\n * `xs'` comprising each of the elements of `xs` which is equal to one or more\n * elements of `ys` according to `pred`.\n *\n * `pred` must be a binary function expecting an element from each list.\n *\n * `xs`, `ys`, and `xs'` are treated as sets, semantically, so ordering should\n * not be significant, but since `xs'` is ordered the implementation guarantees\n * that its values are in the same order as they appear in `xs`. Duplicates are\n * not removed, so `xs'` may contain duplicates if `xs` contains duplicates.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Relation\n * @sig ((a, b) -> Boolean) -> [a] -> [b] -> [a]\n * @param {Function} pred\n * @param {Array} xs\n * @param {Array} ys\n * @return {Array}\n * @see R.intersection\n * @example\n *\n *      R.innerJoin(\n *        (record, id) => record.id === id,\n *        [{id: 824, name: 'Richie Furay'},\n *         {id: 956, name: 'Dewey Martin'},\n *         {id: 313, name: 'Bruce Palmer'},\n *         {id: 456, name: 'Stephen Stills'},\n *         {id: 177, name: 'Neil Young'}],\n *        [177, 456, 999]\n *      );\n *      //=> [{id: 456, name: 'Stephen Stills'}, {id: 177, name: 'Neil Young'}]\n */\nvar innerJoin = /*#__PURE__*/_curry3(function innerJoin(pred, xs, ys) {\n  return _filter(function (x) {\n    return _containsWith(pred, x, ys);\n  }, xs);\n});\nexport default innerJoin;","import _curry3 from './internal/_curry3';\n\n/**\n * Inserts the supplied element into the list, at the specified `index`. _Note that\n\n * this is not destructive_: it returns a copy of the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.2.2\n * @category List\n * @sig Number -> a -> [a] -> [a]\n * @param {Number} index The position to insert the element\n * @param {*} elt The element to insert into the Array\n * @param {Array} list The list to insert into\n * @return {Array} A new Array with `elt` inserted at `index`.\n * @example\n *\n *      R.insert(2, 'x', [1,2,3,4]); //=> [1,2,'x',3,4]\n */\nvar insert = /*#__PURE__*/_curry3(function insert(idx, elt, list) {\n  idx = idx < list.length && idx >= 0 ? idx : list.length;\n  var result = Array.prototype.slice.call(list, 0);\n  result.splice(idx, 0, elt);\n  return result;\n});\nexport default insert;","import _curry3 from './internal/_curry3';\n\n/**\n * Inserts the sub-list into the list, at the specified `index`. _Note that this is not\n * destructive_: it returns a copy of the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig Number -> [a] -> [a] -> [a]\n * @param {Number} index The position to insert the sub-list\n * @param {Array} elts The sub-list to insert into the Array\n * @param {Array} list The list to insert the sub-list into\n * @return {Array} A new Array with `elts` inserted starting at `index`.\n * @example\n *\n *      R.insertAll(2, ['x','y','z'], [1,2,3,4]); //=> [1,2,'x','y','z',3,4]\n */\nvar insertAll = /*#__PURE__*/_curry3(function insertAll(idx, elts, list) {\n  idx = idx < list.length && idx >= 0 ? idx : list.length;\n  return [].concat(Array.prototype.slice.call(list, 0, idx), elts, Array.prototype.slice.call(list, idx));\n});\nexport default insertAll;","import _contains from './_contains';\n\nvar _Set = /*#__PURE__*/function () {\n  function _Set() {\n    /* globals Set */\n    this._nativeSet = typeof Set === 'function' ? new Set() : null;\n    this._items = {};\n  }\n\n  // until we figure out why jsdoc chokes on this\n  // @param item The item to add to the Set\n  // @returns {boolean} true if the item did not exist prior, otherwise false\n  //\n  _Set.prototype.add = function (item) {\n    return !hasOrAdd(item, true, this);\n  };\n\n  //\n  // @param item The item to check for existence in the Set\n  // @returns {boolean} true if the item exists in the Set, otherwise false\n  //\n  _Set.prototype.has = function (item) {\n    return hasOrAdd(item, false, this);\n  };\n\n  //\n  // Combines the logic for checking whether an item is a member of the set and\n  // for adding a new item to the set.\n  //\n  // @param item       The item to check or add to the Set instance.\n  // @param shouldAdd  If true, the item will be added to the set if it doesn't\n  //                   already exist.\n  // @param set        The set instance to check or add to.\n  // @return {boolean} true if the item already existed, otherwise false.\n  //\n  return _Set;\n}();\n\nfunction hasOrAdd(item, shouldAdd, set) {\n  var type = typeof item;\n  var prevSize, newSize;\n  switch (type) {\n    case 'string':\n    case 'number':\n      // distinguish between +0 and -0\n      if (item === 0 && 1 / item === -Infinity) {\n        if (set._items['-0']) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items['-0'] = true;\n          }\n          return false;\n        }\n      }\n      // these types can all utilise the native Set\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n          set._nativeSet.add(item);\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = {};\n            set._items[type][item] = true;\n          }\n          return false;\n        } else if (item in set._items[type]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][item] = true;\n          }\n          return false;\n        }\n      }\n\n    case 'boolean':\n      // set._items['boolean'] holds a two element array\n      // representing [ falseExists, trueExists ]\n      if (type in set._items) {\n        var bIdx = item ? 1 : 0;\n        if (set._items[type][bIdx]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][bIdx] = true;\n          }\n          return false;\n        }\n      } else {\n        if (shouldAdd) {\n          set._items[type] = item ? [false, true] : [true, false];\n        }\n        return false;\n      }\n\n    case 'function':\n      // compare functions for reference equality\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n          set._nativeSet.add(item);\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = [item];\n          }\n          return false;\n        }\n        if (!_contains(item, set._items[type])) {\n          if (shouldAdd) {\n            set._items[type].push(item);\n          }\n          return false;\n        }\n        return true;\n      }\n\n    case 'undefined':\n      if (set._items[type]) {\n        return true;\n      } else {\n        if (shouldAdd) {\n          set._items[type] = true;\n        }\n        return false;\n      }\n\n    case 'object':\n      if (item === null) {\n        if (!set._items['null']) {\n          if (shouldAdd) {\n            set._items['null'] = true;\n          }\n          return false;\n        }\n        return true;\n      }\n    /* falls through */\n    default:\n      // reduce the search size of heterogeneous sets by creating buckets\n      // for each type.\n      type = Object.prototype.toString.call(item);\n      if (!(type in set._items)) {\n        if (shouldAdd) {\n          set._items[type] = [item];\n        }\n        return false;\n      }\n      // scan through all previously applied items\n      if (!_contains(item, set._items[type])) {\n        if (shouldAdd) {\n          set._items[type].push(item);\n        }\n        return false;\n      }\n      return true;\n  }\n}\n\n// A simple Set type that honours R.equals semantics\nexport default _Set;","import _Set from './internal/_Set';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied function to\n * each list element. Prefers the first item if the supplied function produces\n * the same value on two items. [`R.equals`](#equals) is used for comparison.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> b) -> [a] -> [a]\n * @param {Function} fn A function used to produce a value to use during comparisons.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniqBy(Math.abs, [-1, -5, 2, 10, 1, 2]); //=> [-1, -5, 2, 10]\n */\nvar uniqBy = /*#__PURE__*/_curry2(function uniqBy(fn, list) {\n  var set = new _Set();\n  var result = [];\n  var idx = 0;\n  var appliedItem, item;\n\n  while (idx < list.length) {\n    item = list[idx];\n    appliedItem = fn(item);\n    if (set.add(appliedItem)) {\n      result.push(item);\n    }\n    idx += 1;\n  }\n  return result;\n});\nexport default uniqBy;","import identity from './identity';\nimport uniqBy from './uniqBy';\n\n/**\n * Returns a new list containing only one copy of each element in the original\n * list. [`R.equals`](#equals) is used to determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniq([1, 1, 2, 1]); //=> [1, 2]\n *      R.uniq([1, '1']);     //=> [1, '1']\n *      R.uniq([[42], [42]]); //=> [[42]]\n */\nvar uniq = /*#__PURE__*/uniqBy(identity);\nexport default uniq;","import _contains from './internal/_contains';\nimport _curry2 from './internal/_curry2';\nimport _filter from './internal/_filter';\nimport flip from './flip';\nimport uniq from './uniq';\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of those\n * elements common to both lists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The list of elements found in both `list1` and `list2`.\n * @see R.innerJoin\n * @example\n *\n *      R.intersection([1,2,3,4], [7,6,5,4,3]); //=> [4, 3]\n */\nvar intersection = /*#__PURE__*/_curry2(function intersection(list1, list2) {\n  var lookupList, filteredList;\n  if (list1.length > list2.length) {\n    lookupList = list1;\n    filteredList = list2;\n  } else {\n    lookupList = list2;\n    filteredList = list1;\n  }\n  return uniq(_filter(flip(_contains)(lookupList), filteredList));\n});\nexport default intersection;","import _checkForMethod from './internal/_checkForMethod';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Creates a new list with the separator interposed between elements.\n *\n * Dispatches to the `intersperse` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} separator The element to add to the list.\n * @param {Array} list The list to be interposed.\n * @return {Array} The new list.\n * @example\n *\n *      R.intersperse('n', ['ba', 'a', 'a']); //=> ['ba', 'n', 'a', 'n', 'a']\n */\nvar intersperse = /*#__PURE__*/_curry2( /*#__PURE__*/_checkForMethod('intersperse', function intersperse(separator, list) {\n  var out = [];\n  var idx = 0;\n  var length = list.length;\n  while (idx < length) {\n    if (idx === length - 1) {\n      out.push(list[idx]);\n    } else {\n      out.push(list[idx], separator);\n    }\n    idx += 1;\n  }\n  return out;\n}));\nexport default intersperse;","import _has from './_has';\n\n// Based on https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\nexport default function _objectAssign(target) {\n  if (target == null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  var idx = 1;\n  var length = arguments.length;\n  while (idx < length) {\n    var source = arguments[idx];\n    if (source != null) {\n      for (var nextKey in source) {\n        if (_has(nextKey, source)) {\n          output[nextKey] = source[nextKey];\n        }\n      }\n    }\n    idx += 1;\n  }\n  return output;\n}","import _objectAssign from './_objectAssign';\n\nexport default typeof Object.assign === 'function' ? Object.assign : _objectAssign;","import _curry2 from './internal/_curry2';\n\n/**\n * Creates an object containing a single key:value pair.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Object\n * @sig String -> a -> {String:a}\n * @param {String} key\n * @param {*} val\n * @return {Object}\n * @see R.pair\n * @example\n *\n *      var matchPhrases = R.compose(\n *        R.objOf('must'),\n *        R.map(R.objOf('match_phrase'))\n *      );\n *      matchPhrases(['foo', 'bar', 'baz']); //=> {must: [{match_phrase: 'foo'}, {match_phrase: 'bar'}, {match_phrase: 'baz'}]}\n */\nvar objOf = /*#__PURE__*/_curry2(function objOf(key, val) {\n  var obj = {};\n  obj[key] = val;\n  return obj;\n});\nexport default objOf;","import _assign from './_assign';\nimport _identity from './_identity';\nimport _isArrayLike from './_isArrayLike';\nimport _isTransformer from './_isTransformer';\nimport objOf from '../objOf';\n\nvar _stepCatArray = {\n  '@@transducer/init': Array,\n  '@@transducer/step': function (xs, x) {\n    xs.push(x);\n    return xs;\n  },\n  '@@transducer/result': _identity\n};\nvar _stepCatString = {\n  '@@transducer/init': String,\n  '@@transducer/step': function (a, b) {\n    return a + b;\n  },\n  '@@transducer/result': _identity\n};\nvar _stepCatObject = {\n  '@@transducer/init': Object,\n  '@@transducer/step': function (result, input) {\n    return _assign(result, _isArrayLike(input) ? objOf(input[0], input[1]) : input);\n  },\n  '@@transducer/result': _identity\n};\n\nexport default function _stepCat(obj) {\n  if (_isTransformer(obj)) {\n    return obj;\n  }\n  if (_isArrayLike(obj)) {\n    return _stepCatArray;\n  }\n  if (typeof obj === 'string') {\n    return _stepCatString;\n  }\n  if (typeof obj === 'object') {\n    return _stepCatObject;\n  }\n  throw new Error('Cannot create transformer for ' + obj);\n}","import _clone from './internal/_clone';\nimport _curry3 from './internal/_curry3';\nimport _isTransformer from './internal/_isTransformer';\nimport _reduce from './internal/_reduce';\nimport _stepCat from './internal/_stepCat';\n\n/**\n * Transforms the items of the list with the transducer and appends the\n * transformed items to the accumulator using an appropriate iterator function\n * based on the accumulator type.\n *\n * The accumulator can be an array, string, object or a transformer. Iterated\n * items will be appended to arrays and concatenated to strings. Objects will\n * be merged directly or 2-item arrays will be merged as key, value pairs.\n *\n * The accumulator can also be a transformer object that provides a 2-arity\n * reducing iterator function, step, 0-arity initial value function, init, and\n * 1-arity result extraction function result. The step function is used as the\n * iterator function in reduce. The result function is used to convert the\n * final accumulator into the return type and in most cases is R.identity. The\n * init function is used to provide the initial accumulator.\n *\n * The iteration is performed with [`R.reduce`](#reduce) after initializing the\n * transducer.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig a -> (b -> b) -> [c] -> a\n * @param {*} acc The initial accumulator value.\n * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @example\n *\n *      var numbers = [1, 2, 3, 4];\n *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n *\n *      R.into([], transducer, numbers); //=> [2, 3]\n *\n *      var intoArray = R.into([]);\n *      intoArray(transducer, numbers); //=> [2, 3]\n */\nvar into = /*#__PURE__*/_curry3(function into(acc, xf, list) {\n  return _isTransformer(acc) ? _reduce(xf(acc), acc['@@transducer/init'](), list) : _reduce(xf(_stepCat(acc)), _clone(acc, [], [], false), list);\n});\nexport default into;","import _curry1 from './internal/_curry1';\nimport _has from './internal/_has';\nimport keys from './keys';\n\n/**\n * Same as [`R.invertObj`](#invertObj), however this accounts for objects with\n * duplicate values by putting the values into an array.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {s: x} -> {x: [ s, ... ]}\n * @param {Object} obj The object or array to invert\n * @return {Object} out A new object with keys in an array.\n * @see R.invertObj\n * @example\n *\n *      var raceResultsByFirstName = {\n *        first: 'alice',\n *        second: 'jake',\n *        third: 'alice',\n *      };\n *      R.invert(raceResultsByFirstName);\n *      //=> { 'alice': ['first', 'third'], 'jake':['second'] }\n */\nvar invert = /*#__PURE__*/_curry1(function invert(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var idx = 0;\n  var out = {};\n\n  while (idx < len) {\n    var key = props[idx];\n    var val = obj[key];\n    var list = _has(val, out) ? out[val] : out[val] = [];\n    list[list.length] = key;\n    idx += 1;\n  }\n  return out;\n});\nexport default invert;","import _curry1 from './internal/_curry1';\nimport keys from './keys';\n\n/**\n * Returns a new object with the keys of the given object as values, and the\n * values of the given object, which are coerced to strings, as keys. Note\n * that the last key found is preferred when handling the same value.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {s: x} -> {x: s}\n * @param {Object} obj The object or array to invert\n * @return {Object} out A new object\n * @see R.invert\n * @example\n *\n *      var raceResults = {\n *        first: 'alice',\n *        second: 'jake'\n *      };\n *      R.invertObj(raceResults);\n *      //=> { 'alice': 'first', 'jake':'second' }\n *\n *      // Alternatively:\n *      var raceResults = ['alice', 'jake'];\n *      R.invertObj(raceResults);\n *      //=> { 'alice': '0', 'jake':'1' }\n */\nvar invertObj = /*#__PURE__*/_curry1(function invertObj(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var idx = 0;\n  var out = {};\n\n  while (idx < len) {\n    var key = props[idx];\n    out[obj[key]] = key;\n    idx += 1;\n  }\n  return out;\n});\nexport default invertObj;","import _curry2 from './internal/_curry2';\nimport _isFunction from './internal/_isFunction';\nimport curryN from './curryN';\nimport toString from './toString';\n\n/**\n * Turns a named method with a specified arity into a function that can be\n * called directly supplied with arguments and a target object.\n *\n * The returned function is curried and accepts `arity + 1` parameters where\n * the final parameter is the target object.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> String -> (a -> b -> ... -> n -> Object -> *)\n * @param {Number} arity Number of arguments the returned function should take\n *        before the target object.\n * @param {String} method Name of the method to call.\n * @return {Function} A new curried function.\n * @see R.construct\n * @example\n *\n *      var sliceFrom = R.invoker(1, 'slice');\n *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'\n *      var sliceFrom6 = R.invoker(2, 'slice')(6);\n *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'\n * @symb R.invoker(0, 'method')(o) = o['method']()\n * @symb R.invoker(1, 'method')(a, o) = o['method'](a)\n * @symb R.invoker(2, 'method')(a, b, o) = o['method'](a, b)\n */\nvar invoker = /*#__PURE__*/_curry2(function invoker(arity, method) {\n  return curryN(arity + 1, function () {\n    var target = arguments[arity];\n    if (target != null && _isFunction(target[method])) {\n      return target[method].apply(target, Array.prototype.slice.call(arguments, 0, arity));\n    }\n    throw new TypeError(toString(target) + ' does not have a method named \"' + method + '\"');\n  });\n});\nexport default invoker;","import _curry2 from './internal/_curry2';\n\n/**\n * See if an object (`val`) is an instance of the supplied constructor. This\n * function will check up the inheritance chain, if any.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Type\n * @sig (* -> {*}) -> a -> Boolean\n * @param {Object} ctor A constructor\n * @param {*} val The value to test\n * @return {Boolean}\n * @example\n *\n *      R.is(Object, {}); //=> true\n *      R.is(Number, 1); //=> true\n *      R.is(Object, 1); //=> false\n *      R.is(String, 's'); //=> true\n *      R.is(String, new String('')); //=> true\n *      R.is(Object, new String('')); //=> true\n *      R.is(Object, 's'); //=> false\n *      R.is(Number, {}); //=> false\n */\nvar is = /*#__PURE__*/_curry2(function is(Ctor, val) {\n  return val != null && val.constructor === Ctor || val instanceof Ctor;\n});\nexport default is;","import _curry1 from './internal/_curry1';\nimport empty from './empty';\nimport equals from './equals';\n\n/**\n * Returns `true` if the given value is its type's empty value; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> Boolean\n * @param {*} x\n * @return {Boolean}\n * @see R.empty\n * @example\n *\n *      R.isEmpty([1, 2, 3]);   //=> false\n *      R.isEmpty([]);          //=> true\n *      R.isEmpty('');          //=> true\n *      R.isEmpty(null);        //=> false\n *      R.isEmpty({});          //=> true\n *      R.isEmpty({length: 0}); //=> false\n */\nvar isEmpty = /*#__PURE__*/_curry1(function isEmpty(x) {\n  return x != null && equals(x, empty(x));\n});\nexport default isEmpty;","import invoker from './invoker';\n\n/**\n * Returns a string made by inserting the `separator` between each element and\n * concatenating all the elements into a single string.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig String -> [a] -> String\n * @param {Number|String} separator The string used to separate the elements.\n * @param {Array} xs The elements to join into a string.\n * @return {String} str The string made by concatenating `xs` with `separator`.\n * @see R.split\n * @example\n *\n *      var spacer = R.join(' ');\n *      spacer(['a', 2, 3.4]);   //=> 'a 2 3.4'\n *      R.join('|', [1, 2, 3]);    //=> '1|2|3'\n */\nvar join = /*#__PURE__*/invoker(1, 'join');\nexport default join;","import _curry1 from './internal/_curry1';\nimport converge from './converge';\n\n/**\n * juxt applies a list of functions to a list of values.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Function\n * @sig [(a, b, ..., m) -> n] -> ((a, b, ..., m) -> [n])\n * @param {Array} fns An array of functions\n * @return {Function} A function that returns a list of values after applying each of the original `fns` to its parameters.\n * @see R.applySpec\n * @example\n *\n *      var getRange = R.juxt([Math.min, Math.max]);\n *      getRange(3, 4, 9, -3); //=> [-3, 9]\n * @symb R.juxt([f, g, h])(a, b) = [f(a, b), g(a, b), h(a, b)]\n */\nvar juxt = /*#__PURE__*/_curry1(function juxt(fns) {\n  return converge(function () {\n    return Array.prototype.slice.call(arguments, 0);\n  }, fns);\n});\nexport default juxt;","import _curry1 from './internal/_curry1';\n\n/**\n * Returns a list containing the names of all the properties of the supplied\n * object, including prototype properties.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own and prototype properties.\n * @see R.keys, R.valuesIn\n * @example\n *\n *      var F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      var f = new F();\n *      R.keysIn(f); //=> ['x', 'y']\n */\nvar keysIn = /*#__PURE__*/_curry1(function keysIn(obj) {\n  var prop;\n  var ks = [];\n  for (prop in obj) {\n    ks[ks.length] = prop;\n  }\n  return ks;\n});\nexport default keysIn;","import _curry2 from './internal/_curry2';\nimport _isArray from './internal/_isArray';\nimport equals from './equals';\n\n/**\n * Returns the position of the last occurrence of an item in an array, or -1 if\n * the item is not included in the array. [`R.equals`](#equals) is used to\n * determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Number\n * @param {*} target The item to find.\n * @param {Array} xs The array to search in.\n * @return {Number} the index of the target, or -1 if the target is not found.\n * @see R.indexOf\n * @example\n *\n *      R.lastIndexOf(3, [-1,3,3,0,1,2,3,4]); //=> 6\n *      R.lastIndexOf(10, [1,2,3,4]); //=> -1\n */\nvar lastIndexOf = /*#__PURE__*/_curry2(function lastIndexOf(target, xs) {\n  if (typeof xs.lastIndexOf === 'function' && !_isArray(xs)) {\n    return xs.lastIndexOf(target);\n  } else {\n    var idx = xs.length - 1;\n    while (idx >= 0) {\n      if (equals(xs[idx], target)) {\n        return idx;\n      }\n      idx -= 1;\n    }\n    return -1;\n  }\n});\nexport default lastIndexOf;","export default function _isNumber(x) {\n  return Object.prototype.toString.call(x) === '[object Number]';\n}","import _curry1 from './internal/_curry1';\nimport _isNumber from './internal/_isNumber';\n\n/**\n * Returns the number of elements in the array by returning `list.length`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [a] -> Number\n * @param {Array} list The array to inspect.\n * @return {Number} The length of the array.\n * @example\n *\n *      R.length([]); //=> 0\n *      R.length([1, 2, 3]); //=> 3\n */\nvar length = /*#__PURE__*/_curry1(function length(list) {\n  return list != null && _isNumber(list.length) ? list.length : NaN;\n});\nexport default length;","import _curry2 from './internal/_curry2';\nimport map from './map';\n\n/**\n * Returns a lens for the given getter and setter functions. The getter \"gets\"\n * the value of the focus; the setter \"sets\" the value of the focus. The setter\n * should not mutate the data structure.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig (s -> a) -> ((a, s) -> s) -> Lens s a\n * @param {Function} getter\n * @param {Function} setter\n * @return {Lens}\n * @see R.view, R.set, R.over, R.lensIndex, R.lensProp\n * @example\n *\n *      var xLens = R.lens(R.prop('x'), R.assoc('x'));\n *\n *      R.view(xLens, {x: 1, y: 2});            //=> 1\n *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n */\nvar lens = /*#__PURE__*/_curry2(function lens(getter, setter) {\n  return function (toFunctorFn) {\n    return function (target) {\n      return map(function (focus) {\n        return setter(focus, target);\n      }, toFunctorFn(getter(target)));\n    };\n  };\n});\nexport default lens;","import _curry1 from './internal/_curry1';\nimport lens from './lens';\nimport nth from './nth';\nimport update from './update';\n\n/**\n * Returns a lens whose focus is the specified index.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Number -> Lens s a\n * @param {Number} n\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      var headLens = R.lensIndex(0);\n *\n *      R.view(headLens, ['a', 'b', 'c']);            //=> 'a'\n *      R.set(headLens, 'x', ['a', 'b', 'c']);        //=> ['x', 'b', 'c']\n *      R.over(headLens, R.toUpper, ['a', 'b', 'c']); //=> ['A', 'b', 'c']\n */\nvar lensIndex = /*#__PURE__*/_curry1(function lensIndex(n) {\n  return lens(nth(n), update(n));\n});\nexport default lensIndex;","import _curry1 from './internal/_curry1';\nimport assocPath from './assocPath';\nimport lens from './lens';\nimport path from './path';\n\n/**\n * Returns a lens whose focus is the specified path.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @typedefn Idx = String | Int\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig [Idx] -> Lens s a\n * @param {Array} path The path to use.\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      var xHeadYLens = R.lensPath(['x', 0, 'y']);\n *\n *      R.view(xHeadYLens, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> 2\n *      R.set(xHeadYLens, 1, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> {x: [{y: 1, z: 3}, {y: 4, z: 5}]}\n *      R.over(xHeadYLens, R.negate, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> {x: [{y: -2, z: 3}, {y: 4, z: 5}]}\n */\nvar lensPath = /*#__PURE__*/_curry1(function lensPath(p) {\n  return lens(path(p), assocPath(p));\n});\nexport default lensPath;","import _curry1 from './internal/_curry1';\nimport assoc from './assoc';\nimport lens from './lens';\nimport prop from './prop';\n\n/**\n * Returns a lens whose focus is the specified property.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig String -> Lens s a\n * @param {String} k\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      var xLens = R.lensProp('x');\n *\n *      R.view(xLens, {x: 1, y: 2});            //=> 1\n *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n */\nvar lensProp = /*#__PURE__*/_curry1(function lensProp(k) {\n  return lens(prop(k), assoc(k));\n});\nexport default lensProp;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns `true` if the first argument is less than the second; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @see R.gt\n * @example\n *\n *      R.lt(2, 1); //=> false\n *      R.lt(2, 2); //=> false\n *      R.lt(2, 3); //=> true\n *      R.lt('a', 'z'); //=> true\n *      R.lt('z', 'a'); //=> false\n */\nvar lt = /*#__PURE__*/_curry2(function lt(a, b) {\n  return a < b;\n});\nexport default lt;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns `true` if the first argument is less than or equal to the second;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {Number} a\n * @param {Number} b\n * @return {Boolean}\n * @see R.gte\n * @example\n *\n *      R.lte(2, 1); //=> false\n *      R.lte(2, 2); //=> true\n *      R.lte(2, 3); //=> true\n *      R.lte('a', 'z'); //=> true\n *      R.lte('z', 'a'); //=> false\n */\nvar lte = /*#__PURE__*/_curry2(function lte(a, b) {\n  return a <= b;\n});\nexport default lte;","import _curry3 from './internal/_curry3';\n\n/**\n * The `mapAccum` function behaves like a combination of map and reduce; it\n * applies a function to each element of a list, passing an accumulating\n * parameter from left to right, and returning a final value of this\n * accumulator together with the new list.\n *\n * The iterator function receives two arguments, *acc* and *value*, and should\n * return a tuple *[acc, value]*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig ((acc, x) -> (acc, y)) -> acc -> [x] -> (acc, [y])\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.addIndex, R.mapAccumRight\n * @example\n *\n *      var digits = ['1', '2', '3', '4'];\n *      var appender = (a, b) => [a + b, a + b];\n *\n *      R.mapAccum(appender, 0, digits); //=> ['01234', ['01', '012', '0123', '01234']]\n * @symb R.mapAccum(f, a, [b, c, d]) = [\n *   f(f(f(a, b)[0], c)[0], d)[0],\n *   [\n *     f(a, b)[1],\n *     f(f(a, b)[0], c)[1],\n *     f(f(f(a, b)[0], c)[0], d)[1]\n *   ]\n * ]\n */\nvar mapAccum = /*#__PURE__*/_curry3(function mapAccum(fn, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n  var tuple = [acc];\n  while (idx < len) {\n    tuple = fn(tuple[0], list[idx]);\n    result[idx] = tuple[1];\n    idx += 1;\n  }\n  return [tuple[0], result];\n});\nexport default mapAccum;","import _curry3 from './internal/_curry3';\n\n/**\n * The `mapAccumRight` function behaves like a combination of map and reduce; it\n * applies a function to each element of a list, passing an accumulating\n * parameter from right to left, and returning a final value of this\n * accumulator together with the new list.\n *\n * Similar to [`mapAccum`](#mapAccum), except moves through the input list from\n * the right to the left.\n *\n * The iterator function receives two arguments, *value* and *acc*, and should\n * return a tuple *[value, acc]*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig ((x, acc) -> (y, acc)) -> acc -> [x] -> ([y], acc)\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.addIndex, R.mapAccum\n * @example\n *\n *      var digits = ['1', '2', '3', '4'];\n *      var append = (a, b) => [a + b, a + b];\n *\n *      R.mapAccumRight(append, 5, digits); //=> [['12345', '2345', '345', '45'], '12345']\n * @symb R.mapAccumRight(f, a, [b, c, d]) = [\n *   [\n *     f(b, f(c, f(d, a)[0])[0])[1],\n *     f(c, f(d, a)[0])[1],\n *     f(d, a)[1],\n *   ]\n *   f(b, f(c, f(d, a)[0])[0])[0],\n * ]\n */\nvar mapAccumRight = /*#__PURE__*/_curry3(function mapAccumRight(fn, acc, list) {\n  var idx = list.length - 1;\n  var result = [];\n  var tuple = [acc];\n  while (idx >= 0) {\n    tuple = fn(list[idx], tuple[0]);\n    result[idx] = tuple[1];\n    idx -= 1;\n  }\n  return [result, tuple[0]];\n});\nexport default mapAccumRight;","import _curry2 from './internal/_curry2';\nimport _reduce from './internal/_reduce';\nimport keys from './keys';\n\n/**\n * An Object-specific version of [`map`](#map). The function is applied to three\n * arguments: *(value, key, obj)*. If only the value is significant, use\n * [`map`](#map) instead.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig ((*, String, Object) -> *) -> Object -> Object\n * @param {Function} fn\n * @param {Object} obj\n * @return {Object}\n * @see R.map\n * @example\n *\n *      var values = { x: 1, y: 2, z: 3 };\n *      var prependKeyAndDouble = (num, key, obj) => key + (num * 2);\n *\n *      R.mapObjIndexed(prependKeyAndDouble, values); //=> { x: 'x2', y: 'y4', z: 'z6' }\n */\nvar mapObjIndexed = /*#__PURE__*/_curry2(function mapObjIndexed(fn, obj) {\n  return _reduce(function (acc, key) {\n    acc[key] = fn(obj[key], key, obj);\n    return acc;\n  }, {}, keys(obj));\n});\nexport default mapObjIndexed;","import _curry2 from './internal/_curry2';\n\n/**\n * Tests a regular expression against a String. Note that this function will\n * return an empty array when there are no matches. This differs from\n * [`String.prototype.match`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match)\n * which returns `null` when there are no matches.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category String\n * @sig RegExp -> String -> [String | Undefined]\n * @param {RegExp} rx A regular expression.\n * @param {String} str The string to match against\n * @return {Array} The list of matches or empty array.\n * @see R.test\n * @example\n *\n *      R.match(/([a-z]a)/g, 'bananas'); //=> ['ba', 'na', 'na']\n *      R.match(/a/, 'b'); //=> []\n *      R.match(/a/, null); //=> TypeError: null does not have a method named \"match\"\n */\nvar match = /*#__PURE__*/_curry2(function match(rx, str) {\n  return str.match(rx) || [];\n});\nexport default match;","import _curry2 from './internal/_curry2';\nimport _isInteger from './internal/_isInteger';\n\n/**\n * `mathMod` behaves like the modulo operator should mathematically, unlike the\n * `%` operator (and by extension, [`R.modulo`](#modulo)). So while\n * `-17 % 5` is `-2`, `mathMod(-17, 5)` is `3`. `mathMod` requires Integer\n * arguments, and returns NaN when the modulus is zero or negative.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} m The dividend.\n * @param {Number} p the modulus.\n * @return {Number} The result of `b mod a`.\n * @see R.modulo\n * @example\n *\n *      R.mathMod(-17, 5);  //=> 3\n *      R.mathMod(17, 5);   //=> 2\n *      R.mathMod(17, -5);  //=> NaN\n *      R.mathMod(17, 0);   //=> NaN\n *      R.mathMod(17.2, 5); //=> NaN\n *      R.mathMod(17, 5.3); //=> NaN\n *\n *      var clock = R.mathMod(R.__, 12);\n *      clock(15); //=> 3\n *      clock(24); //=> 0\n *\n *      var seventeenMod = R.mathMod(17);\n *      seventeenMod(3);  //=> 2\n *      seventeenMod(4);  //=> 1\n *      seventeenMod(10); //=> 7\n */\nvar mathMod = /*#__PURE__*/_curry2(function mathMod(m, p) {\n  if (!_isInteger(m)) {\n    return NaN;\n  }\n  if (!_isInteger(p) || p < 1) {\n    return NaN;\n  }\n  return (m % p + p) % p;\n});\nexport default mathMod;","import _curry3 from './internal/_curry3';\n\n/**\n * Takes a function and two values, and returns whichever value produces the\n * larger result when passed to the provided function.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Relation\n * @sig Ord b => (a -> b) -> a -> a -> a\n * @param {Function} f\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.max, R.minBy\n * @example\n *\n *      //  square :: Number -> Number\n *      var square = n => n * n;\n *\n *      R.maxBy(square, -3, 2); //=> -3\n *\n *      R.reduce(R.maxBy(square), 0, [3, -5, 4, 1, -2]); //=> -5\n *      R.reduce(R.maxBy(square), 0, []); //=> 0\n */\nvar maxBy = /*#__PURE__*/_curry3(function maxBy(f, a, b) {\n  return f(b) > f(a) ? b : a;\n});\nexport default maxBy;","import add from './add';\nimport reduce from './reduce';\n\n/**\n * Adds together all the elements of a list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list An array of numbers\n * @return {Number} The sum of all the numbers in the list.\n * @see R.reduce\n * @example\n *\n *      R.sum([2,4,6,8,100,1]); //=> 121\n */\nvar sum = /*#__PURE__*/reduce(add, 0);\nexport default sum;","import _curry1 from './internal/_curry1';\nimport sum from './sum';\n\n/**\n * Returns the mean of the given list of numbers.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list\n * @return {Number}\n * @see R.median\n * @example\n *\n *      R.mean([2, 7, 9]); //=> 6\n *      R.mean([]); //=> NaN\n */\nvar mean = /*#__PURE__*/_curry1(function mean(list) {\n  return sum(list) / list.length;\n});\nexport default mean;","import _curry1 from './internal/_curry1';\nimport mean from './mean';\n\n/**\n * Returns the median of the given list of numbers.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list\n * @return {Number}\n * @see R.mean\n * @example\n *\n *      R.median([2, 9, 7]); //=> 7\n *      R.median([7, 2, 10, 9]); //=> 8\n *      R.median([]); //=> NaN\n */\nvar median = /*#__PURE__*/_curry1(function median(list) {\n  var len = list.length;\n  if (len === 0) {\n    return NaN;\n  }\n  var width = 2 - len % 2;\n  var idx = (len - width) / 2;\n  return mean(Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n  }).slice(idx, idx + width));\n});\nexport default median;","import _arity from './internal/_arity';\nimport _curry2 from './internal/_curry2';\nimport _has from './internal/_has';\n\n/**\n * A customisable version of [`R.memoize`](#memoize). `memoizeWith` takes an\n * additional function that will be applied to a given argument set and used to\n * create the cache key under which the results of the function to be memoized\n * will be stored. Care must be taken when implementing key generation to avoid\n * clashes that may overwrite previous entries erroneously.\n *\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Function\n * @sig (*... -> String) -> (*... -> a) -> (*... -> a)\n * @param {Function} fn The function to generate the cache key.\n * @param {Function} fn The function to memoize.\n * @return {Function} Memoized version of `fn`.\n * @see R.memoize\n * @example\n *\n *      let count = 0;\n *      const factorial = R.memoizeWith(R.identity, n => {\n *        count += 1;\n *        return R.product(R.range(1, n + 1));\n *      });\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      count; //=> 1\n */\nvar memoizeWith = /*#__PURE__*/_curry2(function memoizeWith(mFn, fn) {\n  var cache = {};\n  return _arity(fn.length, function () {\n    var key = mFn.apply(this, arguments);\n    if (!_has(key, cache)) {\n      cache[key] = fn.apply(this, arguments);\n    }\n    return cache[key];\n  });\n});\nexport default memoizeWith;","import memoizeWith from './memoizeWith';\nimport toString from './toString';\n\n/**\n * Creates a new function that, when invoked, caches the result of calling `fn`\n * for a given argument set and returns the result. Subsequent calls to the\n * memoized `fn` with the same argument set will not result in an additional\n * call to `fn`; instead, the cached result for that set of arguments will be\n * returned.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (*... -> a) -> (*... -> a)\n * @param {Function} fn The function to memoize.\n * @return {Function} Memoized version of `fn`.\n * @see R.memoizeWith\n * @deprecated since v0.25.0\n * @example\n *\n *      let count = 0;\n *      const factorial = R.memoize(n => {\n *        count += 1;\n *        return R.product(R.range(1, n + 1));\n *      });\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      count; //=> 1\n */\nvar memoize = /*#__PURE__*/memoizeWith(function () {\n  return toString(arguments);\n});\nexport default memoize;","import _assign from './internal/_assign';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Create a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects,\n * the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> {k: v} -> {k: v}\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepRight, R.mergeWith, R.mergeWithKey\n * @example\n *\n *      R.merge({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n *      //=> { 'name': 'fred', 'age': 40 }\n *\n *      var resetToDefault = R.merge(R.__, {x: 0});\n *      resetToDefault({x: 5, y: 2}); //=> {x: 0, y: 2}\n * @symb R.merge({ x: 1, y: 2 }, { y: 5, z: 3 }) = { x: 1, y: 5, z: 3 }\n */\nvar merge = /*#__PURE__*/_curry2(function merge(l, r) {\n  return _assign({}, l, r);\n});\nexport default merge;","import _assign from './internal/_assign';\nimport _curry1 from './internal/_curry1';\n\n/**\n * Merges a list of objects together into one object.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig [{k: v}] -> {k: v}\n * @param {Array} list An array of objects\n * @return {Object} A merged object.\n * @see R.reduce\n * @example\n *\n *      R.mergeAll([{foo:1},{bar:2},{baz:3}]); //=> {foo:1,bar:2,baz:3}\n *      R.mergeAll([{foo:1},{foo:2},{bar:2}]); //=> {foo:2,bar:2}\n * @symb R.mergeAll([{ x: 1 }, { y: 2 }, { z: 3 }]) = { x: 1, y: 2, z: 3 }\n */\nvar mergeAll = /*#__PURE__*/_curry1(function mergeAll(list) {\n  return _assign.apply(null, [{}].concat(list));\n});\nexport default mergeAll;","import _curry3 from './internal/_curry3';\nimport _has from './internal/_has';\n\n/**\n * Creates a new object with the own properties of the two provided objects. If\n * a key exists in both objects, the provided function is applied to the key\n * and the values associated with the key in each object, with the result being\n * used as the value associated with the key in the returned object.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @sig ((String, a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepWithKey, R.merge, R.mergeWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeWithKey(concatValues,\n *                     { a: true, thing: 'foo', values: [10, 20] },\n *                     { b: true, thing: 'bar', values: [15, 35] });\n *      //=> { a: true, b: true, thing: 'bar', values: [10, 20, 15, 35] }\n * @symb R.mergeWithKey(f, { x: 1, y: 2 }, { y: 5, z: 3 }) = { x: 1, y: f('y', 2, 5), z: 3 }\n */\nvar mergeWithKey = /*#__PURE__*/_curry3(function mergeWithKey(fn, l, r) {\n  var result = {};\n  var k;\n\n  for (k in l) {\n    if (_has(k, l)) {\n      result[k] = _has(k, r) ? fn(k, l[k], r[k]) : l[k];\n    }\n  }\n\n  for (k in r) {\n    if (_has(k, r) && !_has(k, result)) {\n      result[k] = r[k];\n    }\n  }\n\n  return result;\n});\nexport default mergeWithKey;","import _curry3 from './internal/_curry3';\nimport _isObject from './internal/_isObject';\nimport mergeWithKey from './mergeWithKey';\n\n/**\n * Creates a new object with the own properties of the two provided objects.\n * If a key exists in both objects:\n * - and both associated values are also objects then the values will be\n *   recursively merged.\n * - otherwise the provided function is applied to the key and associated values\n *   using the resulting value as the new value associated with the key.\n * If a key only exists in one object, the value will be associated with the key\n * of the resulting object.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig ((String, a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.mergeWithKey, R.mergeDeep, R.mergeDeepWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeDeepWithKey(concatValues,\n *                         { a: true, c: { thing: 'foo', values: [10, 20] }},\n *                         { b: true, c: { thing: 'bar', values: [15, 35] }});\n *      //=> { a: true, b: true, c: { thing: 'bar', values: [10, 20, 15, 35] }}\n */\nvar mergeDeepWithKey = /*#__PURE__*/_curry3(function mergeDeepWithKey(fn, lObj, rObj) {\n  return mergeWithKey(function (k, lVal, rVal) {\n    if (_isObject(lVal) && _isObject(rVal)) {\n      return mergeDeepWithKey(fn, lVal, rVal);\n    } else {\n      return fn(k, lVal, rVal);\n    }\n  }, lObj, rObj);\n});\nexport default mergeDeepWithKey;","import _curry2 from './internal/_curry2';\nimport mergeDeepWithKey from './mergeDeepWithKey';\n\n/**\n * Creates a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects:\n * - and both values are objects, the two values will be recursively merged\n * - otherwise the value from the first object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig {a} -> {a} -> {a}\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.merge, R.mergeDeepRight, R.mergeDeepWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepLeft({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},\n *                      { age: 40, contact: { email: 'baa@example.com' }});\n *      //=> { name: 'fred', age: 10, contact: { email: 'moo@example.com' }}\n */\nvar mergeDeepLeft = /*#__PURE__*/_curry2(function mergeDeepLeft(lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return lVal;\n  }, lObj, rObj);\n});\nexport default mergeDeepLeft;","import _curry2 from './internal/_curry2';\nimport mergeDeepWithKey from './mergeDeepWithKey';\n\n/**\n * Creates a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects:\n * - and both values are objects, the two values will be recursively merged\n * - otherwise the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig {a} -> {a} -> {a}\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.merge, R.mergeDeepLeft, R.mergeDeepWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepRight({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},\n *                       { age: 40, contact: { email: 'baa@example.com' }});\n *      //=> { name: 'fred', age: 40, contact: { email: 'baa@example.com' }}\n */\nvar mergeDeepRight = /*#__PURE__*/_curry2(function mergeDeepRight(lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return rVal;\n  }, lObj, rObj);\n});\nexport default mergeDeepRight;","import _curry3 from './internal/_curry3';\nimport mergeDeepWithKey from './mergeDeepWithKey';\n\n/**\n * Creates a new object with the own properties of the two provided objects.\n * If a key exists in both objects:\n * - and both associated values are also objects then the values will be\n *   recursively merged.\n * - otherwise the provided function is applied to associated values using the\n *   resulting value as the new value associated with the key.\n * If a key only exists in one object, the value will be associated with the key\n * of the resulting object.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig ((a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.mergeWith, R.mergeDeep, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepWith(R.concat,\n *                      { a: true, c: { values: [10, 20] }},\n *                      { b: true, c: { values: [15, 35] }});\n *      //=> { a: true, b: true, c: { values: [10, 20, 15, 35] }}\n */\nvar mergeDeepWith = /*#__PURE__*/_curry3(function mergeDeepWith(fn, lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return fn(lVal, rVal);\n  }, lObj, rObj);\n});\nexport default mergeDeepWith;","import _curry3 from './internal/_curry3';\nimport mergeWithKey from './mergeWithKey';\n\n/**\n * Creates a new object with the own properties of the two provided objects. If\n * a key exists in both objects, the provided function is applied to the values\n * associated with the key in each object, with the result being used as the\n * value associated with the key in the returned object.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @sig ((a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepWith, R.merge, R.mergeWithKey\n * @example\n *\n *      R.mergeWith(R.concat,\n *                  { a: true, values: [10, 20] },\n *                  { b: true, values: [15, 35] });\n *      //=> { a: true, b: true, values: [10, 20, 15, 35] }\n */\nvar mergeWith = /*#__PURE__*/_curry3(function mergeWith(fn, l, r) {\n  return mergeWithKey(function (_, _l, _r) {\n    return fn(_l, _r);\n  }, l, r);\n});\nexport default mergeWith;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns the smaller of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.minBy, R.max\n * @example\n *\n *      R.min(789, 123); //=> 123\n *      R.min('a', 'b'); //=> 'a'\n */\nvar min = /*#__PURE__*/_curry2(function min(a, b) {\n  return b < a ? b : a;\n});\nexport default min;","import _curry3 from './internal/_curry3';\n\n/**\n * Takes a function and two values, and returns whichever value produces the\n * smaller result when passed to the provided function.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Relation\n * @sig Ord b => (a -> b) -> a -> a -> a\n * @param {Function} f\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.min, R.maxBy\n * @example\n *\n *      //  square :: Number -> Number\n *      var square = n => n * n;\n *\n *      R.minBy(square, -3, 2); //=> 2\n *\n *      R.reduce(R.minBy(square), Infinity, [3, -5, 4, 1, -2]); //=> 1\n *      R.reduce(R.minBy(square), Infinity, []); //=> Infinity\n */\nvar minBy = /*#__PURE__*/_curry3(function minBy(f, a, b) {\n  return f(b) < f(a) ? b : a;\n});\nexport default minBy;","import _curry2 from './internal/_curry2';\n\n/**\n * Divides the first parameter by the second and returns the remainder. Note\n * that this function preserves the JavaScript-style behavior for modulo. For\n * mathematical modulo see [`mathMod`](#mathMod).\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The value to the divide.\n * @param {Number} b The pseudo-modulus\n * @return {Number} The result of `b % a`.\n * @see R.mathMod\n * @example\n *\n *      R.modulo(17, 3); //=> 2\n *      // JS behavior:\n *      R.modulo(-17, 3); //=> -2\n *      R.modulo(17, -3); //=> 2\n *\n *      var isOdd = R.modulo(R.__, 2);\n *      isOdd(42); //=> 0\n *      isOdd(21); //=> 1\n */\nvar modulo = /*#__PURE__*/_curry2(function modulo(a, b) {\n  return a % b;\n});\nexport default modulo;","import _curry2 from './internal/_curry2';\n\n/**\n * Multiplies two numbers. Equivalent to `a * b` but curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a * b`.\n * @see R.divide\n * @example\n *\n *      var double = R.multiply(2);\n *      var triple = R.multiply(3);\n *      double(3);       //=>  6\n *      triple(4);       //=> 12\n *      R.multiply(2, 5);  //=> 10\n */\nvar multiply = /*#__PURE__*/_curry2(function multiply(a, b) {\n  return a * b;\n});\nexport default multiply;","import _curry1 from './internal/_curry1';\n\n/**\n * Negates its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number}\n * @example\n *\n *      R.negate(42); //=> -42\n */\nvar negate = /*#__PURE__*/_curry1(function negate(n) {\n  return -n;\n});\nexport default negate;","import _complement from './internal/_complement';\nimport _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xany from './internal/_xany';\nimport any from './any';\n\n/**\n * Returns `true` if no elements of the list match the predicate, `false`\n * otherwise.\n *\n * Dispatches to the `any` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is not satisfied by every element, `false` otherwise.\n * @see R.all, R.any\n * @example\n *\n *      var isEven = n => n % 2 === 0;\n *      var isOdd = n => n % 2 === 1;\n *\n *      R.none(isEven, [1, 3, 5, 7, 9, 11]); //=> true\n *      R.none(isOdd, [1, 3, 5, 7, 8, 11]); //=> false\n */\nvar none = /*#__PURE__*/_curry2( /*#__PURE__*/_complement( /*#__PURE__*/_dispatchable(['any'], _xany, any)));\nexport default none;","import _curry1 from './internal/_curry1';\nimport curryN from './curryN';\nimport nth from './nth';\n\n/**\n * Returns a function which returns its nth argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig Number -> *... -> *\n * @param {Number} n\n * @return {Function}\n * @example\n *\n *      R.nthArg(1)('a', 'b', 'c'); //=> 'b'\n *      R.nthArg(-1)('a', 'b', 'c'); //=> 'c'\n * @symb R.nthArg(-1)(a, b, c) = c\n * @symb R.nthArg(0)(a, b, c) = a\n * @symb R.nthArg(1)(a, b, c) = b\n */\nvar nthArg = /*#__PURE__*/_curry1(function nthArg(n) {\n  var arity = n < 0 ? 1 : n + 1;\n  return curryN(arity, function () {\n    return nth(n, arguments);\n  });\n});\nexport default nthArg;","import _curry3 from './internal/_curry3';\n\n/**\n * `o` is a curried composition function that returns a unary function.\n * Like [`compose`](#compose), `o` performs right-to-left function composition.\n * Unlike [`compose`](#compose), the rightmost function passed to `o` will be\n * invoked with only one argument.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Function\n * @sig (b -> c) -> (a -> b) -> a -> c\n * @param {Function} f\n * @param {Function} g\n * @return {Function}\n * @see R.compose, R.pipe\n * @example\n *\n *      var classyGreeting = name => \"The name's \" + name.last + \", \" + name.first + \" \" + name.last\n *      var yellGreeting = R.o(R.toUpper, classyGreeting);\n *      yellGreeting({first: 'James', last: 'Bond'}); //=> \"THE NAME'S BOND, JAMES BOND\"\n *\n *      R.o(R.multiply(10), R.add(10))(-4) //=> 60\n *\n * @symb R.o(f, g, x) = f(g(x))\n */\nvar o = /*#__PURE__*/_curry3(function o(f, g, x) {\n  return f(g(x));\n});\nexport default o;","export default function _of(x) {\n  return [x];\n}","import _curry1 from './internal/_curry1';\nimport _of from './internal/_of';\n\n/**\n * Returns a singleton array containing the value provided.\n *\n * Note this `of` is different from the ES6 `of`; See\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> [a]\n * @param {*} x any value\n * @return {Array} An array wrapping `x`.\n * @example\n *\n *      R.of(null); //=> [null]\n *      R.of([42]); //=> [[42]]\n */\nvar of = /*#__PURE__*/_curry1(_of);\nexport default of;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns a partial copy of an object omitting the keys specified.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [String] -> {String: *} -> {String: *}\n * @param {Array} names an array of String property names to omit from the new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with properties from `names` not on it.\n * @see R.pick\n * @example\n *\n *      R.omit(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, c: 3}\n */\nvar omit = /*#__PURE__*/_curry2(function omit(names, obj) {\n  var result = {};\n  var index = {};\n  var idx = 0;\n  var len = names.length;\n\n  while (idx < len) {\n    index[names[idx]] = 1;\n    idx += 1;\n  }\n\n  for (var prop in obj) {\n    if (!index.hasOwnProperty(prop)) {\n      result[prop] = obj[prop];\n    }\n  }\n  return result;\n});\nexport default omit;","import _arity from './internal/_arity';\nimport _curry1 from './internal/_curry1';\n\n/**\n * Accepts a function `fn` and returns a function that guards invocation of\n * `fn` such that `fn` can only ever be called once, no matter how many times\n * the returned function is invoked. The first value calculated is returned in\n * subsequent invocations.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a... -> b) -> (a... -> b)\n * @param {Function} fn The function to wrap in a call-only-once wrapper.\n * @return {Function} The wrapped function.\n * @example\n *\n *      var addOneOnce = R.once(x => x + 1);\n *      addOneOnce(10); //=> 11\n *      addOneOnce(addOneOnce(50)); //=> 11\n */\nvar once = /*#__PURE__*/_curry1(function once(fn) {\n  var called = false;\n  var result;\n  return _arity(fn.length, function () {\n    if (called) {\n      return result;\n    }\n    called = true;\n    result = fn.apply(this, arguments);\n    return result;\n  });\n});\nexport default once;","import _curry3 from './internal/_curry3';\n\n// `Identity` is a functor that holds a single value, where `map` simply\n// transforms the held value with the provided function.\nvar Identity = function (x) {\n  return { value: x, map: function (f) {\n      return Identity(f(x));\n    } };\n};\n\n/**\n * Returns the result of \"setting\" the portion of the given data structure\n * focused by the given lens to the result of applying the given function to\n * the focused value.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> (a -> a) -> s -> s\n * @param {Lens} lens\n * @param {*} v\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      var headLens = R.lensIndex(0);\n *\n *      R.over(headLens, R.toUpper, ['foo', 'bar', 'baz']); //=> ['FOO', 'bar', 'baz']\n */\nvar over = /*#__PURE__*/_curry3(function over(lens, f, x) {\n  // The value returned by the getter function is first transformed with `f`,\n  // then set as the value of an `Identity`. This is then mapped over with the\n  // setter function of the lens.\n  return lens(function (y) {\n    return Identity(f(y));\n  })(x).value;\n});\nexport default over;","import _curry2 from './internal/_curry2';\n\n/**\n * Takes two arguments, `fst` and `snd`, and returns `[fst, snd]`.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category List\n * @sig a -> b -> (a,b)\n * @param {*} fst\n * @param {*} snd\n * @return {Array}\n * @see R.objOf, R.of\n * @example\n *\n *      R.pair('foo', 'bar'); //=> ['foo', 'bar']\n */\nvar pair = /*#__PURE__*/_curry2(function pair(fst, snd) {\n  return [fst, snd];\n});\nexport default pair;","import _arity from './_arity';\nimport _curry2 from './_curry2';\n\nexport default function _createPartialApplicator(concat) {\n  return _curry2(function (fn, args) {\n    return _arity(Math.max(0, fn.length - args.length), function () {\n      return fn.apply(this, concat(args, arguments));\n    });\n  });\n}","import _concat from './internal/_concat';\nimport _createPartialApplicator from './internal/_createPartialApplicator';\n\n/**\n * Takes a function `f` and a list of arguments, and returns a function `g`.\n * When applied, `g` returns the result of applying `f` to the arguments\n * provided initially followed by the arguments provided to `g`.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a, b, c, ..., n) -> x) -> [a, b, c, ...] -> ((d, e, f, ..., n) -> x)\n * @param {Function} f\n * @param {Array} args\n * @return {Function}\n * @see R.partialRight\n * @example\n *\n *      var multiply2 = (a, b) => a * b;\n *      var double = R.partial(multiply2, [2]);\n *      double(2); //=> 4\n *\n *      var greet = (salutation, title, firstName, lastName) =>\n *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n *\n *      var sayHello = R.partial(greet, ['Hello']);\n *      var sayHelloToMs = R.partial(sayHello, ['Ms.']);\n *      sayHelloToMs('Jane', 'Jones'); //=> 'Hello, Ms. Jane Jones!'\n * @symb R.partial(f, [a, b])(c, d) = f(a, b, c, d)\n */\nvar partial = /*#__PURE__*/_createPartialApplicator(_concat);\nexport default partial;","import _concat from './internal/_concat';\nimport _createPartialApplicator from './internal/_createPartialApplicator';\nimport flip from './flip';\n\n/**\n * Takes a function `f` and a list of arguments, and returns a function `g`.\n * When applied, `g` returns the result of applying `f` to the arguments\n * provided to `g` followed by the arguments provided initially.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a, b, c, ..., n) -> x) -> [d, e, f, ..., n] -> ((a, b, c, ...) -> x)\n * @param {Function} f\n * @param {Array} args\n * @return {Function}\n * @see R.partial\n * @example\n *\n *      var greet = (salutation, title, firstName, lastName) =>\n *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n *\n *      var greetMsJaneJones = R.partialRight(greet, ['Ms.', 'Jane', 'Jones']);\n *\n *      greetMsJaneJones('Hello'); //=> 'Hello, Ms. Jane Jones!'\n * @symb R.partialRight(f, [a, b])(c, d) = f(c, d, a, b)\n */\nvar partialRight = /*#__PURE__*/_createPartialApplicator( /*#__PURE__*/flip(_concat));\nexport default partialRight;","import filter from './filter';\nimport juxt from './juxt';\nimport reject from './reject';\n\n/**\n * Takes a predicate and a list or other `Filterable` object and returns the\n * pair of filterable objects of the same type of elements which do and do not\n * satisfy, the predicate, respectively. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> [f a, f a]\n * @param {Function} pred A predicate to determine which side the element belongs to.\n * @param {Array} filterable the list (or other filterable) to partition.\n * @return {Array} An array, containing first the subset of elements that satisfy the\n *         predicate, and second the subset of elements that do not satisfy.\n * @see R.filter, R.reject\n * @example\n *\n *      R.partition(R.contains('s'), ['sss', 'ttt', 'foo', 'bars']);\n *      // => [ [ 'sss', 'bars' ],  [ 'ttt', 'foo' ] ]\n *\n *      R.partition(R.contains('s'), { a: 'sss', b: 'ttt', foo: 'bars' });\n *      // => [ { a: 'sss', foo: 'bars' }, { b: 'ttt' }  ]\n */\nvar partition = /*#__PURE__*/juxt([filter, reject]);\nexport default partition;","import _curry3 from './internal/_curry3';\nimport equals from './equals';\nimport path from './path';\n\n/**\n * Determines whether a nested path on an object has a specific value, in\n * [`R.equals`](#equals) terms. Most likely used to filter a list.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Relation\n * @typedefn Idx = String | Int\n * @sig [Idx] -> a -> {a} -> Boolean\n * @param {Array} path The path of the nested property to use\n * @param {*} val The value to compare the nested property with\n * @param {Object} obj The object to check the nested property in\n * @return {Boolean} `true` if the value equals the nested object property,\n *         `false` otherwise.\n * @example\n *\n *      var user1 = { address: { zipCode: 90210 } };\n *      var user2 = { address: { zipCode: 55555 } };\n *      var user3 = { name: 'Bob' };\n *      var users = [ user1, user2, user3 ];\n *      var isFamous = R.pathEq(['address', 'zipCode'], 90210);\n *      R.filter(isFamous, users); //=> [ user1 ]\n */\nvar pathEq = /*#__PURE__*/_curry3(function pathEq(_path, val, obj) {\n  return equals(path(_path, obj), val);\n});\nexport default pathEq;","import _curry3 from './internal/_curry3';\nimport defaultTo from './defaultTo';\nimport path from './path';\n\n/**\n * If the given, non-null object has a value at the given path, returns the\n * value at that path. Otherwise returns the provided default value.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig a -> [Idx] -> {a} -> a\n * @param {*} d The default value.\n * @param {Array} p The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path` of the supplied object or the default value.\n * @example\n *\n *      R.pathOr('N/A', ['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.pathOr('N/A', ['a', 'b'], {c: {b: 2}}); //=> \"N/A\"\n */\nvar pathOr = /*#__PURE__*/_curry3(function pathOr(d, p, obj) {\n  return defaultTo(d, path(p, obj));\n});\nexport default pathOr;","import _curry3 from './internal/_curry3';\nimport path from './path';\n\n/**\n * Returns `true` if the specified object property at given path satisfies the\n * given predicate; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Logic\n * @typedefn Idx = String | Int\n * @sig (a -> Boolean) -> [Idx] -> {a} -> Boolean\n * @param {Function} pred\n * @param {Array} propPath\n * @param {*} obj\n * @return {Boolean}\n * @see R.propSatisfies, R.path\n * @example\n *\n *      R.pathSatisfies(y => y > 0, ['x', 'y'], {x: {y: 2}}); //=> true\n */\nvar pathSatisfies = /*#__PURE__*/_curry3(function pathSatisfies(pred, propPath, obj) {\n  return propPath.length > 0 && pred(path(propPath, obj));\n});\nexport default pathSatisfies;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns a partial copy of an object containing only the keys specified. If\n * the key does not exist, the property is ignored.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> {k: v}\n * @param {Array} names an array of String property names to copy onto a new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties from `names` on it.\n * @see R.omit, R.props\n * @example\n *\n *      R.pick(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n *      R.pick(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1}\n */\nvar pick = /*#__PURE__*/_curry2(function pick(names, obj) {\n  var result = {};\n  var idx = 0;\n  while (idx < names.length) {\n    if (names[idx] in obj) {\n      result[names[idx]] = obj[names[idx]];\n    }\n    idx += 1;\n  }\n  return result;\n});\nexport default pick;","import _curry2 from './internal/_curry2';\n\n/**\n * Similar to `pick` except that this one includes a `key: undefined` pair for\n * properties that don't exist.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> {k: v}\n * @param {Array} names an array of String property names to copy onto a new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties from `names` on it.\n * @see R.pick\n * @example\n *\n *      R.pickAll(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n *      R.pickAll(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, e: undefined, f: undefined}\n */\nvar pickAll = /*#__PURE__*/_curry2(function pickAll(names, obj) {\n  var result = {};\n  var idx = 0;\n  var len = names.length;\n  while (idx < len) {\n    var name = names[idx];\n    result[name] = obj[name];\n    idx += 1;\n  }\n  return result;\n});\nexport default pickAll;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns a partial copy of an object containing only the keys that satisfy\n * the supplied predicate.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @sig ((v, k) -> Boolean) -> {k: v} -> {k: v}\n * @param {Function} pred A predicate to determine whether or not a key\n *        should be included on the output object.\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties that satisfy `pred`\n *         on it.\n * @see R.pick, R.filter\n * @example\n *\n *      var isUpperCase = (val, key) => key.toUpperCase() === key;\n *      R.pickBy(isUpperCase, {a: 1, b: 2, A: 3, B: 4}); //=> {A: 3, B: 4}\n */\nvar pickBy = /*#__PURE__*/_curry2(function pickBy(test, obj) {\n  var result = {};\n  for (var prop in obj) {\n    if (test(obj[prop], prop, obj)) {\n      result[prop] = obj[prop];\n    }\n  }\n  return result;\n});\nexport default pickBy;","import composeK from './composeK';\nimport reverse from './reverse';\n\n/**\n * Returns the left-to-right Kleisli composition of the provided functions,\n * each of which must return a value of a type supported by [`chain`](#chain).\n *\n * `R.pipeK(f, g, h)` is equivalent to `R.pipe(f, R.chain(g), R.chain(h))`.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Function\n * @sig Chain m => ((a -> m b), (b -> m c), ..., (y -> m z)) -> (a -> m z)\n * @param {...Function}\n * @return {Function}\n * @see R.composeK\n * @example\n *\n *      //  parseJson :: String -> Maybe *\n *      //  get :: String -> Object -> Maybe *\n *\n *      //  getStateCode :: Maybe String -> Maybe String\n *      var getStateCode = R.pipeK(\n *        parseJson,\n *        get('user'),\n *        get('address'),\n *        get('state'),\n *        R.compose(Maybe.of, R.toUpper)\n *      );\n *\n *      getStateCode('{\"user\":{\"address\":{\"state\":\"ny\"}}}');\n *      //=> Just('NY')\n *      getStateCode('[Invalid JSON]');\n *      //=> Nothing()\n * @symb R.pipeK(f, g, h)(a) = R.chain(h, R.chain(g, f(a)))\n */\nexport default function pipeK() {\n  if (arguments.length === 0) {\n    throw new Error('pipeK requires at least one argument');\n  }\n  return composeK.apply(this, reverse(arguments));\n}","import _concat from './internal/_concat';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Returns a new list with the given element at the front, followed by the\n * contents of the list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} el The item to add to the head of the output list.\n * @param {Array} list The array to add to the tail of the output list.\n * @return {Array} A new array.\n * @see R.append\n * @example\n *\n *      R.prepend('fee', ['fi', 'fo', 'fum']); //=> ['fee', 'fi', 'fo', 'fum']\n */\nvar prepend = /*#__PURE__*/_curry2(function prepend(el, list) {\n  return _concat([el], list);\n});\nexport default prepend;","import multiply from './multiply';\nimport reduce from './reduce';\n\n/**\n * Multiplies together all the elements of a list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list An array of numbers\n * @return {Number} The product of all the numbers in the list.\n * @see R.reduce\n * @example\n *\n *      R.product([2,4,6,8,100,1]); //=> 38400\n */\nvar product = /*#__PURE__*/reduce(multiply, 1);\nexport default product;","import _curry2 from './internal/_curry2';\nimport curryN from './curryN';\n\n/**\n * Accepts a function `fn` and a list of transformer functions and returns a\n * new curried function. When the new function is invoked, it calls the\n * function `fn` with parameters consisting of the result of calling each\n * supplied handler on successive arguments to the new function.\n *\n * If more arguments are passed to the returned function than transformer\n * functions, those arguments are passed directly to `fn` as additional\n * parameters. If you expect additional arguments that don't need to be\n * transformed, although you can ignore them, it's best to pass an identity\n * function so that the new function reports the correct arity.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((x1, x2, ...) -> z) -> [(a -> x1), (b -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} fn The function to wrap.\n * @param {Array} transformers A list of transformer functions\n * @return {Function} The wrapped function.\n * @see R.converge\n * @example\n *\n *      R.useWith(Math.pow, [R.identity, R.identity])(3, 4); //=> 81\n *      R.useWith(Math.pow, [R.identity, R.identity])(3)(4); //=> 81\n *      R.useWith(Math.pow, [R.dec, R.inc])(3, 4); //=> 32\n *      R.useWith(Math.pow, [R.dec, R.inc])(3)(4); //=> 32\n * @symb R.useWith(f, [g, h])(a, b) = f(g(a), h(b))\n */\nvar useWith = /*#__PURE__*/_curry2(function useWith(fn, transformers) {\n  return curryN(transformers.length, function () {\n    var args = [];\n    var idx = 0;\n    while (idx < transformers.length) {\n      args.push(transformers[idx].call(this, arguments[idx]));\n      idx += 1;\n    }\n    return fn.apply(this, args.concat(Array.prototype.slice.call(arguments, transformers.length)));\n  });\n});\nexport default useWith;","import _map from './internal/_map';\nimport identity from './identity';\nimport pickAll from './pickAll';\nimport useWith from './useWith';\n\n/**\n * Reasonable analog to SQL `select` statement.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @category Relation\n * @sig [k] -> [{k: v}] -> [{k: v}]\n * @param {Array} props The property names to project\n * @param {Array} objs The objects to query\n * @return {Array} An array of objects with just the `props` properties.\n * @example\n *\n *      var abby = {name: 'Abby', age: 7, hair: 'blond', grade: 2};\n *      var fred = {name: 'Fred', age: 12, hair: 'brown', grade: 7};\n *      var kids = [abby, fred];\n *      R.project(['name', 'grade'], kids); //=> [{name: 'Abby', grade: 2}, {name: 'Fred', grade: 7}]\n */\nvar project = /*#__PURE__*/useWith(_map, [pickAll, identity]); // passing `identity` gives correct arity\nexport default project;","import _curry3 from './internal/_curry3';\nimport equals from './equals';\n\n/**\n * Returns `true` if the specified object property is equal, in\n * [`R.equals`](#equals) terms, to the given value; `false` otherwise.\n * You can test multiple properties with [`R.where`](#where).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig String -> a -> Object -> Boolean\n * @param {String} name\n * @param {*} val\n * @param {*} obj\n * @return {Boolean}\n * @see R.whereEq, R.propSatisfies, R.equals\n * @example\n *\n *      var abby = {name: 'Abby', age: 7, hair: 'blond'};\n *      var fred = {name: 'Fred', age: 12, hair: 'brown'};\n *      var rusty = {name: 'Rusty', age: 10, hair: 'brown'};\n *      var alois = {name: 'Alois', age: 15, disposition: 'surly'};\n *      var kids = [abby, fred, rusty, alois];\n *      var hasBrownHair = R.propEq('hair', 'brown');\n *      R.filter(hasBrownHair, kids); //=> [fred, rusty]\n */\nvar propEq = /*#__PURE__*/_curry3(function propEq(name, val, obj) {\n  return equals(val, obj[name]);\n});\nexport default propEq;","import _curry3 from './internal/_curry3';\nimport is from './is';\n\n/**\n * Returns `true` if the specified object property is of the given type;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Type\n * @sig Type -> String -> Object -> Boolean\n * @param {Function} type\n * @param {String} name\n * @param {*} obj\n * @return {Boolean}\n * @see R.is, R.propSatisfies\n * @example\n *\n *      R.propIs(Number, 'x', {x: 1, y: 2});  //=> true\n *      R.propIs(Number, 'x', {x: 'foo'});    //=> false\n *      R.propIs(Number, 'x', {});            //=> false\n */\nvar propIs = /*#__PURE__*/_curry3(function propIs(type, name, obj) {\n  return is(type, obj[name]);\n});\nexport default propIs;","import _curry3 from './internal/_curry3';\nimport _has from './internal/_has';\n\n/**\n * If the given, non-null object has an own property with the specified name,\n * returns the value of that property. Otherwise returns the provided default\n * value.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Object\n * @sig a -> String -> Object -> a\n * @param {*} val The default value.\n * @param {String} p The name of the property to return.\n * @param {Object} obj The object to query.\n * @return {*} The value of given property of the supplied object or the default value.\n * @example\n *\n *      var alice = {\n *        name: 'ALICE',\n *        age: 101\n *      };\n *      var favorite = R.prop('favoriteLibrary');\n *      var favoriteWithDefault = R.propOr('Ramda', 'favoriteLibrary');\n *\n *      favorite(alice);  //=> undefined\n *      favoriteWithDefault(alice);  //=> 'Ramda'\n */\nvar propOr = /*#__PURE__*/_curry3(function propOr(val, p, obj) {\n  return obj != null && _has(p, obj) ? obj[p] : val;\n});\nexport default propOr;","import _curry3 from './internal/_curry3';\n\n/**\n * Returns `true` if the specified object property satisfies the given\n * predicate; `false` otherwise. You can test multiple properties with\n * [`R.where`](#where).\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Logic\n * @sig (a -> Boolean) -> String -> {String: a} -> Boolean\n * @param {Function} pred\n * @param {String} name\n * @param {*} obj\n * @return {Boolean}\n * @see R.where, R.propEq, R.propIs\n * @example\n *\n *      R.propSatisfies(x => x > 0, 'x', {x: 1, y: 2}); //=> true\n */\nvar propSatisfies = /*#__PURE__*/_curry3(function propSatisfies(pred, name, obj) {\n  return pred(obj[name]);\n});\nexport default propSatisfies;","import _curry2 from './internal/_curry2';\n\n/**\n * Acts as multiple `prop`: array of keys in, array of values out. Preserves\n * order.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> [v]\n * @param {Array} ps The property names to fetch\n * @param {Object} obj The object to query\n * @return {Array} The corresponding values or partially applied function.\n * @example\n *\n *      R.props(['x', 'y'], {x: 1, y: 2}); //=> [1, 2]\n *      R.props(['c', 'a', 'b'], {b: 2, a: 1}); //=> [undefined, 1, 2]\n *\n *      var fullName = R.compose(R.join(' '), R.props(['first', 'last']));\n *      fullName({last: 'Bullet-Tooth', age: 33, first: 'Tony'}); //=> 'Tony Bullet-Tooth'\n */\nvar props = /*#__PURE__*/_curry2(function props(ps, obj) {\n  var len = ps.length;\n  var out = [];\n  var idx = 0;\n\n  while (idx < len) {\n    out[idx] = obj[ps[idx]];\n    idx += 1;\n  }\n\n  return out;\n});\nexport default props;","import _curry2 from './internal/_curry2';\nimport _isNumber from './internal/_isNumber';\n\n/**\n * Returns a list of numbers from `from` (inclusive) to `to` (exclusive).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> Number -> [Number]\n * @param {Number} from The first number in the list.\n * @param {Number} to One more than the last number in the list.\n * @return {Array} The list of numbers in tthe set `[a, b)`.\n * @example\n *\n *      R.range(1, 5);    //=> [1, 2, 3, 4]\n *      R.range(50, 53);  //=> [50, 51, 52]\n */\nvar range = /*#__PURE__*/_curry2(function range(from, to) {\n  if (!(_isNumber(from) && _isNumber(to))) {\n    throw new TypeError('Both arguments to range must be numbers');\n  }\n  var result = [];\n  var n = from;\n  while (n < to) {\n    result.push(n);\n    n += 1;\n  }\n  return result;\n});\nexport default range;","import _curry3 from './internal/_curry3';\n\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * Similar to [`reduce`](#reduce), except moves through the input list from the\n * right to the left.\n *\n * The iterator function receives two values: *(value, acc)*, while the arguments'\n * order of `reduce`'s iterator function is *(acc, value)*.\n *\n * Note: `R.reduceRight` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduceRight` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight#Description\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> b) -> b -> [a] -> b\n * @param {Function} fn The iterator function. Receives two values, the current element from the array\n *        and the accumulator.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.addIndex\n * @example\n *\n *      R.reduceRight(R.subtract, 0, [1, 2, 3, 4]) // => (1 - (2 - (3 - (4 - 0)))) = -2\n *      //    -               -2\n *      //   / \\              / \\\n *      //  1   -            1   3\n *      //     / \\              / \\\n *      //    2   -     ==>    2  -1\n *      //       / \\              / \\\n *      //      3   -            3   4\n *      //         / \\              / \\\n *      //        4   0            4   0\n *\n * @symb R.reduceRight(f, a, [b, c, d]) = f(b, f(c, f(d, a)))\n */\nvar reduceRight = /*#__PURE__*/_curry3(function reduceRight(fn, acc, list) {\n  var idx = list.length - 1;\n  while (idx >= 0) {\n    acc = fn(list[idx], acc);\n    idx -= 1;\n  }\n  return acc;\n});\nexport default reduceRight;","import _curryN from './internal/_curryN';\nimport _reduce from './internal/_reduce';\nimport _reduced from './internal/_reduced';\n\n/**\n * Like [`reduce`](#reduce), `reduceWhile` returns a single item by iterating\n * through the list, successively calling the iterator function. `reduceWhile`\n * also takes a predicate that is evaluated before each step. If the predicate\n * returns `false`, it \"short-circuits\" the iteration and returns the current\n * value of the accumulator.\n *\n * @func\n * @memberOf R\n * @since v0.22.0\n * @category List\n * @sig ((a, b) -> Boolean) -> ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} pred The predicate. It is passed the accumulator and the\n *        current element.\n * @param {Function} fn The iterator function. Receives two values, the\n *        accumulator and the current element.\n * @param {*} a The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.reduced\n * @example\n *\n *      var isOdd = (acc, x) => x % 2 === 1;\n *      var xs = [1, 3, 5, 60, 777, 800];\n *      R.reduceWhile(isOdd, R.add, 0, xs); //=> 9\n *\n *      var ys = [2, 4, 6]\n *      R.reduceWhile(isOdd, R.add, 111, ys); //=> 111\n */\nvar reduceWhile = /*#__PURE__*/_curryN(4, [], function _reduceWhile(pred, fn, a, list) {\n  return _reduce(function (acc, x) {\n    return pred(acc, x) ? fn(acc, x) : _reduced(acc);\n  }, a, list);\n});\nexport default reduceWhile;","import _curry1 from './internal/_curry1';\nimport _reduced from './internal/_reduced';\n\n/**\n * Returns a value wrapped to indicate that it is the final value of the reduce\n * and transduce functions. The returned value should be considered a black\n * box: the internal structure is not guaranteed to be stable.\n *\n * Note: this optimization is unavailable to functions not explicitly listed\n * above. For instance, it is not currently supported by\n * [`reduceRight`](#reduceRight).\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category List\n * @sig a -> *\n * @param {*} x The final value of the reduce.\n * @return {*} The wrapped value.\n * @see R.reduce, R.transduce\n * @example\n *\n *     R.reduce(\n *       (acc, item) => item > 3 ? R.reduced(acc) : acc.concat(item),\n *       [],\n *       [1, 2, 3, 4, 5]) // [1, 2, 3]\n */\nvar reduced = /*#__PURE__*/_curry1(_reduced);\nexport default reduced;","import _curry2 from './internal/_curry2';\n\n/**\n * Calls an input function `n` times, returning an array containing the results\n * of those function calls.\n *\n * `fn` is passed one argument: The current value of `n`, which begins at `0`\n * and is gradually incremented to `n - 1`.\n *\n * @func\n * @memberOf R\n * @since v0.2.3\n * @category List\n * @sig (Number -> a) -> Number -> [a]\n * @param {Function} fn The function to invoke. Passed one argument, the current value of `n`.\n * @param {Number} n A value between `0` and `n - 1`. Increments after each function call.\n * @return {Array} An array containing the return values of all calls to `fn`.\n * @see R.repeat\n * @example\n *\n *      R.times(R.identity, 5); //=> [0, 1, 2, 3, 4]\n * @symb R.times(f, 0) = []\n * @symb R.times(f, 1) = [f(0)]\n * @symb R.times(f, 2) = [f(0), f(1)]\n */\nvar times = /*#__PURE__*/_curry2(function times(fn, n) {\n  var len = Number(n);\n  var idx = 0;\n  var list;\n\n  if (len < 0 || isNaN(len)) {\n    throw new RangeError('n must be a non-negative number');\n  }\n  list = new Array(len);\n  while (idx < len) {\n    list[idx] = fn(idx);\n    idx += 1;\n  }\n  return list;\n});\nexport default times;","import _curry2 from './internal/_curry2';\nimport always from './always';\nimport times from './times';\n\n/**\n * Returns a fixed list of size `n` containing a specified identical value.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig a -> n -> [a]\n * @param {*} value The value to repeat.\n * @param {Number} n The desired size of the output list.\n * @return {Array} A new array containing `n` `value`s.\n * @see R.times\n * @example\n *\n *      R.repeat('hi', 5); //=> ['hi', 'hi', 'hi', 'hi', 'hi']\n *\n *      var obj = {};\n *      var repeatedObjs = R.repeat(obj, 5); //=> [{}, {}, {}, {}, {}]\n *      repeatedObjs[0] === repeatedObjs[1]; //=> true\n * @symb R.repeat(a, 0) = []\n * @symb R.repeat(a, 1) = [a]\n * @symb R.repeat(a, 2) = [a, a]\n */\nvar repeat = /*#__PURE__*/_curry2(function repeat(value, n) {\n  return times(always(value), n);\n});\nexport default repeat;","import _curry3 from './internal/_curry3';\n\n/**\n * Replace a substring or regex match in a string with a replacement.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category String\n * @sig RegExp|String -> String -> String -> String\n * @param {RegExp|String} pattern A regular expression or a substring to match.\n * @param {String} replacement The string to replace the matches with.\n * @param {String} str The String to do the search and replacement in.\n * @return {String} The result.\n * @example\n *\n *      R.replace('foo', 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *      R.replace(/foo/, 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *\n *      // Use the \"g\" (global) flag to replace all occurrences:\n *      R.replace(/foo/g, 'bar', 'foo foo foo'); //=> 'bar bar bar'\n */\nvar replace = /*#__PURE__*/_curry3(function replace(regex, replacement, str) {\n  return str.replace(regex, replacement);\n});\nexport default replace;","import _curry3 from './internal/_curry3';\n\n/**\n * Scan is similar to [`reduce`](#reduce), but returns a list of successively\n * reduced values from the left\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> [a]\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {Array} A list of all intermediately reduced values.\n * @see R.reduce\n * @example\n *\n *      var numbers = [1, 2, 3, 4];\n *      var factorials = R.scan(R.multiply, 1, numbers); //=> [1, 1, 2, 6, 24]\n * @symb R.scan(f, a, [b, c]) = [a, f(a, b), f(f(a, b), c)]\n */\nvar scan = /*#__PURE__*/_curry3(function scan(fn, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [acc];\n  while (idx < len) {\n    acc = fn(acc, list[idx]);\n    result[idx + 1] = acc;\n    idx += 1;\n  }\n  return result;\n});\nexport default scan;","import _curry2 from './internal/_curry2';\nimport ap from './ap';\nimport map from './map';\nimport prepend from './prepend';\nimport reduceRight from './reduceRight';\n\n/**\n * Transforms a [Traversable](https://github.com/fantasyland/fantasy-land#traversable)\n * of [Applicative](https://github.com/fantasyland/fantasy-land#applicative) into an\n * Applicative of Traversable.\n *\n * Dispatches to the `sequence` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (Applicative f, Traversable t) => (a -> f a) -> t (f a) -> f (t a)\n * @param {Function} of\n * @param {*} traversable\n * @return {*}\n * @see R.traverse\n * @example\n *\n *      R.sequence(Maybe.of, [Just(1), Just(2), Just(3)]);   //=> Just([1, 2, 3])\n *      R.sequence(Maybe.of, [Just(1), Just(2), Nothing()]); //=> Nothing()\n *\n *      R.sequence(R.of, Just([1, 2, 3])); //=> [Just(1), Just(2), Just(3)]\n *      R.sequence(R.of, Nothing());       //=> [Nothing()]\n */\nvar sequence = /*#__PURE__*/_curry2(function sequence(of, traversable) {\n  return typeof traversable.sequence === 'function' ? traversable.sequence(of) : reduceRight(function (x, acc) {\n    return ap(map(prepend, x), acc);\n  }, of([]), traversable);\n});\nexport default sequence;","import _curry3 from './internal/_curry3';\nimport always from './always';\nimport over from './over';\n\n/**\n * Returns the result of \"setting\" the portion of the given data structure\n * focused by the given lens to the given value.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> a -> s -> s\n * @param {Lens} lens\n * @param {*} v\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      var xLens = R.lensProp('x');\n *\n *      R.set(xLens, 4, {x: 1, y: 2});  //=> {x: 4, y: 2}\n *      R.set(xLens, 8, {x: 1, y: 2});  //=> {x: 8, y: 2}\n */\nvar set = /*#__PURE__*/_curry3(function set(lens, v, x) {\n  return over(lens, always(v), x);\n});\nexport default set;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns a copy of the list, sorted according to the comparator function,\n * which should accept two values at a time and return a negative number if the\n * first value is smaller, a positive number if it's larger, and zero if they\n * are equal. Please note that this is a **copy** of the list. It does not\n * modify the original.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, a) -> Number) -> [a] -> [a]\n * @param {Function} comparator A sorting function :: a -> b -> Int\n * @param {Array} list The list to sort\n * @return {Array} a new array with its elements sorted by the comparator function.\n * @example\n *\n *      var diff = function(a, b) { return a - b; };\n *      R.sort(diff, [4,2,7,5]); //=> [2, 4, 5, 7]\n */\nvar sort = /*#__PURE__*/_curry2(function sort(comparator, list) {\n  return Array.prototype.slice.call(list, 0).sort(comparator);\n});\nexport default sort;","import _curry2 from './internal/_curry2';\n\n/**\n * Sorts the list according to the supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord b => (a -> b) -> [a] -> [a]\n * @param {Function} fn\n * @param {Array} list The list to sort.\n * @return {Array} A new list sorted by the keys generated by `fn`.\n * @example\n *\n *      var sortByFirstItem = R.sortBy(R.prop(0));\n *      var sortByNameCaseInsensitive = R.sortBy(R.compose(R.toLower, R.prop('name')));\n *      var pairs = [[-1, 1], [-2, 2], [-3, 3]];\n *      sortByFirstItem(pairs); //=> [[-3, 3], [-2, 2], [-1, 1]]\n *      var alice = {\n *        name: 'ALICE',\n *        age: 101\n *      };\n *      var bob = {\n *        name: 'Bob',\n *        age: -10\n *      };\n *      var clara = {\n *        name: 'clara',\n *        age: 314.159\n *      };\n *      var people = [clara, bob, alice];\n *      sortByNameCaseInsensitive(people); //=> [alice, bob, clara]\n */\nvar sortBy = /*#__PURE__*/_curry2(function sortBy(fn, list) {\n  return Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    var aa = fn(a);\n    var bb = fn(b);\n    return aa < bb ? -1 : aa > bb ? 1 : 0;\n  });\n});\nexport default sortBy;","import _curry2 from './internal/_curry2';\n\n/**\n * Sorts a list according to a list of comparators.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Relation\n * @sig [(a, a) -> Number] -> [a] -> [a]\n * @param {Array} functions A list of comparator functions.\n * @param {Array} list The list to sort.\n * @return {Array} A new list sorted according to the comarator functions.\n * @example\n *\n *      var alice = {\n *        name: 'alice',\n *        age: 40\n *      };\n *      var bob = {\n *        name: 'bob',\n *        age: 30\n *      };\n *      var clara = {\n *        name: 'clara',\n *        age: 40\n *      };\n *      var people = [clara, bob, alice];\n *      var ageNameSort = R.sortWith([\n *        R.descend(R.prop('age')),\n *        R.ascend(R.prop('name'))\n *      ]);\n *      ageNameSort(people); //=> [alice, clara, bob]\n */\nvar sortWith = /*#__PURE__*/_curry2(function sortWith(fns, list) {\n  return Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    var result = 0;\n    var i = 0;\n    while (result === 0 && i < fns.length) {\n      result = fns[i](a, b);\n      i += 1;\n    }\n    return result;\n  });\n});\nexport default sortWith;","import invoker from './invoker';\n\n/**\n * Splits a string into an array of strings based on the given\n * separator.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category String\n * @sig (String | RegExp) -> String -> [String]\n * @param {String|RegExp} sep The pattern.\n * @param {String} str The string to separate into an array.\n * @return {Array} The array of strings from `str` separated by `str`.\n * @see R.join\n * @example\n *\n *      var pathComponents = R.split('/');\n *      R.tail(pathComponents('/usr/local/bin/node')); //=> ['usr', 'local', 'bin', 'node']\n *\n *      R.split('.', 'a.b.c.xyz.d'); //=> ['a', 'b', 'c', 'xyz', 'd']\n */\nvar split = /*#__PURE__*/invoker(1, 'split');\nexport default split;","import _curry2 from './internal/_curry2';\nimport length from './length';\nimport slice from './slice';\n\n/**\n * Splits a given list or string at a given index.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig Number -> [a] -> [[a], [a]]\n * @sig Number -> String -> [String, String]\n * @param {Number} index The index where the array/string is split.\n * @param {Array|String} array The array/string to be split.\n * @return {Array}\n * @example\n *\n *      R.splitAt(1, [1, 2, 3]);          //=> [[1], [2, 3]]\n *      R.splitAt(5, 'hello world');      //=> ['hello', ' world']\n *      R.splitAt(-1, 'foobar');          //=> ['fooba', 'r']\n */\nvar splitAt = /*#__PURE__*/_curry2(function splitAt(index, array) {\n  return [slice(0, index, array), slice(index, length(array), array)];\n});\nexport default splitAt;","import _curry2 from './internal/_curry2';\nimport slice from './slice';\n\n/**\n * Splits a collection into slices of the specified length.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [[a]]\n * @sig Number -> String -> [String]\n * @param {Number} n\n * @param {Array} list\n * @return {Array}\n * @example\n *\n *      R.splitEvery(3, [1, 2, 3, 4, 5, 6, 7]); //=> [[1, 2, 3], [4, 5, 6], [7]]\n *      R.splitEvery(3, 'foobarbaz'); //=> ['foo', 'bar', 'baz']\n */\nvar splitEvery = /*#__PURE__*/_curry2(function splitEvery(n, list) {\n  if (n <= 0) {\n    throw new Error('First argument to splitEvery must be a positive integer');\n  }\n  var result = [];\n  var idx = 0;\n  while (idx < list.length) {\n    result.push(slice(idx, idx += n, list));\n  }\n  return result;\n});\nexport default splitEvery;","import _curry2 from './internal/_curry2';\n\n/**\n * Takes a list and a predicate and returns a pair of lists with the following properties:\n *\n *  - the result of concatenating the two output lists is equivalent to the input list;\n *  - none of the elements of the first output list satisfies the predicate; and\n *  - if the second output list is non-empty, its first element satisfies the predicate.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [[a], [a]]\n * @param {Function} pred The predicate that determines where the array is split.\n * @param {Array} list The array to be split.\n * @return {Array}\n * @example\n *\n *      R.splitWhen(R.equals(2), [1, 2, 3, 1, 2, 3]);   //=> [[1], [2, 3, 1, 2, 3]]\n */\nvar splitWhen = /*#__PURE__*/_curry2(function splitWhen(pred, list) {\n  var idx = 0;\n  var len = list.length;\n  var prefix = [];\n\n  while (idx < len && !pred(list[idx])) {\n    prefix.push(list[idx]);\n    idx += 1;\n  }\n\n  return [prefix, Array.prototype.slice.call(list, idx)];\n});\nexport default splitWhen;","import _curry2 from './internal/_curry2';\nimport equals from './equals';\nimport take from './take';\n\n/**\n * Checks if a list starts with the provided values\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category List\n * @sig [a] -> Boolean\n * @sig String -> Boolean\n * @param {*} prefix\n * @param {*} list\n * @return {Boolean}\n * @example\n *\n *      R.startsWith('a', 'abc')                //=> true\n *      R.startsWith('b', 'abc')                //=> false\n *      R.startsWith(['a'], ['a', 'b', 'c'])    //=> true\n *      R.startsWith(['b'], ['a', 'b', 'c'])    //=> false\n */\nvar startsWith = /*#__PURE__*/_curry2(function (prefix, list) {\n  return equals(take(prefix.length, list), prefix);\n});\nexport default startsWith;","import _curry2 from './internal/_curry2';\n\n/**\n * Subtracts its second argument from its first argument.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a - b`.\n * @see R.add\n * @example\n *\n *      R.subtract(10, 8); //=> 2\n *\n *      var minus5 = R.subtract(R.__, 5);\n *      minus5(17); //=> 12\n *\n *      var complementaryAngle = R.subtract(90);\n *      complementaryAngle(30); //=> 60\n *      complementaryAngle(72); //=> 18\n */\nvar subtract = /*#__PURE__*/_curry2(function subtract(a, b) {\n  return Number(a) - Number(b);\n});\nexport default subtract;","import _curry2 from './internal/_curry2';\nimport concat from './concat';\nimport difference from './difference';\n\n/**\n * Finds the set (i.e. no duplicates) of all elements contained in the first or\n * second list, but not both.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` or `list2`, but not both.\n * @see R.symmetricDifferenceWith, R.difference, R.differenceWith\n * @example\n *\n *      R.symmetricDifference([1,2,3,4], [7,6,5,4,3]); //=> [1,2,7,6,5]\n *      R.symmetricDifference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5,1,2]\n */\nvar symmetricDifference = /*#__PURE__*/_curry2(function symmetricDifference(list1, list2) {\n  return concat(difference(list1, list2), difference(list2, list1));\n});\nexport default symmetricDifference;","import _curry3 from './internal/_curry3';\nimport concat from './concat';\nimport differenceWith from './differenceWith';\n\n/**\n * Finds the set (i.e. no duplicates) of all elements contained in the first or\n * second list, but not both. Duplication is determined according to the value\n * returned by applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` or `list2`, but not both.\n * @see R.symmetricDifference, R.difference, R.differenceWith\n * @example\n *\n *      var eqA = R.eqBy(R.prop('a'));\n *      var l1 = [{a: 1}, {a: 2}, {a: 3}, {a: 4}];\n *      var l2 = [{a: 3}, {a: 4}, {a: 5}, {a: 6}];\n *      R.symmetricDifferenceWith(eqA, l1, l2); //=> [{a: 1}, {a: 2}, {a: 5}, {a: 6}]\n */\nvar symmetricDifferenceWith = /*#__PURE__*/_curry3(function symmetricDifferenceWith(pred, list1, list2) {\n  return concat(differenceWith(pred, list1, list2), differenceWith(pred, list2, list1));\n});\nexport default symmetricDifferenceWith;","import _curry2 from './internal/_curry2';\nimport slice from './slice';\n\n/**\n * Returns a new list containing the last `n` elements of a given list, passing\n * each value to the supplied predicate function, and terminating when the\n * predicate function returns `false`. Excludes the element that caused the\n * predicate function to fail. The predicate function is passed one argument:\n * *(value)*.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.dropLastWhile, R.addIndex\n * @example\n *\n *      var isNotOne = x => x !== 1;\n *\n *      R.takeLastWhile(isNotOne, [1, 2, 3, 4]); //=> [2, 3, 4]\n *\n *      R.takeLastWhile(x => x !== 'R' , 'Ramda'); //=> 'amda'\n */\nvar takeLastWhile = /*#__PURE__*/_curry2(function takeLastWhile(fn, xs) {\n  var idx = xs.length - 1;\n  while (idx >= 0 && fn(xs[idx])) {\n    idx -= 1;\n  }\n  return slice(idx + 1, Infinity, xs);\n});\nexport default takeLastWhile;","import _curry2 from './_curry2';\nimport _reduced from './_reduced';\nimport _xfBase from './_xfBase';\n\nvar XTakeWhile = /*#__PURE__*/function () {\n  function XTakeWhile(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XTakeWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XTakeWhile.prototype['@@transducer/result'] = _xfBase.result;\n  XTakeWhile.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : _reduced(result);\n  };\n\n  return XTakeWhile;\n}();\n\nvar _xtakeWhile = /*#__PURE__*/_curry2(function _xtakeWhile(f, xf) {\n  return new XTakeWhile(f, xf);\n});\nexport default _xtakeWhile;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xtakeWhile from './internal/_xtakeWhile';\nimport slice from './slice';\n\n/**\n * Returns a new list containing the first `n` elements of a given list,\n * passing each value to the supplied predicate function, and terminating when\n * the predicate function returns `false`. Excludes the element that caused the\n * predicate function to fail. The predicate function is passed one argument:\n * *(value)*.\n *\n * Dispatches to the `takeWhile` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.dropWhile, R.transduce, R.addIndex\n * @example\n *\n *      var isNotFour = x => x !== 4;\n *\n *      R.takeWhile(isNotFour, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3]\n *\n *      R.takeWhile(x => x !== 'd' , 'Ramda'); //=> 'Ram'\n */\nvar takeWhile = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['takeWhile'], _xtakeWhile, function takeWhile(fn, xs) {\n  var idx = 0;\n  var len = xs.length;\n  while (idx < len && fn(xs[idx])) {\n    idx += 1;\n  }\n  return slice(0, idx, xs);\n}));\nexport default takeWhile;","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XTap = /*#__PURE__*/function () {\n  function XTap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XTap.prototype['@@transducer/init'] = _xfBase.init;\n  XTap.prototype['@@transducer/result'] = _xfBase.result;\n  XTap.prototype['@@transducer/step'] = function (result, input) {\n    this.f(input);\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XTap;\n}();\n\nvar _xtap = /*#__PURE__*/_curry2(function _xtap(f, xf) {\n  return new XTap(f, xf);\n});\nexport default _xtap;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xtap from './internal/_xtap';\n\n/**\n * Runs the given function with the supplied object, then returns the object.\n *\n * Acts as a transducer if a transformer is given as second parameter.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a -> *) -> a -> a\n * @param {Function} fn The function to call with `x`. The return value of `fn` will be thrown away.\n * @param {*} x\n * @return {*} `x`.\n * @example\n *\n *      var sayX = x => console.log('x is ' + x);\n *      R.tap(sayX, 100); //=> 100\n *      // logs 'x is 100'\n * @symb R.tap(f, a) = a\n */\nvar tap = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xtap, function tap(fn, x) {\n  fn(x);\n  return x;\n}));\nexport default tap;","export default function _isRegExp(x) {\n  return Object.prototype.toString.call(x) === '[object RegExp]';\n}","import _cloneRegExp from './internal/_cloneRegExp';\nimport _curry2 from './internal/_curry2';\nimport _isRegExp from './internal/_isRegExp';\nimport toString from './toString';\n\n/**\n * Determines whether a given string matches a given regular expression.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category String\n * @sig RegExp -> String -> Boolean\n * @param {RegExp} pattern\n * @param {String} str\n * @return {Boolean}\n * @see R.match\n * @example\n *\n *      R.test(/^x/, 'xyz'); //=> true\n *      R.test(/^y/, 'xyz'); //=> false\n */\nvar test = /*#__PURE__*/_curry2(function test(pattern, str) {\n  if (!_isRegExp(pattern)) {\n    throw new TypeError('‘test’ requires a value of type RegExp as its first argument; received ' + toString(pattern));\n  }\n  return _cloneRegExp(pattern).test(str);\n});\nexport default test;","import invoker from './invoker';\n\n/**\n * The lower case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to lower case.\n * @return {String} The lower case version of `str`.\n * @see R.toUpper\n * @example\n *\n *      R.toLower('XYZ'); //=> 'xyz'\n */\nvar toLower = /*#__PURE__*/invoker(0, 'toLowerCase');\nexport default toLower;","import _curry1 from './internal/_curry1';\nimport _has from './internal/_has';\n\n/**\n * Converts an object into an array of key, value arrays. Only the object's\n * own properties are used.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Object\n * @sig {String: *} -> [[String,*]]\n * @param {Object} obj The object to extract from\n * @return {Array} An array of key, value arrays from the object's own properties.\n * @see R.fromPairs\n * @example\n *\n *      R.toPairs({a: 1, b: 2, c: 3}); //=> [['a', 1], ['b', 2], ['c', 3]]\n */\nvar toPairs = /*#__PURE__*/_curry1(function toPairs(obj) {\n  var pairs = [];\n  for (var prop in obj) {\n    if (_has(prop, obj)) {\n      pairs[pairs.length] = [prop, obj[prop]];\n    }\n  }\n  return pairs;\n});\nexport default toPairs;","import _curry1 from './internal/_curry1';\n\n/**\n * Converts an object into an array of key, value arrays. The object's own\n * properties and prototype properties are used. Note that the order of the\n * output array is not guaranteed to be consistent across different JS\n * platforms.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Object\n * @sig {String: *} -> [[String,*]]\n * @param {Object} obj The object to extract from\n * @return {Array} An array of key, value arrays from the object's own\n *         and prototype properties.\n * @example\n *\n *      var F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      var f = new F();\n *      R.toPairsIn(f); //=> [['x','X'], ['y','Y']]\n */\nvar toPairsIn = /*#__PURE__*/_curry1(function toPairsIn(obj) {\n  var pairs = [];\n  for (var prop in obj) {\n    pairs[pairs.length] = [prop, obj[prop]];\n  }\n  return pairs;\n});\nexport default toPairsIn;","import invoker from './invoker';\n\n/**\n * The upper case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to upper case.\n * @return {String} The upper case version of `str`.\n * @see R.toLower\n * @example\n *\n *      R.toUpper('abc'); //=> 'ABC'\n */\nvar toUpper = /*#__PURE__*/invoker(0, 'toUpperCase');\nexport default toUpper;","import _reduce from './internal/_reduce';\nimport _xwrap from './internal/_xwrap';\nimport curryN from './curryN';\n\n/**\n * Initializes a transducer using supplied iterator function. Returns a single\n * item by iterating through the list, successively calling the transformed\n * iterator function and passing it an accumulator value and the current value\n * from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It will be\n * wrapped as a transformer to initialize the transducer. A transformer can be\n * passed directly in place of an iterator function. In both cases, iteration\n * may be stopped early with the [`R.reduced`](#reduced) function.\n *\n * A transducer is a function that accepts a transformer and returns a\n * transformer and can be composed directly.\n *\n * A transformer is an an object that provides a 2-arity reducing iterator\n * function, step, 0-arity initial value function, init, and 1-arity result\n * extraction function, result. The step function is used as the iterator\n * function in reduce. The result function is used to convert the final\n * accumulator into the return type and in most cases is\n * [`R.identity`](#identity). The init function can be used to provide an\n * initial accumulator, but is ignored by transduce.\n *\n * The iteration is performed with [`R.reduce`](#reduce) after initializing the transducer.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig (c -> c) -> ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array. Wrapped as transformer, if necessary, and used to\n *        initialize the transducer\n * @param {*} acc The initial accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.reduced, R.into\n * @example\n *\n *      var numbers = [1, 2, 3, 4];\n *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n *      R.transduce(transducer, R.flip(R.append), [], numbers); //=> [2, 3]\n *\n *      var isOdd = (x) => x % 2 === 1;\n *      var firstOddTransducer = R.compose(R.filter(isOdd), R.take(1));\n *      R.transduce(firstOddTransducer, R.flip(R.append), [], R.range(0, 100)); //=> [1]\n */\nvar transduce = /*#__PURE__*/curryN(4, function transduce(xf, fn, acc, list) {\n  return _reduce(xf(typeof fn === 'function' ? _xwrap(fn) : fn), acc, list);\n});\nexport default transduce;","import _curry1 from './internal/_curry1';\n\n/**\n * Transposes the rows and columns of a 2D list.\n * When passed a list of `n` lists of length `x`,\n * returns a list of `x` lists of length `n`.\n *\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig [[a]] -> [[a]]\n * @param {Array} list A 2D list\n * @return {Array} A 2D list\n * @example\n *\n *      R.transpose([[1, 'a'], [2, 'b'], [3, 'c']]) //=> [[1, 2, 3], ['a', 'b', 'c']]\n *      R.transpose([[1, 2, 3], ['a', 'b', 'c']]) //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n *\n *      // If some of the rows are shorter than the following rows, their elements are skipped:\n *      R.transpose([[10, 11], [20], [], [30, 31, 32]]) //=> [[10, 20, 30], [11, 31], [32]]\n * @symb R.transpose([[a], [b], [c]]) = [a, b, c]\n * @symb R.transpose([[a, b], [c, d]]) = [[a, c], [b, d]]\n * @symb R.transpose([[a, b], [c]]) = [[a, c], [b]]\n */\nvar transpose = /*#__PURE__*/_curry1(function transpose(outerlist) {\n  var i = 0;\n  var result = [];\n  while (i < outerlist.length) {\n    var innerlist = outerlist[i];\n    var j = 0;\n    while (j < innerlist.length) {\n      if (typeof result[j] === 'undefined') {\n        result[j] = [];\n      }\n      result[j].push(innerlist[j]);\n      j += 1;\n    }\n    i += 1;\n  }\n  return result;\n});\nexport default transpose;","import _curry3 from './internal/_curry3';\nimport map from './map';\nimport sequence from './sequence';\n\n/**\n * Maps an [Applicative](https://github.com/fantasyland/fantasy-land#applicative)-returning\n * function over a [Traversable](https://github.com/fantasyland/fantasy-land#traversable),\n * then uses [`sequence`](#sequence) to transform the resulting Traversable of Applicative\n * into an Applicative of Traversable.\n *\n * Dispatches to the `traverse` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (Applicative f, Traversable t) => (a -> f a) -> (a -> f b) -> t a -> f (t b)\n * @param {Function} of\n * @param {Function} f\n * @param {*} traversable\n * @return {*}\n * @see R.sequence\n * @example\n *\n *      // Returns `Nothing` if the given divisor is `0`\n *      safeDiv = n => d => d === 0 ? Nothing() : Just(n / d)\n *\n *      R.traverse(Maybe.of, safeDiv(10), [2, 4, 5]); //=> Just([5, 2.5, 2])\n *      R.traverse(Maybe.of, safeDiv(10), [2, 0, 5]); //=> Nothing\n */\nvar traverse = /*#__PURE__*/_curry3(function traverse(of, f, traversable) {\n  return typeof traversable['fantasy-land/traverse'] === 'function' ? traversable['fantasy-land/traverse'](f, of) : sequence(of, map(f, traversable));\n});\nexport default traverse;","import _curry1 from './internal/_curry1';\n\nvar ws = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' + '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028' + '\\u2029\\uFEFF';\nvar zeroWidth = '\\u200b';\nvar hasProtoTrim = typeof String.prototype.trim === 'function';\n/**\n * Removes (strips) whitespace from both ends of the string.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to trim.\n * @return {String} Trimmed version of `str`.\n * @example\n *\n *      R.trim('   xyz  '); //=> 'xyz'\n *      R.map(R.trim, R.split(',', 'x, y, z')); //=> ['x', 'y', 'z']\n */\nvar _trim = !hasProtoTrim || /*#__PURE__*/ws.trim() || ! /*#__PURE__*/zeroWidth.trim() ? function trim(str) {\n  var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');\n  var endRx = new RegExp('[' + ws + '][' + ws + ']*$');\n  return str.replace(beginRx, '').replace(endRx, '');\n} : function trim(str) {\n  return str.trim();\n};\nvar trim = /*#__PURE__*/_curry1(_trim);\nexport default trim;","import _arity from './internal/_arity';\nimport _concat from './internal/_concat';\nimport _curry2 from './internal/_curry2';\n\n/**\n * `tryCatch` takes two functions, a `tryer` and a `catcher`. The returned\n * function evaluates the `tryer`; if it does not throw, it simply returns the\n * result. If the `tryer` *does* throw, the returned function evaluates the\n * `catcher` function and returns its result. Note that for effective\n * composition with this function, both the `tryer` and `catcher` functions\n * must return the same type of results.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Function\n * @sig (...x -> a) -> ((e, ...x) -> a) -> (...x -> a)\n * @param {Function} tryer The function that may throw.\n * @param {Function} catcher The function that will be evaluated if `tryer` throws.\n * @return {Function} A new function that will catch exceptions and send then to the catcher.\n * @example\n *\n *      R.tryCatch(R.prop('x'), R.F)({x: true}); //=> true\n *      R.tryCatch(R.prop('x'), R.F)(null);      //=> false\n */\nvar tryCatch = /*#__PURE__*/_curry2(function _tryCatch(tryer, catcher) {\n  return _arity(tryer.length, function () {\n    try {\n      return tryer.apply(this, arguments);\n    } catch (e) {\n      return catcher.apply(this, _concat([e], arguments));\n    }\n  });\n});\nexport default tryCatch;","import _curry1 from './internal/_curry1';\n\n/**\n * Takes a function `fn`, which takes a single array argument, and returns a\n * function which:\n *\n *   - takes any number of positional arguments;\n *   - passes these arguments to `fn` as an array; and\n *   - returns the result.\n *\n * In other words, `R.unapply` derives a variadic function from a function which\n * takes an array. `R.unapply` is the inverse of [`R.apply`](#apply).\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Function\n * @sig ([*...] -> a) -> (*... -> a)\n * @param {Function} fn\n * @return {Function}\n * @see R.apply\n * @example\n *\n *      R.unapply(JSON.stringify)(1, 2, 3); //=> '[1,2,3]'\n * @symb R.unapply(f)(a, b) = f([a, b])\n */\nvar unapply = /*#__PURE__*/_curry1(function unapply(fn) {\n  return function () {\n    return fn(Array.prototype.slice.call(arguments, 0));\n  };\n});\nexport default unapply;","import _curry1 from './internal/_curry1';\nimport nAry from './nAry';\n\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly 1 parameter. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Function\n * @sig (* -> b) -> (a -> b)\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity 1.\n * @see R.binary, R.nAry\n * @example\n *\n *      var takesTwoArgs = function(a, b) {\n *        return [a, b];\n *      };\n *      takesTwoArgs.length; //=> 2\n *      takesTwoArgs(1, 2); //=> [1, 2]\n *\n *      var takesOneArg = R.unary(takesTwoArgs);\n *      takesOneArg.length; //=> 1\n *      // Only 1 argument is passed to the wrapped function\n *      takesOneArg(1, 2); //=> [1, undefined]\n * @symb R.unary(f)(a, b, c) = f(a)\n */\nvar unary = /*#__PURE__*/_curry1(function unary(fn) {\n  return nAry(1, fn);\n});\nexport default unary;","import _curry2 from './internal/_curry2';\nimport curryN from './curryN';\n\n/**\n * Returns a function of arity `n` from a (manually) curried function.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Function\n * @sig Number -> (a -> b) -> (a -> c)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to uncurry.\n * @return {Function} A new function.\n * @see R.curry\n * @example\n *\n *      var addFour = a => b => c => d => a + b + c + d;\n *\n *      var uncurriedAddFour = R.uncurryN(4, addFour);\n *      uncurriedAddFour(1, 2, 3, 4); //=> 10\n */\nvar uncurryN = /*#__PURE__*/_curry2(function uncurryN(depth, fn) {\n  return curryN(depth, function () {\n    var currentDepth = 1;\n    var value = fn;\n    var idx = 0;\n    var endIdx;\n    while (currentDepth <= depth && typeof value === 'function') {\n      endIdx = currentDepth === depth ? arguments.length : idx + value.length;\n      value = value.apply(this, Array.prototype.slice.call(arguments, idx, endIdx));\n      currentDepth += 1;\n      idx = endIdx;\n    }\n    return value;\n  });\n});\nexport default uncurryN;","import _curry2 from './internal/_curry2';\n\n/**\n * Builds a list from a seed value. Accepts an iterator function, which returns\n * either false to stop iteration or an array of length 2 containing the value\n * to add to the resulting list and the seed to be used in the next call to the\n * iterator function.\n *\n * The iterator function receives one argument: *(seed)*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig (a -> [b]) -> * -> [b]\n * @param {Function} fn The iterator function. receives one argument, `seed`, and returns\n *        either false to quit iteration or an array of length two to proceed. The element\n *        at index 0 of this array will be added to the resulting array, and the element\n *        at index 1 will be passed to the next call to `fn`.\n * @param {*} seed The seed value.\n * @return {Array} The final list.\n * @example\n *\n *      var f = n => n > 50 ? false : [-n, n + 10];\n *      R.unfold(f, 10); //=> [-10, -20, -30, -40, -50]\n * @symb R.unfold(f, x) = [f(x)[0], f(f(x)[1])[0], f(f(f(x)[1])[1])[0], ...]\n */\nvar unfold = /*#__PURE__*/_curry2(function unfold(fn, seed) {\n  var pair = fn(seed);\n  var result = [];\n  while (pair && pair.length) {\n    result[result.length] = pair[0];\n    pair = fn(pair[1]);\n  }\n  return result;\n});\nexport default unfold;","import _concat from './internal/_concat';\nimport _curry2 from './internal/_curry2';\nimport compose from './compose';\nimport uniq from './uniq';\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of the elements\n * of each list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} as The first list.\n * @param {Array} bs The second list.\n * @return {Array} The first and second lists concatenated, with\n *         duplicates removed.\n * @example\n *\n *      R.union([1, 2, 3], [2, 3, 4]); //=> [1, 2, 3, 4]\n */\nvar union = /*#__PURE__*/_curry2( /*#__PURE__*/compose(uniq, _concat));\nexport default union;","import _containsWith from './internal/_containsWith';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied predicate to\n * two list elements. Prefers the first item if two items compare equal based\n * on the predicate.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category List\n * @sig ((a, a) -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      var strEq = R.eqBy(String);\n *      R.uniqWith(strEq)([1, '1', 2, 1]); //=> [1, 2]\n *      R.uniqWith(strEq)([{}, {}]);       //=> [{}]\n *      R.uniqWith(strEq)([1, '1', 1]);    //=> [1]\n *      R.uniqWith(strEq)(['1', 1, 1]);    //=> ['1']\n */\nvar uniqWith = /*#__PURE__*/_curry2(function uniqWith(pred, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n  var item;\n  while (idx < len) {\n    item = list[idx];\n    if (!_containsWith(pred, item, result)) {\n      result[result.length] = item;\n    }\n    idx += 1;\n  }\n  return result;\n});\nexport default uniqWith;","import _concat from './internal/_concat';\nimport _curry3 from './internal/_curry3';\nimport uniqWith from './uniqWith';\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of the elements\n * of each list. Duplication is determined according to the value returned by\n * applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [*] -> [*] -> [*]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The first and second lists concatenated, with\n *         duplicates removed.\n * @see R.union\n * @example\n *\n *      var l1 = [{a: 1}, {a: 2}];\n *      var l2 = [{a: 1}, {a: 4}];\n *      R.unionWith(R.eqBy(R.prop('a')), l1, l2); //=> [{a: 1}, {a: 2}, {a: 4}]\n */\nvar unionWith = /*#__PURE__*/_curry3(function unionWith(pred, list1, list2) {\n  return uniqWith(pred, _concat(list1, list2));\n});\nexport default unionWith;","import _curry3 from './internal/_curry3';\n\n/**\n * Tests the final argument by passing it to the given predicate function. If\n * the predicate is not satisfied, the function will return the result of\n * calling the `whenFalseFn` function with the same argument. If the predicate\n * is satisfied, the argument is returned as is.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred        A predicate function\n * @param {Function} whenFalseFn A function to invoke when the `pred` evaluates\n *                               to a falsy value.\n * @param {*}        x           An object to test with the `pred` function and\n *                               pass to `whenFalseFn` if necessary.\n * @return {*} Either `x` or the result of applying `x` to `whenFalseFn`.\n * @see R.ifElse, R.when\n * @example\n *\n *      let safeInc = R.unless(R.isNil, R.inc);\n *      safeInc(null); //=> null\n *      safeInc(1); //=> 2\n */\nvar unless = /*#__PURE__*/_curry3(function unless(pred, whenFalseFn, x) {\n  return pred(x) ? x : whenFalseFn(x);\n});\nexport default unless;","import _identity from './internal/_identity';\nimport chain from './chain';\n\n/**\n * Shorthand for `R.chain(R.identity)`, which removes one level of nesting from\n * any [Chain](https://github.com/fantasyland/fantasy-land#chain).\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig Chain c => c (c a) -> c a\n * @param {*} list\n * @return {*}\n * @see R.flatten, R.chain\n * @example\n *\n *      R.unnest([1, [2], [[3]]]); //=> [1, 2, [3]]\n *      R.unnest([[1, 2], [3, 4], [5, 6]]); //=> [1, 2, 3, 4, 5, 6]\n */\nvar unnest = /*#__PURE__*/chain(_identity);\nexport default unnest;","import _curry3 from './internal/_curry3';\n\n/**\n * Takes a predicate, a transformation function, and an initial value,\n * and returns a value of the same type as the initial value.\n * It does so by applying the transformation until the predicate is satisfied,\n * at which point it returns the satisfactory value.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred A predicate function\n * @param {Function} fn The iterator function\n * @param {*} init Initial value\n * @return {*} Final value that satisfies predicate\n * @example\n *\n *      R.until(R.gt(R.__, 100), R.multiply(2))(1) // => 128\n */\nvar until = /*#__PURE__*/_curry3(function until(pred, fn, init) {\n  var val = init;\n  while (!pred(val)) {\n    val = fn(val);\n  }\n  return val;\n});\nexport default until;","import _curry1 from './internal/_curry1';\n\n/**\n * Returns a list of all the properties, including prototype properties, of the\n * supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @sig {k: v} -> [v]\n * @param {Object} obj The object to extract values from\n * @return {Array} An array of the values of the object's own and prototype properties.\n * @see R.values, R.keysIn\n * @example\n *\n *      var F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      var f = new F();\n *      R.valuesIn(f); //=> ['X', 'Y']\n */\nvar valuesIn = /*#__PURE__*/_curry1(function valuesIn(obj) {\n  var prop;\n  var vs = [];\n  for (prop in obj) {\n    vs[vs.length] = obj[prop];\n  }\n  return vs;\n});\nexport default valuesIn;","import _curry2 from './internal/_curry2';\n\n// `Const` is a functor that effectively ignores the function given to `map`.\nvar Const = function (x) {\n  return { value: x, 'fantasy-land/map': function () {\n      return this;\n    } };\n};\n\n/**\n * Returns a \"view\" of the given data structure, determined by the given lens.\n * The lens's focus determines which portion of the data structure is visible.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> s -> a\n * @param {Lens} lens\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      var xLens = R.lensProp('x');\n *\n *      R.view(xLens, {x: 1, y: 2});  //=> 1\n *      R.view(xLens, {x: 4, y: 2});  //=> 4\n */\nvar view = /*#__PURE__*/_curry2(function view(lens, x) {\n  // Using `Const` effectively ignores the setter function of the `lens`,\n  // leaving the value returned by the getter function unmodified.\n  return lens(Const)(x).value;\n});\nexport default view;","import _curry3 from './internal/_curry3';\n\n/**\n * Tests the final argument by passing it to the given predicate function. If\n * the predicate is satisfied, the function will return the result of calling\n * the `whenTrueFn` function with the same argument. If the predicate is not\n * satisfied, the argument is returned as is.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred       A predicate function\n * @param {Function} whenTrueFn A function to invoke when the `condition`\n *                              evaluates to a truthy value.\n * @param {*}        x          An object to test with the `pred` function and\n *                              pass to `whenTrueFn` if necessary.\n * @return {*} Either `x` or the result of applying `x` to `whenTrueFn`.\n * @see R.ifElse, R.unless\n * @example\n *\n *      // truncate :: String -> String\n *      var truncate = R.when(\n *        R.propSatisfies(R.gt(R.__, 10), 'length'),\n *        R.pipe(R.take(10), R.append('…'), R.join(''))\n *      );\n *      truncate('12345');         //=> '12345'\n *      truncate('0123456789ABC'); //=> '0123456789…'\n */\nvar when = /*#__PURE__*/_curry3(function when(pred, whenTrueFn, x) {\n  return pred(x) ? whenTrueFn(x) : x;\n});\nexport default when;","import _curry2 from './internal/_curry2';\nimport _has from './internal/_has';\n\n/**\n * Takes a spec object and a test object; returns true if the test satisfies\n * the spec. Each of the spec's own properties must be a predicate function.\n * Each predicate is applied to the value of the corresponding property of the\n * test object. `where` returns true if all the predicates return true, false\n * otherwise.\n *\n * `where` is well suited to declaratively expressing constraints for other\n * functions such as [`filter`](#filter) and [`find`](#find).\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category Object\n * @sig {String: (* -> Boolean)} -> {String: *} -> Boolean\n * @param {Object} spec\n * @param {Object} testObj\n * @return {Boolean}\n * @see R.propSatisfies, R.whereEq\n * @example\n *\n *      // pred :: Object -> Boolean\n *      var pred = R.where({\n *        a: R.equals('foo'),\n *        b: R.complement(R.equals('bar')),\n *        x: R.gt(R.__, 10),\n *        y: R.lt(R.__, 20)\n *      });\n *\n *      pred({a: 'foo', b: 'xxx', x: 11, y: 19}); //=> true\n *      pred({a: 'xxx', b: 'xxx', x: 11, y: 19}); //=> false\n *      pred({a: 'foo', b: 'bar', x: 11, y: 19}); //=> false\n *      pred({a: 'foo', b: 'xxx', x: 10, y: 19}); //=> false\n *      pred({a: 'foo', b: 'xxx', x: 11, y: 20}); //=> false\n */\nvar where = /*#__PURE__*/_curry2(function where(spec, testObj) {\n  for (var prop in spec) {\n    if (_has(prop, spec) && !spec[prop](testObj[prop])) {\n      return false;\n    }\n  }\n  return true;\n});\nexport default where;","import _curry2 from './internal/_curry2';\nimport equals from './equals';\nimport map from './map';\nimport where from './where';\n\n/**\n * Takes a spec object and a test object; returns true if the test satisfies\n * the spec, false otherwise. An object satisfies the spec if, for each of the\n * spec's own properties, accessing that property of the object gives the same\n * value (in [`R.equals`](#equals) terms) as accessing that property of the\n * spec.\n *\n * `whereEq` is a specialization of [`where`](#where).\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @sig {String: *} -> {String: *} -> Boolean\n * @param {Object} spec\n * @param {Object} testObj\n * @return {Boolean}\n * @see R.propEq, R.where\n * @example\n *\n *      // pred :: Object -> Boolean\n *      var pred = R.whereEq({a: 1, b: 2});\n *\n *      pred({a: 1});              //=> false\n *      pred({a: 1, b: 2});        //=> true\n *      pred({a: 1, b: 2, c: 3});  //=> true\n *      pred({a: 1, b: 1});        //=> false\n */\nvar whereEq = /*#__PURE__*/_curry2(function whereEq(spec, testObj) {\n  return where(map(equals, spec), testObj);\n});\nexport default whereEq;","import _contains from './internal/_contains';\nimport _curry2 from './internal/_curry2';\nimport flip from './flip';\nimport reject from './reject';\n\n/**\n * Returns a new list without values in the first argument.\n * [`R.equals`](#equals) is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @param {Array} list1 The values to be removed from `list2`.\n * @param {Array} list2 The array to remove values from.\n * @return {Array} The new array without values in `list1`.\n * @see R.transduce, R.difference\n * @example\n *\n *      R.without([1, 2], [1, 2, 1, 3, 4]); //=> [3, 4]\n */\nvar without = /*#__PURE__*/_curry2(function (xs, list) {\n  return reject(flip(_contains)(xs), list);\n});\nexport default without;","import _curry2 from './internal/_curry2';\n\n/**\n * Creates a new list out of the two supplied by creating each possible pair\n * from the lists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b] -> [[a,b]]\n * @param {Array} as The first list.\n * @param {Array} bs The second list.\n * @return {Array} The list made by combining each possible pair from\n *         `as` and `bs` into pairs (`[a, b]`).\n * @example\n *\n *      R.xprod([1, 2], ['a', 'b']); //=> [[1, 'a'], [1, 'b'], [2, 'a'], [2, 'b']]\n * @symb R.xprod([a, b], [c, d]) = [[a, c], [a, d], [b, c], [b, d]]\n */\nvar xprod = /*#__PURE__*/_curry2(function xprod(a, b) {\n  // = xprodWith(prepend); (takes about 3 times as long...)\n  var idx = 0;\n  var ilen = a.length;\n  var j;\n  var jlen = b.length;\n  var result = [];\n  while (idx < ilen) {\n    j = 0;\n    while (j < jlen) {\n      result[result.length] = [a[idx], b[j]];\n      j += 1;\n    }\n    idx += 1;\n  }\n  return result;\n});\nexport default xprod;","import _curry2 from './internal/_curry2';\n\n/**\n * Creates a new list out of the two supplied by pairing up equally-positioned\n * items from both lists. The returned list is truncated to the length of the\n * shorter of the two input lists.\n * Note: `zip` is equivalent to `zipWith(function(a, b) { return [a, b] })`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b] -> [[a,b]]\n * @param {Array} list1 The first array to consider.\n * @param {Array} list2 The second array to consider.\n * @return {Array} The list made by pairing up same-indexed elements of `list1` and `list2`.\n * @example\n *\n *      R.zip([1, 2, 3], ['a', 'b', 'c']); //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n * @symb R.zip([a, b, c], [d, e, f]) = [[a, d], [b, e], [c, f]]\n */\nvar zip = /*#__PURE__*/_curry2(function zip(a, b) {\n  var rv = [];\n  var idx = 0;\n  var len = Math.min(a.length, b.length);\n  while (idx < len) {\n    rv[idx] = [a[idx], b[idx]];\n    idx += 1;\n  }\n  return rv;\n});\nexport default zip;","import _curry2 from './internal/_curry2';\n\n/**\n * Creates a new object out of a list of keys and a list of values.\n * Key/value pairing is truncated to the length of the shorter of the two lists.\n * Note: `zipObj` is equivalent to `pipe(zip, fromPairs)`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [String] -> [*] -> {String: *}\n * @param {Array} keys The array that will be properties on the output object.\n * @param {Array} values The list of values on the output object.\n * @return {Object} The object made by pairing up same-indexed elements of `keys` and `values`.\n * @example\n *\n *      R.zipObj(['a', 'b', 'c'], [1, 2, 3]); //=> {a: 1, b: 2, c: 3}\n */\nvar zipObj = /*#__PURE__*/_curry2(function zipObj(keys, values) {\n  var idx = 0;\n  var len = Math.min(keys.length, values.length);\n  var out = {};\n  while (idx < len) {\n    out[keys[idx]] = values[idx];\n    idx += 1;\n  }\n  return out;\n});\nexport default zipObj;","import _curry3 from './internal/_curry3';\n\n/**\n * Creates a new list out of the two supplied by applying the function to each\n * equally-positioned pair in the lists. The returned list is truncated to the\n * length of the shorter of the two input lists.\n *\n * @function\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> c) -> [a] -> [b] -> [c]\n * @param {Function} fn The function used to combine the two elements into one value.\n * @param {Array} list1 The first array to consider.\n * @param {Array} list2 The second array to consider.\n * @return {Array} The list made by combining same-indexed elements of `list1` and `list2`\n *         using `fn`.\n * @example\n *\n *      var f = (x, y) => {\n *        // ...\n *      };\n *      R.zipWith(f, [1, 2, 3], ['a', 'b', 'c']);\n *      //=> [f(1, 'a'), f(2, 'b'), f(3, 'c')]\n * @symb R.zipWith(fn, [a, b, c], [d, e, f]) = [fn(a, d), fn(b, e), fn(c, f)]\n */\nvar zipWith = /*#__PURE__*/_curry3(function zipWith(fn, a, b) {\n  var rv = [];\n  var idx = 0;\n  var len = Math.min(a.length, b.length);\n  while (idx < len) {\n    rv[idx] = fn(a[idx], b[idx]);\n    idx += 1;\n  }\n  return rv;\n});\nexport default zipWith;","export { default as F } from './F';\nexport { default as T } from './T';\nexport { default as __ } from './__';\nexport { default as add } from './add';\nexport { default as addIndex } from './addIndex';\nexport { default as adjust } from './adjust';\nexport { default as all } from './all';\nexport { default as allPass } from './allPass';\nexport { default as always } from './always';\nexport { default as and } from './and';\nexport { default as any } from './any';\nexport { default as anyPass } from './anyPass';\nexport { default as ap } from './ap';\nexport { default as aperture } from './aperture';\nexport { default as append } from './append';\nexport { default as apply } from './apply';\nexport { default as applySpec } from './applySpec';\nexport { default as applyTo } from './applyTo';\nexport { default as ascend } from './ascend';\nexport { default as assoc } from './assoc';\nexport { default as assocPath } from './assocPath';\nexport { default as binary } from './binary';\nexport { default as bind } from './bind';\nexport { default as both } from './both';\nexport { default as call } from './call';\nexport { default as chain } from './chain';\nexport { default as clamp } from './clamp';\nexport { default as clone } from './clone';\nexport { default as comparator } from './comparator';\nexport { default as complement } from './complement';\nexport { default as compose } from './compose';\nexport { default as composeK } from './composeK';\nexport { default as composeP } from './composeP';\nexport { default as concat } from './concat';\nexport { default as cond } from './cond';\nexport { default as construct } from './construct';\nexport { default as constructN } from './constructN';\nexport { default as contains } from './contains';\nexport { default as converge } from './converge';\nexport { default as countBy } from './countBy';\nexport { default as curry } from './curry';\nexport { default as curryN } from './curryN';\nexport { default as dec } from './dec';\nexport { default as defaultTo } from './defaultTo';\nexport { default as descend } from './descend';\nexport { default as difference } from './difference';\nexport { default as differenceWith } from './differenceWith';\nexport { default as dissoc } from './dissoc';\nexport { default as dissocPath } from './dissocPath';\nexport { default as divide } from './divide';\nexport { default as drop } from './drop';\nexport { default as dropLast } from './dropLast';\nexport { default as dropLastWhile } from './dropLastWhile';\nexport { default as dropRepeats } from './dropRepeats';\nexport { default as dropRepeatsWith } from './dropRepeatsWith';\nexport { default as dropWhile } from './dropWhile';\nexport { default as either } from './either';\nexport { default as empty } from './empty';\nexport { default as endsWith } from './endsWith';\nexport { default as eqBy } from './eqBy';\nexport { default as eqProps } from './eqProps';\nexport { default as equals } from './equals';\nexport { default as evolve } from './evolve';\nexport { default as filter } from './filter';\nexport { default as find } from './find';\nexport { default as findIndex } from './findIndex';\nexport { default as findLast } from './findLast';\nexport { default as findLastIndex } from './findLastIndex';\nexport { default as flatten } from './flatten';\nexport { default as flip } from './flip';\nexport { default as forEach } from './forEach';\nexport { default as forEachObjIndexed } from './forEachObjIndexed';\nexport { default as fromPairs } from './fromPairs';\nexport { default as groupBy } from './groupBy';\nexport { default as groupWith } from './groupWith';\nexport { default as gt } from './gt';\nexport { default as gte } from './gte';\nexport { default as has } from './has';\nexport { default as hasIn } from './hasIn';\nexport { default as head } from './head';\nexport { default as identical } from './identical';\nexport { default as identity } from './identity';\nexport { default as ifElse } from './ifElse';\nexport { default as inc } from './inc';\nexport { default as indexBy } from './indexBy';\nexport { default as indexOf } from './indexOf';\nexport { default as init } from './init';\nexport { default as innerJoin } from './innerJoin';\nexport { default as insert } from './insert';\nexport { default as insertAll } from './insertAll';\nexport { default as intersection } from './intersection';\nexport { default as intersperse } from './intersperse';\nexport { default as into } from './into';\nexport { default as invert } from './invert';\nexport { default as invertObj } from './invertObj';\nexport { default as invoker } from './invoker';\nexport { default as is } from './is';\nexport { default as isEmpty } from './isEmpty';\nexport { default as isNil } from './isNil';\nexport { default as join } from './join';\nexport { default as juxt } from './juxt';\nexport { default as keys } from './keys';\nexport { default as keysIn } from './keysIn';\nexport { default as last } from './last';\nexport { default as lastIndexOf } from './lastIndexOf';\nexport { default as length } from './length';\nexport { default as lens } from './lens';\nexport { default as lensIndex } from './lensIndex';\nexport { default as lensPath } from './lensPath';\nexport { default as lensProp } from './lensProp';\nexport { default as lift } from './lift';\nexport { default as liftN } from './liftN';\nexport { default as lt } from './lt';\nexport { default as lte } from './lte';\nexport { default as map } from './map';\nexport { default as mapAccum } from './mapAccum';\nexport { default as mapAccumRight } from './mapAccumRight';\nexport { default as mapObjIndexed } from './mapObjIndexed';\nexport { default as match } from './match';\nexport { default as mathMod } from './mathMod';\nexport { default as max } from './max';\nexport { default as maxBy } from './maxBy';\nexport { default as mean } from './mean';\nexport { default as median } from './median';\nexport { default as memoize } from './memoize';\nexport { default as memoizeWith } from './memoizeWith';\nexport { default as merge } from './merge';\nexport { default as mergeAll } from './mergeAll';\nexport { default as mergeDeepLeft } from './mergeDeepLeft';\nexport { default as mergeDeepRight } from './mergeDeepRight';\nexport { default as mergeDeepWith } from './mergeDeepWith';\nexport { default as mergeDeepWithKey } from './mergeDeepWithKey';\nexport { default as mergeWith } from './mergeWith';\nexport { default as mergeWithKey } from './mergeWithKey';\nexport { default as min } from './min';\nexport { default as minBy } from './minBy';\nexport { default as modulo } from './modulo';\nexport { default as multiply } from './multiply';\nexport { default as nAry } from './nAry';\nexport { default as negate } from './negate';\nexport { default as none } from './none';\nexport { default as not } from './not';\nexport { default as nth } from './nth';\nexport { default as nthArg } from './nthArg';\nexport { default as o } from './o';\nexport { default as objOf } from './objOf';\nexport { default as of } from './of';\nexport { default as omit } from './omit';\nexport { default as once } from './once';\nexport { default as or } from './or';\nexport { default as over } from './over';\nexport { default as pair } from './pair';\nexport { default as partial } from './partial';\nexport { default as partialRight } from './partialRight';\nexport { default as partition } from './partition';\nexport { default as path } from './path';\nexport { default as pathEq } from './pathEq';\nexport { default as pathOr } from './pathOr';\nexport { default as pathSatisfies } from './pathSatisfies';\nexport { default as pick } from './pick';\nexport { default as pickAll } from './pickAll';\nexport { default as pickBy } from './pickBy';\nexport { default as pipe } from './pipe';\nexport { default as pipeK } from './pipeK';\nexport { default as pipeP } from './pipeP';\nexport { default as pluck } from './pluck';\nexport { default as prepend } from './prepend';\nexport { default as product } from './product';\nexport { default as project } from './project';\nexport { default as prop } from './prop';\nexport { default as propEq } from './propEq';\nexport { default as propIs } from './propIs';\nexport { default as propOr } from './propOr';\nexport { default as propSatisfies } from './propSatisfies';\nexport { default as props } from './props';\nexport { default as range } from './range';\nexport { default as reduce } from './reduce';\nexport { default as reduceBy } from './reduceBy';\nexport { default as reduceRight } from './reduceRight';\nexport { default as reduceWhile } from './reduceWhile';\nexport { default as reduced } from './reduced';\nexport { default as reject } from './reject';\nexport { default as remove } from './remove';\nexport { default as repeat } from './repeat';\nexport { default as replace } from './replace';\nexport { default as reverse } from './reverse';\nexport { default as scan } from './scan';\nexport { default as sequence } from './sequence';\nexport { default as set } from './set';\nexport { default as slice } from './slice';\nexport { default as sort } from './sort';\nexport { default as sortBy } from './sortBy';\nexport { default as sortWith } from './sortWith';\nexport { default as split } from './split';\nexport { default as splitAt } from './splitAt';\nexport { default as splitEvery } from './splitEvery';\nexport { default as splitWhen } from './splitWhen';\nexport { default as startsWith } from './startsWith';\nexport { default as subtract } from './subtract';\nexport { default as sum } from './sum';\nexport { default as symmetricDifference } from './symmetricDifference';\nexport { default as symmetricDifferenceWith } from './symmetricDifferenceWith';\nexport { default as tail } from './tail';\nexport { default as take } from './take';\nexport { default as takeLast } from './takeLast';\nexport { default as takeLastWhile } from './takeLastWhile';\nexport { default as takeWhile } from './takeWhile';\nexport { default as tap } from './tap';\nexport { default as test } from './test';\nexport { default as times } from './times';\nexport { default as toLower } from './toLower';\nexport { default as toPairs } from './toPairs';\nexport { default as toPairsIn } from './toPairsIn';\nexport { default as toString } from './toString';\nexport { default as toUpper } from './toUpper';\nexport { default as transduce } from './transduce';\nexport { default as transpose } from './transpose';\nexport { default as traverse } from './traverse';\nexport { default as trim } from './trim';\nexport { default as tryCatch } from './tryCatch';\nexport { default as type } from './type';\nexport { default as unapply } from './unapply';\nexport { default as unary } from './unary';\nexport { default as uncurryN } from './uncurryN';\nexport { default as unfold } from './unfold';\nexport { default as union } from './union';\nexport { default as unionWith } from './unionWith';\nexport { default as uniq } from './uniq';\nexport { default as uniqBy } from './uniqBy';\nexport { default as uniqWith } from './uniqWith';\nexport { default as unless } from './unless';\nexport { default as unnest } from './unnest';\nexport { default as until } from './until';\nexport { default as update } from './update';\nexport { default as useWith } from './useWith';\nexport { default as values } from './values';\nexport { default as valuesIn } from './valuesIn';\nexport { default as view } from './view';\nexport { default as when } from './when';\nexport { default as where } from './where';\nexport { default as whereEq } from './whereEq';\nexport { default as without } from './without';\nexport { default as xprod } from './xprod';\nexport { default as zip } from './zip';\nexport { default as zipObj } from './zipObj';\nexport { default as zipWith } from './zipWith';","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n","'use strict';\n\nmodule.exports = function isArrayish(obj) {\n\tif (!obj) {\n\t\treturn false;\n\t}\n\n\treturn obj instanceof Array || Array.isArray(obj) ||\n\t\t(obj.length >= 0 && obj.splice instanceof Function);\n};\n","'use strict';\n\nvar util = require('util');\nvar isArrayish = require('is-arrayish');\n\nvar errorEx = function errorEx(name, properties) {\n\tif (!name || name.constructor !== String) {\n\t\tproperties = name || {};\n\t\tname = Error.name;\n\t}\n\n\tvar errorExError = function ErrorEXError(message) {\n\t\tif (!this) {\n\t\t\treturn new ErrorEXError(message);\n\t\t}\n\n\t\tmessage = message instanceof Error\n\t\t\t? message.message\n\t\t\t: (message || this.message);\n\n\t\tError.call(this, message);\n\t\tError.captureStackTrace(this, errorExError);\n\n\t\tthis.name = name;\n\n\t\tObject.defineProperty(this, 'message', {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tget: function () {\n\t\t\t\tvar newMessage = message.split(/\\r?\\n/g);\n\n\t\t\t\tfor (var key in properties) {\n\t\t\t\t\tif (!properties.hasOwnProperty(key)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar modifier = properties[key];\n\n\t\t\t\t\tif ('message' in modifier) {\n\t\t\t\t\t\tnewMessage = modifier.message(this[key], newMessage) || newMessage;\n\t\t\t\t\t\tif (!isArrayish(newMessage)) {\n\t\t\t\t\t\t\tnewMessage = [newMessage];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn newMessage.join('\\n');\n\t\t\t},\n\t\t\tset: function (v) {\n\t\t\t\tmessage = v;\n\t\t\t}\n\t\t});\n\n\t\tvar stackDescriptor = Object.getOwnPropertyDescriptor(this, 'stack');\n\t\tvar stackGetter = stackDescriptor.get;\n\t\tvar stackValue = stackDescriptor.value;\n\t\tdelete stackDescriptor.value;\n\t\tdelete stackDescriptor.writable;\n\n\t\tstackDescriptor.get = function () {\n\t\t\tvar stack = (stackGetter)\n\t\t\t\t? stackGetter.call(this).split(/\\r?\\n+/g)\n\t\t\t\t: stackValue.split(/\\r?\\n+/g);\n\n\t\t\t// starting in Node 7, the stack builder caches the message.\n\t\t\t// just replace it.\n\t\t\tstack[0] = this.name + ': ' + this.message;\n\n\t\t\tvar lineCount = 1;\n\t\t\tfor (var key in properties) {\n\t\t\t\tif (!properties.hasOwnProperty(key)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tvar modifier = properties[key];\n\n\t\t\t\tif ('line' in modifier) {\n\t\t\t\t\tvar line = modifier.line(this[key]);\n\t\t\t\t\tif (line) {\n\t\t\t\t\t\tstack.splice(lineCount++, 0, '    ' + line);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ('stack' in modifier) {\n\t\t\t\t\tmodifier.stack(this[key], stack);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn stack.join('\\n');\n\t\t};\n\n\t\tObject.defineProperty(this, 'stack', stackDescriptor);\n\t};\n\n\tif (Object.setPrototypeOf) {\n\t\tObject.setPrototypeOf(errorExError.prototype, Error.prototype);\n\t\tObject.setPrototypeOf(errorExError, Error);\n\t} else {\n\t\tutil.inherits(errorExError, Error);\n\t}\n\n\treturn errorExError;\n};\n\nerrorEx.append = function (str, def) {\n\treturn {\n\t\tmessage: function (v, message) {\n\t\t\tv = v || def;\n\n\t\t\tif (v) {\n\t\t\t\tmessage[0] += ' ' + str.replace('%s', v.toString());\n\t\t\t}\n\n\t\t\treturn message;\n\t\t}\n\t};\n};\n\nerrorEx.line = function (str, def) {\n\treturn {\n\t\tline: function (v) {\n\t\t\tv = v || def;\n\n\t\t\tif (v) {\n\t\t\t\treturn str.replace('%s', v.toString());\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\t};\n};\n\nmodule.exports = errorEx;\n","/**\n * Predefined errors that ui-predicate-core will yield from rejected promises\n * @namespace errors\n * @since 1.0.0\n * @note errors are 100% tested from PredicateCore.test.js\n */\n\nconst { mergeAll } = require('ramda');\nconst errorEx = require('error-ex');\n\nfunction err(name) {\n  return {\n    [name]: errorEx(name),\n  };\n}\n\nmodule.exports = mergeAll([\n  /**\n   * Error when a Predicate is created without\n   * @typedef {Error} InvalidPredicateType\n   * @memberof errors\n   * @since 1.0.0\n   */\n  err('InvalidPredicateType'),\n\n  /**\n   * Error when a json data passed to PredicateCore Constructor is neither a serialized ComparisonPredicate or a CompoundPredicate\n   * @typedef {Error} CompoundPredicate\n   * @memberof errors\n   * @since 1.0.0\n   */\n  err('UnknownJSONData'),\n\n  /**\n   * Error when someone tried to remove the last remaining predicate from a CompoundPredicate\n   * @typedef {Error} CompoundPredicateMustHaveAtLeastOneSubPredicate\n   * @memberof errors\n   * @since 1.0.0\n   */\n  err('CompoundPredicateMustHaveAtLeastOneSubPredicate'),\n\n  /**\n   * Error when setData `data` parameter is called with something else than a  {@link dataclasses.CompoundPredicate}\n   * @typedef {Error} RootPredicateMustBeACompoundPredicate\n   * @memberof errors\n   * @since 1.0.0\n   */\n  err('RootPredicateMustBeACompoundPredicate'),\n\n  /**\n   * Error when a function was requiring a {@link dataclasses.CompoundPredicate} as a parameter\n   * @typedef {Error} RootPredicateMustBeACompoundPredicate\n   * @memberof errors\n   * @since 1.0.0\n   */\n  err('PredicateMustBeACompoundPredicate'),\n\n  /**\n   * Error when a function was requiring a {@link dataclasses.ComparisonPredicate} as a parameter\n   * @typedef {Error} PredicateMustBeAComparisonPredicate\n   * @memberof errors\n   * @since 1.0.0\n   */\n  err('PredicateMustBeAComparisonPredicate'),\n\n  /**\n   * Error add is called with something else than \"after\" parameter\n   * @typedef {Error} AddCurrentlyOnlySupportAfterInsertion\n   * @memberof errors\n   * @since 1.0.0\n   */\n  err('AddCurrentlyOnlySupportAfterInsertion'),\n\n  /**\n   * Thrown when a specified target refers to a undefined type.\n   * It means the user has missed a type definition in `types`.\n   * @typedef {Error} TargetMustReferToADefinedType\n   * @memberof errors\n   * @since 1.0.0\n   */\n  err('TargetMustReferToADefinedType'),\n\n  /**\n   * Thrown when a user asked for a logic change\n   * but the logicalType_id was invalid because it referred to no existing targets\n   * @typedef {Error} LogicalType_idMustReferToADefinedLogicalType\n   * @memberof errors\n   * @since 1.0.0\n   */\n  err('LogicalType_idMustReferToADefinedLogicalType'),\n\n  /**\n   * Thrown when a user asked for a target\n   * but the target_id was invalid because it referred to no existing targets\n   * @typedef {Error} Target_idMustReferToADefinedTarget\n   * @memberof errors\n   * @since 1.0.0\n   */\n  err('Target_idMustReferToADefinedTarget'),\n\n  /**\n   * Thrown when a user asked for a operator\n   * but the operator_id was invalid because it referred to no existing operators\n   * @typedef {Error} Operator_idMustReferToADefinedOperator\n   * @memberof errors\n   * @since 1.0.0\n   */\n  err('Operator_idMustReferToADefinedOperator'),\n\n  /**\n   * Thrown when a user asked for a operator change on a predicate\n   * but the operator_id was invalid because it referred\n   * to no existing operators for the currently selected predicate's target\n   * @typedef {Error} Operator_idMustReferToADefinedOperator\n   * @memberof errors\n   * @since 1.0.0\n   */\n  err('Operator_idMustReferToADefinedOperator'),\n\n  /**\n   * Thrown when remove is called on root {@link dataclasses.CompoundPredicate}\n   * @typedef {Error} ForbiddenCannotRemoveRootCompoundPredicate\n   * @memberof errors\n   * @since 1.0.0\n   */\n  err('ForbiddenCannotRemoveRootCompoundPredicate'),\n\n  /**\n   * Thrown when remove is called on root CompoundPredicate\n   * @typedef {Error} ForbiddenCannotRemoveLastComparisonPredicate\n   * @memberof errors\n   * @since 1.0.0\n   */\n  err('ForbiddenCannotRemoveLastComparisonPredicate'),\n\n  /**\n   * Thrown when remove is called with an invalid type of predicate\n   * @typedef {Error} CannotRemoveSomethingElseThanACompoundPredicateOrAComparisonPredicate\n   * @memberof errors\n   * @since 1.0.0\n   */\n  err('CannotRemoveSomethingElseThanACompoundPredicateOrAComparisonPredicate'),\n\n  /**\n   * Thrown when add is called with an invalid type of predicate\n   * @typedef {Error} CannotAddSomethingElseThanACompoundPredicateOrAComparisonPredicate\n   * @memberof errors\n   * @since 1.0.0\n   */\n  err('CannotAddSomethingElseThanACompoundPredicateOrAComparisonPredicate'),\n\n  /**\n   * Thrown when the UI Framework adapter forgot to pass `getDefaultArgumentComponent` in the option object to UIPredicateCore constructor\n   * @typedef {Error} UIFrameworkMustImplementgetDefaultArgumentComponent\n   * @memberof errors\n   * @since 1.0.0\n   */\n  err('UIFrameworkMustImplementgetDefaultArgumentComponent'),\n]);\n","/**\n * Rules\n * @namespace rules\n * @since 1.0.0\n * @note rules are 100% tested from PredicateCore.test.js\n */\n\nmodule.exports = {\n  /**\n   * @param {CompoundPredicate} root      root predicate\n   * @param {Predicate} predicateToRemove predicate to remove\n   * @return {boolean} true if the predicate to remove is the root predicate\n   * @memberof rules\n   */\n  predicateToRemoveIsRootPredicate: (root, predicateToRemove) => {\n    return root === predicateToRemove;\n  },\n\n  /**\n   * @param {CompoundPredicate} root      root predicate\n   * @param {Predicate} predicateToRemove predicate to remove\n   * @param {Function} CompoundPredicate CompoundPredicate constructor function\n   * @param {Function} ComparisonPredicate ComparisonPredicate constructor function\n   * @return {boolean} true if the predicate to remove is the last ComparisonPredicate\n   * @memberof rules\n   */\n  predicateToRemoveIsTheLastComparisonPredicate: (\n    root,\n    CompoundPredicate,\n    ComparisonPredicate\n  ) => {\n    const comparisonPredicateCount = CompoundPredicate.reduce(\n      root,\n      (acc, el) => (ComparisonPredicate.is(el) ? acc + 1 : acc),\n      0\n    );\n\n    return comparisonPredicateCount === 1;\n  },\n};\n","/**\n * Invariants\n * @namespace invariants\n * @since 1.0.0\n * @note invariants are 100% tested from PredicateCore.test.js\n */\n\nconst { is } = require('ramda');\n\nmodule.exports = ({ errors, rules }) => ({\n  /**\n   * [CompoundPredicateMustHaveAtLeastOneSubPredicate description]\n   * @param {?Array<Predicate>} predicates list of predicates to add to a CompoundPredicate at creation time\n   * @return {Promise<undefined, errors.CompoundPredicateMustHaveAtLeastOneSubPredicate>} resolve the promise if the invariant pass or yield a `CompoundPredicateMustHaveAtLeastOneSubPredicate` error otherwise\n   * @memberof invariants\n   * @since 1.0.0\n   */\n  CompoundPredicateMustHaveAtLeastOneSubPredicate: predicates =>\n    !Array.isArray(predicates) || predicates.length === 0\n      ? Promise.reject(\n          new errors.CompoundPredicateMustHaveAtLeastOneSubPredicate()\n        )\n      : Promise.resolve(),\n\n  /**\n   * @param {String} type Predicate type\n   * @param {Object} acceptedTypes list of accepted types\n   * @return {Promise<undefined, errors.InvalidPredicateType>} resolve the promise if the invariant pass or yield a `InvalidPredicateType` error otherwise\n   * @memberof invariants\n   * @since 1.0.0\n   */\n  PredicateTypeMustBeValid: (type, acceptedTypes) =>\n    !Object.keys(acceptedTypes).includes(type)\n      ? Promise.reject(new errors.InvalidPredicateType())\n      : Promise.resolve(),\n\n  /**\n   * @param {dataclasses.CompoundPredicate} root root\n   * @return {Promise<dataclasses.CompoundPredicate, errors.RootPredicateMustBeACompoundPredicate>} resolve the promise if the invariant pass or yield a `RootPredicateMustBeACompoundPredicate` error otherwise\n   * @memberof invariants\n   * @since 1.0.0\n   */\n  RootPredicateMustBeACompoundPredicate: (root, CompoundPredicate) =>\n    !CompoundPredicate.is(root)\n      ? Promise.reject(new errors.RootPredicateMustBeACompoundPredicate())\n      : Promise.resolve(root),\n\n  /**\n   * @param {dataclasses.Predicate} predicate predicate\n   * @param {dataclasses.ComparisonPredicate} ComparisonPredicate ComparisonPredicate constructor\n   * @return {Promise<undefined, errors.PredicateMustBeAComparisonPredicate>} resolve the promise if the invariant pass or yield a `PredicateMustBeAComparisonPredicate` error otherwise\n   * @memberof invariants\n   * @since 1.0.0\n   */\n\n  PredicateMustBeAComparisonPredicate: (predicate, ComparisonPredicate) =>\n    !ComparisonPredicate.is(predicate)\n      ? Promise.reject(new errors.PredicateMustBeAComparisonPredicate())\n      : Promise.resolve(),\n\n  /**\n   * @param {dataclasses.Predicate} predicate\n   * @param {dataclasses.CompoundPredicate} CompoundPredicate CompoundPredicate constructor\n   * @return {Promise<undefined, errors.PredicateMustBeACompoundPredicate>} resolve the promise if the invariant pass or yield a `PredicateMustBeACompoundPredicate` error otherwise\n   * @memberof invariants\n   * @since 1.0.0\n   */\n  PredicateMustBeACompoundPredicate: (predicate, CompoundPredicate) =>\n    !CompoundPredicate.is(predicate)\n      ? Promise.reject(new errors.PredicateMustBeACompoundPredicate())\n      : Promise.resolve(),\n\n  /**\n   * @param {dataclasses.CompoundPredicate} root root\n   * @return {Promise<undefined, errors.AddCurrentlyOnlySupportAfterInsertion>} resolve the promise if the invariant pass or yield a `AddCurrentlyOnlySupportAfterInsertion` error otherwise\n   * @memberof invariants\n   * @since 1.0.0\n   */\n  AddOnlySupportsAfter: how =>\n    how !== 'after'\n      ? Promise.reject(new errors.AddCurrentlyOnlySupportAfterInsertion())\n      : Promise.resolve(),\n\n  /**\n   * @param {dataclasses.CompoundPredicate} root root\n   * @return {Promise<dataclasses.Type, errors.TargetMustReferToADefinedType>} resolve the promise if the invariant pass or yield a `TargetMustReferToADefinedType` error otherwise\n   * @memberof invariants\n   * @since 1.0.0\n   */\n  TargetMustReferToADefinedType: (type, target) => {\n    if (type.isNone()) {\n      return Promise.reject(\n        new errors.TargetMustReferToADefinedType(\n          `target ${JSON.stringify(\n            target.target_id\n          )} does not refer to a defined type, target.type_id=${JSON.stringify(\n            target.type_id\n          )}`\n        )\n      );\n    }\n    return Promise.resolve(type.value());\n  },\n\n  /**\n   * @param {Option<dataclasses.LogicalType>} logicalType logicalType\n   * @return {Promise<dataclasses.LogicalType, errors.LogicalType_idMustReferToADefinedLogicalType>} resolve the promise if the invariant pass or yield a `LogicalType_idMustReferToADefinedLogicalType` error otherwise\n   * @memberof invariants\n   * @since 1.0.0\n   */\n  LogicalType_idMustReferToADefinedLogicalType: logicalType =>\n    !logicalType\n      ? Promise.reject(\n          new errors.LogicalType_idMustReferToADefinedLogicalType()\n        )\n      : Promise.resolve(logicalType),\n\n  /**\n   * @param {Option<dataclasses.Target>} target target\n   * @return {Promise<dataclasses.Target, errors.Target_idMustReferToADefinedTarget>} resolve the promise if the invariant pass or yield a `Target_idMustReferToADefinedTarget` error otherwise\n   * @memberof invariants\n   * @since 1.0.0\n   */\n  Target_idMustReferToADefinedTarget: target =>\n    !target\n      ? Promise.reject(new errors.Target_idMustReferToADefinedTarget())\n      : Promise.resolve(target),\n\n  /**\n   * @param {Option<dataclasses.Operator>} operator operator\n   * @return {Promise<dataclasses.Operator, errors.Operator_idMustReferToADefinedOperator>} resolve the promise if the invariant pass or yield a `Operator_idMustReferToADefinedOperator` error otherwise\n   * @memberof invariants\n   * @since 1.0.0\n   */\n  Operator_idMustReferToADefinedOperator: operator =>\n    !operator\n      ? Promise.reject(new errors.Operator_idMustReferToADefinedOperator())\n      : Promise.resolve(operator),\n\n  /**\n   * @param {dataclasses.CompoundPredicate} root root\n   * @param {dataclasses.Predicate} predicateToRemove predicateToRemove\n   * @return {Promise<predicateToRemove, errors.ForbiddenCannotRemoveRootCompoundPredicate>} resolve the promise if the invariant pass or yield a `ForbiddenCannotRemoveRootCompoundPredicate` error otherwise\n   * @memberof invariants\n   * @since 1.0.0\n   */\n  RemovePredicateMustDifferFromRootPredicate: (root, predicateToRemove) =>\n    rules.predicateToRemoveIsRootPredicate(root, predicateToRemove)\n      ? Promise.reject(new errors.ForbiddenCannotRemoveRootCompoundPredicate())\n      : Promise.resolve(predicateToRemove),\n\n  /**\n   * @param {dataclasses.CompoundPredicate} root root\n   * @param {dataclasses.Predicate} predicateToRemove\n   * @param {dataclasses.CompoundPredicate} CompoundPredicate\n   * @param {dataclasses.ComparisonPredicate} ComparisonPredicate\n   * @return {Promise<undefined, errors.ForbiddenCannotRemoveLastComparisonPredicate>} resolve the promise if the invariant pass or yield a `RootPredicateMustBeACompoundPredicate` error otherwise\n   * @memberof invariants\n   * @since 1.0.0\n   */\n  RemovePredicateCannotBeTheLastComparisonPredicate: (\n    root,\n    predicateToRemove,\n    CompoundPredicate,\n    ComparisonPredicate\n  ) =>\n    ComparisonPredicate.is(predicateToRemove) &&\n    rules.predicateToRemoveIsTheLastComparisonPredicate(\n      root,\n      CompoundPredicate,\n      ComparisonPredicate\n    )\n      ? Promise.reject(\n          new errors.ForbiddenCannotRemoveLastComparisonPredicate()\n        )\n      : Promise.resolve(),\n});\n","module.exports = function $_type(name) {\n  return {\n    $_type: name,\n  };\n};\n","const { mergeAll, trim } = require('ramda');\nconst $_type = require('./$_type');\n\n/**\n * Target type definition\n * @typedef {Object} Target\n * @memberof dataclasses\n */\n\n/**\n * Create a new target\n * @param {object} target\n * @param {string} target.target_id - unique id for this target\n * @param {string} target.label - label that will be displayed for this target\n * @param {string} target.type_id - the type_id name this target has\n * @return {Target} {@link dataclasses.Target}\n * @memberof dataclasses\n */\nfunction Target(target) {\n  const { target_id, label, type_id } = _requireProps(\n    target,\n    'target_id,label,type_id'\n  );\n  // target MUST at least have the attributes bellow\n  return mergeAll([$_type('Target'), { target_id, label, type_id }, target]);\n}\n\n/**\n * @param  {Target} target\n * @return {Object} JSON serializable object\n */\nTarget.toJSON = function(target) {\n  return {\n    target_id: target.target_id,\n  };\n};\n\n/**\n * A type operator\n * @typedef Operator\n * @memberof dataclasses\n */\n\n/**\n * Create a new operator\n * @param {object} operator\n * @param {string} operator.operator_id - unique id for this operator\n * @param {string} operator.argumentType_id - the argumentType associated with the operator. For example to define a \"is\" operator and associate it with two targets \"article publishing date\" and \"article title\" then we would have to define 2 operators because [\"article publishing date\" \"is\"] and  [\"article title\" \"is\"] do NOT have the same kind of arguments (one is a date the other is a string) and associated UI components (one is a date picker the other is a text input)\n * @param {string} operator.label - label that will be displayed for this operator\n * @return {Operator} {@link dataclasses.Operator}\n * @memberof dataclasses\n */\nfunction Operator(operator) {\n  // operator MUST at least have the properties bellow\n  const { operator_id, label, argumentType_id } = _requireProps(\n    operator,\n    'operator_id,label,argumentType_id'\n  );\n  return mergeAll([\n    $_type('Operator'),\n    {\n      operator_id,\n      argumentType_id,\n      label,\n    },\n    operator,\n  ]);\n}\n\n/**\n * @param  {Operator} operator\n * @return {Object} JSON serializable object\n */\nOperator.toJSON = function(operator) {\n  return {\n    operator_id: operator.operator_id,\n  };\n};\n\n/**\n * Defines a target type\n * @typedef Type\n * @memberof dataclasses\n */\n\n/**\n * Create a new type\n * @param {Object} type\n * @param {string} type.type_id\n * @param {string[]} type.operator_ids\n * @return {Type} {@link dataclasses.Type}\n * @memberof dataclasses\n */\nfunction Type(type) {\n  // type MUST at least have the properties bellow\n  const { type_id, operator_ids } = _requireProps(type, 'type_id,operator_ids');\n  return mergeAll([\n    $_type('Type'),\n    {\n      type_id,\n      operator_ids,\n    },\n    type,\n  ]);\n}\n\n/**\n * Create a new type logical type\n * Logical types or used in CompoundPredicates\n * @param {Object} logic The predicate logic\n * @param {string} type.logicalType_id\n * @param {string} type.label\n * @memberof dataclasses\n */\nfunction LogicalType(logicalType) {\n  // logicalType MUST at least have the properties bellow\n  const { logicalType_id, label } = _requireProps(\n    logicalType,\n    'logicalType_id,label'\n  );\n  return mergeAll([\n    $_type('LogicalType'),\n    {\n      logicalType_id,\n      label,\n    },\n    logicalType,\n  ]);\n}\n\n/**\n * @param  {LogicalType} logicalType\n * @return {Object} JSON serializable object\n */\nLogicalType.toJSON = function(logicalType) {\n  return {\n    logicalType_id: logicalType.logicalType_id,\n  };\n};\n\n/**\n * Create a new argument type\n * @param {Object} argumentType\n * @param {string} type.argumentType_id\n * @param {*} type.component this attribute will be used by the UI Framework adapter\n * @memberof dataclasses\n */\nfunction ArgumentType(argumentType) {\n  // argumentType MUST at least have the properties bellow\n  const { argumentType_id, component } = _requireProps(\n    argumentType,\n    'argumentType_id,component'\n  );\n  return mergeAll([\n    $_type('ArgumentType'),\n    {\n      argumentType_id,\n      component,\n    },\n    argumentType,\n  ]);\n}\n\nconst _toString = Object.prototype.toString;\nfunction _isObject(mixed) {\n  return _toString.call(mixed) === '[object Object]';\n}\n/**\n * @param       {Object} object\n * @param       {string} properties comma-separated list of properties\n * @return      {Object}\n * @throws throw if a property is missing from the object\n */\nfunction _requireProps(object, properties) {\n  if (!_isObject(object)) {\n    throw new Error(`Object is required, got: ${JSON.stringify(object)}.`);\n  }\n\n  const props = properties.split(',').map(trim);\n  let prop;\n\n  while ((prop = props.pop())) {\n    if (!object.hasOwnProperty(prop)) {\n      throw new Error(\n        `Object ${JSON.stringify(object)} MUST have a '${prop}' property.`\n      );\n    }\n  }\n\n  return object;\n}\n\nmodule.exports = {\n  Type,\n  Target,\n  Operator,\n  LogicalType,\n  ArgumentType,\n  _requireProps,\n};\n","const { merge, mergeAll } = require('ramda');\nconst $_type = require('./$_type');\n\nmodule.exports = ({ invariants, errors }) => {\n  const { Target, Operator, LogicalType } = require('./columns');\n  /**\n   * Abstract Predicate type, a Predicate is the union type of CompoundPredicate | ComparisonPredicate\n   * @typedef {object} Predicate\n   * @memberof dataclasses\n   */\n\n  /**\n   * Abstract Predicate type, a Predicate is the union type of CompoundPredicate | ComparisonPredicate\n   * @param {Function} type - Predicate subtype function constructor\n   * @return {dataclasses.Predicate}\n   * @memberof dataclasses\n   */\n  function Predicate(type) {\n    return invariants\n      .PredicateTypeMustBeValid(type.$name, Predicate.Types)\n      .then(() =>\n        merge($_type(type.$name), {\n          /**\n           * $canBeRemoved specify if the predicate can be removed or not from the Predicates tree\n           * @type {Boolean}\n           *  @memberof Predicate\n           */\n          $canBeRemoved: true,\n        })\n      );\n  }\n\n  Predicate.toJSON = function(predicate) {\n    if (ComparisonPredicate.is(predicate)) {\n      return ComparisonPredicate.toJSON(predicate);\n    }\n\n    return CompoundPredicate.toJSON(predicate);\n  };\n\n  /**\n   * @param  {object} json\n   * @return {Promise<Predicate, errors<*>>} Promise\n   */\n  Predicate.fromJSON = function(json, internalAPI) {\n    if (ComparisonPredicate.isFromJSON(json)) {\n      return ComparisonPredicate.fromJSON(json, internalAPI);\n    }\n\n    if (CompoundPredicate.isFromJSON(json)) {\n      return CompoundPredicate.fromJSON(json, internalAPI);\n    }\n\n    return Promise.reject(new errors.UnknownJSONData());\n  };\n\n  Predicate.Types = {\n    ComparisonPredicate: 'ComparisonPredicate',\n    CompoundPredicate: 'CompoundPredicate',\n  };\n\n  /**\n   * Abstract Predicate type, a Predicate is the union type of CompoundPredicate | ComparisonPredicate\n   * @typedef {object} ComparisonPredicate\n   * @param {string} target - unique id for this target\n   * @param {string} operator - label that will be displayed for this target\n   * @param {string} argument - the type_id name this target has\n   * @memberof dataclasses\n   */\n\n  /**\n   * A specialized predicate that you use to compare expressions.\n   * @param  {dataclasses.Target} target\n   * @param  {dataclasses.Operator} operator\n   * @param  {*} argument\n   * @return {Promise<dataclasses.ComparisonPredicate>} yield a ComparisonPredicate or a rejected promise\n   * @memberof dataclasses\n   */\n  function ComparisonPredicate(target, operator, argument = null) {\n    return Predicate(ComparisonPredicate).then(predicate =>\n      merge(predicate, {\n        target: target,\n        operator: operator,\n        argument: argument,\n      })\n    );\n  }\n\n  // by pass var. mangling from minify\n  ComparisonPredicate.$name = Predicate.Types.ComparisonPredicate;\n\n  /**\n   * @param  {ComparisonPredicate} predicate\n   * @return {Object} JSON serializable object\n   */\n  ComparisonPredicate.toJSON = function(predicate) {\n    return mergeAll([\n      Target.toJSON(predicate.target),\n      Operator.toJSON(predicate.operator),\n      {\n        argument: predicate.argument,\n      },\n    ]);\n  };\n\n  /**\n   * @param  {object} json\n   * @return {Promise<Predicate, errors<*>>} Promise\n   */\n  ComparisonPredicate.fromJSON = function(json, internalAPI) {\n    return Promise.all([\n      internalAPI.getTargetById(json.target_id),\n      internalAPI.getOperatorById(json.operator_id),\n    ]).then(([target, operator]) =>\n      ComparisonPredicate(target, operator, json.argument)\n    );\n  };\n\n  /**\n   * Yield true if `predicate` is a ComparisonPredicate\n   * @param  {dataclasses.Predicate}  predicate {@link dataclasses.Predicate}\n   * @return {Boolean}\n   * @memberof dataclasses\n   */\n  ComparisonPredicate.is = predicate => {\n    return (\n      predicate && predicate.$_type === Predicate.Types.ComparisonPredicate\n    );\n  };\n\n  /**\n   * Yield true if `json` seems to be a ComparisonPredicate\n   * @param  {object}  json\n   * @private\n   * @return {Boolean}\n   * @memberof dataclasses\n   */\n  ComparisonPredicate.isFromJSON = json => json && json.target_id;\n\n  /**\n   * A specialized predicate that evaluates logical combinations of other predicates.\n   * @param {dataclasses.LogicalType} logic The predicate logic\n   * @param {Array<dataclasses.Predicate>} predicates predicates\n   * @return {Promise<dataclasses.CompoundPredicate>} yield a {@link dataclasses.CompoundPredicate} or a {@link errors.CompoundPredicateMustHaveAtLeastOneSubPredicate} rejected promise\n   * @memberof dataclasses\n   */\n  function CompoundPredicate(logic, predicates) {\n    return invariants\n      .CompoundPredicateMustHaveAtLeastOneSubPredicate(\n        predicates,\n        CompoundPredicate\n      )\n      .then(() => Predicate(CompoundPredicate))\n      .then(predicate =>\n        merge(predicate, {\n          logic: logic,\n          predicates: predicates,\n        })\n      );\n  }\n\n  // by pass var. mangling from minify\n  CompoundPredicate.$name = Predicate.Types.CompoundPredicate;\n\n  /**\n   * @param  {CompoundPredicate} predicate\n   * @return {Object} JSON serializable object\n   */\n  CompoundPredicate.toJSON = function(predicate) {\n    return mergeAll([\n      LogicalType.toJSON(predicate.logic),\n      { predicates: predicate.predicates.map(Predicate.toJSON) },\n    ]);\n  };\n\n  /**\n   * @param  {CompoundPredicate} predicate\n   * @return {Promise<CompoundPredicate, errors<*>>} Promise\n   */\n  CompoundPredicate.fromJSON = function(predicate, internalAPI) {\n    return invariants\n      .CompoundPredicateMustHaveAtLeastOneSubPredicate(\n        predicate.predicates,\n        CompoundPredicate\n      )\n      .then(() => internalAPI.getLogicalTypeById(predicate.logicalType_id))\n      .then(logicalType =>\n        Promise.all(\n          predicate.predicates.map(predicate =>\n            Predicate.fromJSON(predicate, internalAPI)\n          )\n        ).then(predicates => CompoundPredicate(logicalType, predicates))\n      );\n  };\n\n  /**\n   * Reduce through the predicates tree\n   * @param       {dataclasses.CompoundPredicate} compoundPredicate starter node\n   * @param       {function} f accumulation function, f(acc, predicate, parents)\n   * @param       {T} acc               accumulator\n   * @param       {Array}  [parents=[]]      path to the node, array of parents\n   * @return      {T} yield the accumulator\n   * @memberof dataclasses\n   */\n  CompoundPredicate.reduce = function(compoundPredicate, f, acc, parents = []) {\n    acc = f(acc, compoundPredicate, parents);\n    return compoundPredicate.predicates.reduce((_acc, predicate, i) => {\n      const _parents = parents.concat([compoundPredicate, [predicate, i]]);\n      return CompoundPredicate.is(predicate)\n        ? CompoundPredicate.reduce(predicate, f, _acc, _parents)\n        : f(_acc, predicate, _parents);\n    }, acc);\n  };\n\n  /**\n   * Walk through the predicates tree\n   * @param       {dataclasses.CompoundPredicate} compoundPredicate starter node\n   * @param       {Function} f(predicate) iterator function\n   * @memberof dataclasses\n   */\n  CompoundPredicate.forEach = (compoundPredicate, f) => {\n    CompoundPredicate.reduce(\n      compoundPredicate,\n      (_, predicate, __) => {\n        f(predicate);\n      },\n      null\n    );\n  };\n\n  /**\n   * Yield true if `predicate` is a CompoundPredicate\n   * @param  {dataclasses.Predicate}  predicate\n   * @return {Boolean}\n   * @memberof dataclasses\n   */\n  CompoundPredicate.is = predicate =>\n    predicate && predicate.$_type === Predicate.Types.CompoundPredicate;\n\n  /**\n   * Yield true if `json` seems to be a CompoundPredicate\n   * @param  {object}  json\n   * @private\n   * @return {Boolean}\n   * @memberof dataclasses\n   */\n  CompoundPredicate.isFromJSON = json => json && json.logicalType_id;\n\n  return {\n    Predicate,\n    ComparisonPredicate,\n    CompoundPredicate,\n  };\n};\n","const { merge } = require('ramda');\n\n/**\n * Data classes\n * @namespace dataclasses\n * @since 1.0.0\n */\nmodule.exports = errors =>\n  merge(require('./columns'), require('./predicates')(errors));\n","exports.none = Object.create({\n    value: function() {\n        throw new Error('Called value on none');\n    },\n    isNone: function() {\n        return true;\n    },\n    isSome: function() {\n        return false;\n    },\n    map: function() {\n        return exports.none;\n    },\n    flatMap: function() {\n        return exports.none;\n    },\n    filter: function() {\n        return exports.none;\n    },\n    toArray: function() {\n        return [];\n    },\n    orElse: callOrReturn,\n    valueOrElse: callOrReturn\n});\n\nfunction callOrReturn(value) {\n    if (typeof(value) == \"function\") {\n        return value();\n    } else {\n        return value;\n    }\n}\n\nexports.some = function(value) {\n    return new Some(value);\n};\n\nvar Some = function(value) {\n    this._value = value;\n};\n\nSome.prototype.value = function() {\n    return this._value;\n};\n\nSome.prototype.isNone = function() {\n    return false;\n};\n\nSome.prototype.isSome = function() {\n    return true;\n};\n\nSome.prototype.map = function(func) {\n    return new Some(func(this._value));\n};\n\nSome.prototype.flatMap = function(func) {\n    return func(this._value);\n};\n\nSome.prototype.filter = function(predicate) {\n    return predicate(this._value) ? this : exports.none;\n};\n\nSome.prototype.toArray = function() {\n    return [this._value];\n};\n\nSome.prototype.orElse = function(value) {\n    return this;\n};\n\nSome.prototype.valueOrElse = function(value) {\n    return this._value;\n};\n\nexports.isOption = function(value) {\n    return value === exports.none || value instanceof Some;\n};\n\nexports.fromNullable = function(value) {\n    if (value == null) {\n        return exports.none;\n    }\n    return new Some(value);\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n","/**\n * Rules\n * @module core\n * @namespace core\n * @since 1.0.0\n * @note rules are 100% tested from PredicateCore.test.js\n */\n\nconst {\n  merge,\n  find,\n  curry,\n  prop,\n  tap,\n  pipe,\n  filter,\n  map,\n  over,\n  lens,\n  lensPath,\n  takeLast,\n  clone,\n  keys,\n  startsWith,\n  set,\n  differenceWith,\n  partition,\n  lensProp,\n  insert,\n} = require('ramda');\n\nconst option = require('option');\n\nconst { EventEmitter } = require('events');\n\nfunction head(list) {\n  return option.fromNullable(list[0]).value();\n}\n\nmodule.exports = function({ dataclasses, invariants, errors, rules }) {\n  const {\n    CompoundPredicate,\n    ComparisonPredicate,\n    Predicate,\n    Target,\n    LogicalType,\n  } = dataclasses;\n  /**\n   * Get a type by its type_id\n   * @param  {array} types\n   * @param  {string} type_id   type id name\n   * @return {?Type}  a Type\n   * @private\n   * @since 1.0.0\n   */\n  const _getTypeById = (types, type_id) =>\n    option.fromNullable(find(type => type.type_id == type_id, types));\n\n  /**\n   * Get a target by its target_id\n   * @param  {Array<dataclasses.Target>} targets\n   * @param  {string} target_id target id name\n   * @return {Promise<dataclasses.Target>}\n   * @private\n   * @since 1.0.0\n   */\n  const _getTargetById = (targets, target_id) =>\n    invariants.Target_idMustReferToADefinedTarget(\n      find(target => target.target_id == target_id, targets)\n    );\n\n  /**\n   * Get a logical type by its logicalType_id\n   * @param  {Array<dataclasses.LogicalType>} logicalTypes\n   * @param  {string} logicalType_id logicalType id name\n   * @return {Promise<dataclasses.LogicalType>}\n   * @private\n   * @since 1.0.0\n   */\n  const _getLogicalTypeById = (logicalTypes, logicalType_id) =>\n    invariants.LogicalType_idMustReferToADefinedLogicalType(\n      find(\n        logicalType => logicalType.logicalType_id == logicalType_id,\n        logicalTypes\n      )\n    );\n\n  /**\n   * Get an operator by its operator_id\n   * @param  {Array<dataclasses.operator>} operators\n   * @param  {string[]} operator_ids\n   * @return {Promise<dataclasses.operator>}\n   * @private\n   * @since 1.0.0\n   */\n  const _getOperatorById = (operators, operator_id) =>\n    invariants.Operator_idMustReferToADefinedOperator(\n      find(operator => operator.operator_id == operator_id, operators)\n    );\n\n  /**\n   * _getOperatorsByIds\n   * @param  {Object} operators\n   * @param  {string[]} operator_ids\n   * @return {Array<dataclasses.operator>}\n   * @private\n   * @since 1.0.0\n   */\n  const _getOperatorsByIds = curry((operators, operator_ids) =>\n    pipe(filter(({ operator_id }) => operator_ids.includes(operator_id)))(\n      operators\n    )\n  );\n\n  const _set$operatorsToType = curry((columns, type) => {\n    type.$operators = _getOperatorsByIds(columns.operators, type.operator_ids);\n    return type;\n  });\n\n  const _set$typeToTarget = curry((columns, target) => {\n    const typeOption = _getTypeById(columns.types, target.type_id);\n    return invariants\n      .TargetMustReferToADefinedType(typeOption, target)\n      .then(type => {\n        target.$type = type;\n        return target;\n      });\n  });\n\n  /**\n   * Tap for Promise\n   * @param  {Function} f\n   * @return {Function}\n   * @private\n   */\n  const _tapPromise = f => {\n    return function(promise) {\n      return promise.then(result => {\n        f();\n        return result;\n      });\n    };\n  };\n\n  /**\n   * Run `fAfter()` (without any arguments) after `fBefore`, it will yield the promise yield from fBefore\n   * @param  {Function} fBefore\n   * @param  {Function} fAfter\n   * @return {Promise} promise from fBefore\n   * @private\n   */\n  const _afterPromise = (fBefore, fAfter) => pipe(fBefore, _tapPromise(fAfter));\n\n  // columns => Promise[columns]\n  const _initializeColumns = columns => {\n    // at first I used lenses, but the code was way harder to read so it's better that way :)\n\n    // wrap operators\n    columns.operators = map(dataclasses.Operator, columns.operators);\n\n    // wrap logicalTypes\n    columns.logicalTypes = map(dataclasses.LogicalType, columns.logicalTypes);\n\n    // wrap argumentTypes (allow argumentTypes to be undefined)\n    columns.argumentTypes = map(\n      dataclasses.ArgumentType,\n      columns.argumentTypes || []\n    );\n\n    // wrap types and set `$operators` attribute on each type\n    const wrapType = pipe(dataclasses.Type, _set$operatorsToType(columns));\n    columns.types = map(wrapType, columns.types);\n\n    // wrap targets and set `$type` attribut on each target\n    const wrapTarget = pipe(dataclasses.Target, _set$typeToTarget(columns));\n    return Promise.all(map(wrapTarget, columns.targets)).then(targets => {\n      columns.targets = targets;\n      return columns;\n    });\n  };\n\n  /**\n   * Create a new PredicateCore\n   * @param       {?dataclasses.CompoundPredicate} [args.data=core.defaults.options.getDefaultData]\n   * @param       {Object} [args.columns] columns definition\n   * @example <caption>Example of columns definition</caption>\n   * // don't forget to take a look at the Storybook https://ui-predicate.fgribreau.com/ui-predicate-vue/latest#/examples\n   * {\n   * // first define the operator list available along with what type of argument they need\n   * operators: [\n   *   {\n   *     operator_id: 'is',\n   *     label: 'is',\n   *     argumentType_id: 'smallString',\n   *   },\n   *   {\n   *     operator_id: 'contains',\n   *     label: 'Contains',\n   *     argumentType_id: 'smallString',\n   *   },\n   *   {\n   *     operator_id: 'isLowerThan',\n   *     label: '<',\n   *     argumentType_id: 'number',\n   *   },\n   *   {\n   *     operator_id: 'isEqualTo',\n   *     label: '=',\n   *     argumentType_id: 'number',\n   *   },\n   *   {\n   *     operator_id: 'isHigherThan',\n   *     label: '>',\n   *     argumentType_id: 'number',\n   *   },\n   *   {\n   *     operator_id: 'is_date',\n   *     label: 'is',\n   *     argumentType_id: 'datepicker',\n   *   },\n   *   {\n   *     operator_id: 'isBetween_date',\n   *     label: 'is between',\n   *     argumentType_id: 'daterangepicker',\n   *   },\n   * ],\n   * // then define the type, think of them as aggregate of operators so you can attach them to targets\n   * types: [\n   *   {\n   *     type_id: 'int',\n   *     operator_ids: ['isLowerThan', 'isEqualTo', 'isHigherThan'],\n   *   },\n   *   {\n   *     type_id: 'string',\n   *     operator_ids: ['is', 'contains'],\n   *   },\n   *   {\n   *     type_id: 'datetime',\n   *     operator_ids: ['is', 'isBetween'],\n   *   },\n   * ],\n   * // finally define targets, don't forget to specify their associated `type_id`\n   * targets: [\n   *   {\n   *     target_id: 'title',\n   *     label: 'Title',\n   *     type_id: 'string',\n   *   },\n   *   {\n   *     target_id: 'videoCount',\n   *     label: 'Video count',\n   *     type_id: 'int',\n   *   },\n   *   {\n   *     target_id: 'publishedAt',\n   *     label: 'Created at',\n   *     type_id: 'datetime',\n   *   },\n   * ],\n   * // define supported logical type\n   * logicalTypes: [\n   *   {\n   *     logicalType_id: 'any',\n   *     label: 'Any',\n   *   },\n   *   {\n   *     logicalType_id: 'all',\n   *     label: 'All',\n   *   },\n   *   {\n   *     logicalType_id: 'none',\n   *     label: 'None',\n   *   },\n   * ],\n   * // (optional) finally define how to display each argumentType_id\n   * argumentTypes: [\n   *   // here we don't define `component` because it depends on the UI Framework you are using (e.g. Vue, React, Angular, ...)\n   *   // since we are in ui-predicate-core here we don't know the UI Framework library that will be used\n   *   // read your UI Framework adapter (e.g. ui-predicate-vue) on how to set the component.\n   *   // if no argumentType is defined for argumentType_id, then UIPredicateCore will fallback on the default UI component (thanks to getDefaultArgumentComponent)\n   *   // { argumentType_id: 'datepicker', component: ? },\n   *   // { argumentType_id: 'daterangepicker', component: ? },\n   *   // { argumentType_id: 'smallString', component: ? },\n   *   // { argumentType_id: 'number', component: ? },\n   * ]}\n   * @param       {Object} args.columns.operators\n   * @param       {Object} args.columns.types\n   * @param       {Object} args.columns.targets\n   * @param       {Object} args.columns.logicalTypes\n   * @param       {?Object} args.columns.argumentTypes\n   * @param       {Object} [args.options=core.defaults.options]\n   * @return {Promise<core.PredicateCoreAPI>}\n   * @memberof core\n   */\n  function PredicateCore(args) {\n    const { columns, data, options } = args;\n\n    return new Promise(function(resolve, reject) {\n      try {\n        dataclasses._requireProps(\n          columns,\n          'operators,logicalTypes,types,targets'\n        );\n      } catch (err) {\n        return reject(err);\n      }\n      resolve();\n    })\n      .then(() => _initializeColumns(columns))\n      .then(_columns => {\n        let _root;\n        let _api;\n        const _events = new EventEmitter();\n        const _options = merge(PredicateCore.defaults.options, options);\n\n        /**\n         * Loop through the predicate tree and update flags (e.g. $canBeRemoved)\n         * @private\n         */\n        function _apply$flags() {\n          const canRemoveAnyPredicate = !rules.predicateToRemoveIsTheLastComparisonPredicate(\n            _root,\n            CompoundPredicate,\n            ComparisonPredicate\n          );\n\n          CompoundPredicate.forEach(_root, function(predicate) {\n            predicate.$canBeRemoved =\n              canRemoveAnyPredicate &&\n              !rules.predicateToRemoveIsRootPredicate(_root, predicate);\n          });\n        }\n\n        function _emitChangedEvent() {\n          _events.emit('changed', _api);\n        }\n\n        const _afterWrite = pipe(_apply$flags, _emitChangedEvent);\n\n        /**\n         * Set PredicateCore data\n         * @param {dataclasses.CompoundPredicate} root CompoundPredicate\n         * @return {Promise<undefined, errors.RootPredicateMustBeACompoundPredicate>} resolved promise yield nothing, rejected promise yield RootPredicateMustBeACompoundPredicate error\n         * @since 1.0.0\n         * @memberof core.api\n         */\n        function setData(root) {\n          return invariants\n            .RootPredicateMustBeACompoundPredicate(root, CompoundPredicate)\n            .then(() => {\n              _root = root;\n            });\n        }\n\n        /**\n         * @param {object} json user defined JSON\n         * @return {Promise<Predicate, errors<*>>}\n         */\n        function _fromJSON(json) {\n          return Predicate.fromJSON(json, {\n            getTargetById: target_id =>\n              _getTargetById(_columns.targets, target_id),\n            getLogicalTypeById: logicalType_id =>\n              _getLogicalTypeById(_columns.logicalTypes, logicalType_id),\n            getOperatorById: operator_id =>\n              _getOperatorById(_columns.operators, operator_id),\n          });\n        }\n\n        /**\n         * Add a ComparisonPredicate or CompoundPredicate\n         * @param  {Object} option\n         * @param  {string} options.type what type of Predicate to add\n         * @param  {string} [options.how=after] should we insert it before, after or instead of? (currently only after is supported)\n         * @param  {dataclasses.Predicate} options.where current element\n         * @return {Promise<dataclasses.Predicate>} inserted predicate\n         * @since 1.0.0\n         * @memberof core.api\n         */\n        function add({ where, how = 'after', type }) {\n          // currently only after is supported\n          return (\n            Promise.resolve()\n              .then(() => invariants.AddOnlySupportsAfter(how))\n              .then(() =>\n                invariants.PredicateTypeMustBeValid(type, Predicate.Types)\n              )\n              // generate the Predicates\n              .then(() => _options[`getDefault${type}`](_columns, _options))\n              // then add it\n              .then(predicate => {\n                const isComparisonPredicate = ComparisonPredicate.is(where);\n\n                if (isComparisonPredicate || CompoundPredicate.is(where)) {\n                  if (isComparisonPredicate) {\n                    // it's a comparisonpredicate\n                    // first find predicates array that contains the element\n                    const path = _find(where);\n                    // we are starting from a ComparisonPredicate that always live inside a CompoundPredicate.predicates array\n                    const [compoundpredicate, [_, index]] = takeLast(2, path);\n                    compoundpredicate.predicates = insert(\n                      index + 1,\n                      predicate,\n                      compoundpredicate.predicates\n                    );\n                  } else {\n                    // it's a compoundpredicate\n                    // we want to add a CompoundPredicate after a compound predicate\n                    // so we need to add it as its first .predicates entry\n                    where.predicates.unshift(predicate);\n                  }\n\n                  return predicate;\n                }\n\n                return Promise.reject(\n                  new errors.CannotAddSomethingElseThanACompoundPredicateOrAComparisonPredicate()\n                );\n              })\n          );\n        }\n\n        /**\n         * Remove a ComparisonPredicate or CompoundPredicate\n         * @param  {(dataclasses.ComparisonPredicate|dataclasses.CompoundPredicate)} predicate\n         * @return {Promise<dataclasses.Predicate>} yield the removed predicate, will reject the promise if remove was called with the root CompoundPredicate or the last ComparisonPredicate of the root CompoundPredicate\n         * @since 1.0.0\n         * @memberof core.api\n         */\n        function remove(predicate) {\n          return Promise.resolve()\n            .then(() =>\n              invariants.RemovePredicateMustDifferFromRootPredicate(\n                _root,\n                predicate\n              )\n            )\n            .then(() =>\n              invariants.RemovePredicateCannotBeTheLastComparisonPredicate(\n                _root,\n                predicate,\n                CompoundPredicate,\n                ComparisonPredicate\n              )\n            )\n            .then(() => {\n              if (\n                CompoundPredicate.is(predicate) ||\n                ComparisonPredicate.is(predicate)\n              ) {\n                const path = _find(predicate);\n                // we are starting from a ComparisonPredicate that always live\n                // inside a CompoundPredicate.predicates array\n                const [parentCompoundpredicate, [_, index]] = takeLast(2, path);\n                parentCompoundpredicate.predicates.splice(index, 1);\n\n                if (parentCompoundpredicate.predicates.length === 0) {\n                  // if there are not any more predicates\n                  // inside the parentCompoundpredicate, we should also remove it\n                  return remove(parentCompoundpredicate);\n                }\n\n                return predicate;\n              }\n\n              return Promise.reject(\n                new errors.CannotRemoveSomethingElseThanACompoundPredicateOrAComparisonPredicate()\n              );\n            });\n        }\n\n        /**\n         * Change a CompoundPredicate logical\n         * @param {dataclasses.CompoundPredicate} predicate\n         * @param {string} newLogicalType_id\n         * @return {Promise<undefined, errors.PredicateMustBeACompoundPredicate>} yield nothing if everything went right, otherwise yield a reject promise with the PredicateMustBeACompoundPredicate error\n         * @since 1.0.0\n         * @memberof core.api\n         */\n        function setPredicateLogicalType_id(predicate, newLogicalType_id) {\n          return invariants\n            .PredicateMustBeACompoundPredicate(predicate, CompoundPredicate)\n            .then(() => {\n              // first change the logical type\n              return _getLogicalTypeById(\n                _columns.logicalTypes,\n                newLogicalType_id\n              );\n            })\n            .then(logicalType => {\n              predicate.logic = logicalType;\n            });\n        }\n\n        /**\n         * Change a predicate's target\n         * @param {dataclasses.ComparisonPredicate} predicate\n         * @param {string} newTarget_id\n         * @return {Promise<undefined, errors.PredicateMustBeAComparisonPredicate>} yield nothing if everything went right, otherwise yield a reject promise with the PredicateMustBeAComparisonPredicate error\n         * @since 1.0.0\n         * @memberof core.api\n         */\n        function setPredicateTarget_id(predicate, newTarget_id) {\n          return (\n            invariants\n              .PredicateMustBeAComparisonPredicate(\n                predicate,\n                ComparisonPredicate\n              )\n              // first change the target\n              .then(() => _getTargetById(_columns.targets, newTarget_id))\n              .then(target => {\n                predicate.target = target;\n\n                // then change the operator to the first operator for this target\n                return setPredicateOperator_id(\n                  predicate,\n                  head(predicate.target.$type.$operators).operator_id\n                );\n              })\n          );\n        }\n\n        /**\n         * Change a predicate's operator\n         * @param {dataclasses.ComparisonPredicate} predicate\n         * @param {string} newTarget_id\n         * @return {Promise<undefined, errors.Operator_idMustReferToADefinedOperator>} yield nothing if everything went right, otherwise yield a reject promise with the PredicateMustBeAComparisonPredicate error\n         * @since 1.0.0\n         * @memberof core.api\n         */\n        function setPredicateOperator_id(predicate, newOperator_id) {\n          return (\n            Promise.resolve()\n              // find operator\n              .then(() =>\n                invariants.Operator_idMustReferToADefinedOperator(\n                  predicate.target.$type.$operators.find(\n                    operator => operator.operator_id === newOperator_id\n                  )\n                )\n              )\n\n              // change the operator\n              .then(operator => {\n                predicate.operator = operator;\n\n                // then reset arguments\n                predicate.argument = null;\n              })\n          );\n        }\n\n        /**\n         * Change a predicate's operator value\n         * @param {dataclasses.ComparisonPredicate} predicate\n         * @param {*} newValue\n         * @return {Promise<undefined>} yield nothing if everything went right, currently everything always go right ;)\n         * @since 1.0.0\n         * @memberof core.api\n         */\n        function setArgumentValue(predicate, newValue) {\n          return Promise.resolve().then(() => {\n            predicate.argument = newValue;\n          });\n        }\n\n        /**\n         * Get a UI Component (e.g. Vue Component) based on the argumentType_id\n         * @param {string} argumentType_id the argumentType id to find\n         * @return {*} it will either yield the argumentType id associated component or fallback on {@link core.defaults.getArgumentTypeComponentById} to yield the default component\n         * @since 1.0.0\n         * @memberof core.api\n         */\n        function getArgumentTypeComponentById(argumentType_id) {\n          return option\n            .fromNullable(\n              _columns.argumentTypes.find(\n                argumentType => argumentType.argumentType_id === argumentType_id\n              )\n            )\n            .map(argumentType => argumentType.component)\n            .valueOrElse(() =>\n              _options.getDefaultArgumentComponent(_columns, _options)\n            );\n        }\n\n        /**\n         * Compute the JSON pointer path the element\n         * @param  {Object} element (http://jsonpatch.com/)\n         * @return {?Array} null if not found\n         * @readonly\n         * @since 1.0.0\n         */\n        function _find(element) {\n          return CompoundPredicate.reduce(\n            _root,\n            (acc, predicate, parents) => {\n              return element === predicate ? parents : acc;\n            },\n            null\n          );\n        }\n\n        /**\n         * Yield a serializable object without internal flags ($xxx properties)\n         * @example console.log(JSON.stringify(ctrl, null, 2)); // will call ctrl.toJSON() underneath\n         * @return {Object} a serializable object\n         * @since 1.0.0\n         * @memberof core.api\n         */\n        function toJSON() {\n          return Predicate.toJSON(_root);\n        }\n\n        /**\n         * Adds the `listener` function to the end of the listeners array for the event named `eventName`.\n         * No checks are made to see if the `listener` has already been added. Multiple calls passing the same combination of eventName and listener will result in the listener being added, and called, multiple times.\n         * @param  {string} eventName available event names are : (`changed`, api)\n         * @param  {function} listener\n         * @since 1.0.0\n         * @memberof core.api\n         */\n        function on(eventName, listener) {\n          _events.on(eventName, listener);\n        }\n\n        /**\n         * Adds a *one-time* `listener` function for the event named `eventName`. The next time `eventName` is triggered, this `listener` is removed and then invoked.\n         * @param  {string} eventName see {@link core.api.on} for available event names\n         * @param  {function} listener\n         * @see core.api.on\n         * @since 1.0.0\n         * @memberof core.api\n         */\n        function once(eventName, listener) {\n          _events.once(eventName, listener);\n        }\n\n        /**\n         * Remove listener(s)\n         * If off() will remove every listeners\n         * If off(eventName) will only remove listeners to this specific eventName\n         * If off(eventName, listener) will remove the `listener` to the `eventName`\n         * @param  {?string} eventName see {@link core.api.on} for available event names\n         * @param  {?function} listener\n         * @since 1.0.0\n         * @memberof core.api\n         */\n        function off(eventName, listener) {\n          if (!eventName) {\n            // because removeAllListeners treat \"undefined\" as an event name :facepalm:\n            _events.removeAllListeners();\n          } else if (!listener) {\n            _events.removeAllListeners(eventName);\n          } else {\n            _events.removeListener(eventName, listener);\n          }\n        }\n\n        // get data for initialization\n        return (\n          (data ? _fromJSON(data) : _options.getDefaultData(_columns, _options))\n            // setup PredicateCore data\n            .then(_afterPromise(setData, _afterWrite))\n            // expose public API\n            .then(() => {\n              /**\n               * ui-predicate core public API\n               * @typedef {object} PredicateCoreAPI\n               * @namespace core.api\n               */\n              _api = {\n                on: on,\n                once: once,\n                off: off,\n\n                setData: _afterPromise(setData, _afterWrite),\n                add: _afterPromise(add, _afterWrite),\n                remove: _afterPromise(remove, _afterWrite),\n                setPredicateTarget_id: _afterPromise(\n                  setPredicateTarget_id,\n                  _afterWrite\n                ),\n                setPredicateOperator_id: _afterPromise(\n                  setPredicateOperator_id,\n                  _afterWrite\n                ),\n                setPredicateLogicalType_id: _afterPromise(\n                  setPredicateLogicalType_id,\n                  _afterWrite\n                ),\n                setArgumentValue: _afterPromise(setArgumentValue, _afterWrite),\n\n                getArgumentTypeComponentById,\n                toJSON,\n\n                /**\n                 * Get root CompoundPredicate\n                 * @return {dataclasses.CompoundPredicate}\n                 * @memberof core.api\n                 */\n                get root() {\n                  return _root;\n                },\n\n                // used for testing\n                get columns() {\n                  return _columns;\n                },\n\n                // used for testing\n                get options() {\n                  return _options;\n                },\n              };\n\n              return _api;\n            })\n        );\n      });\n  }\n\n  /**\n   * Defaults configuration of PredicateCore\n   * @type {Object}\n   * @namespace core.defaults\n   */\n  PredicateCore.defaults = {\n    /**\n     * Defaults options of PredicateCore\n     * @type {Object}\n     * @namespace core.defaults.options\n     */\n    options: {\n      /**\n       * When data is not set at construction time PredicateCore default behavior will be to use the first target and its first operator with empty argument\n       * @param  {Object} dataclasses every necessary data class\n       * @param  {Object} columns every necessary data class\n       * @param  {Object} options PredicateCore available options\n       * @return {Promise<dataclasses.CompoundPredicate>}  root CompoundPredicate\n       * @since 1.0.0\n       * @memberof core.defaults.options\n       */\n      getDefaultData(columns, options) {\n        return options\n          .getDefaultComparisonPredicate(columns, options)\n          .then(comparisonPredicate => {\n            return options.getDefaultCompoundPredicate(columns, options, [\n              comparisonPredicate,\n            ]);\n          });\n      },\n\n      /**\n       * Default compount predicate to use\n       *\n       * This function is called whenever a new CompoundPredicate is added to the UIPredicate\n       * @param  {Array<dataclasses.Predicate>} predicates\n       * @param  {Object} columns specified columns\n       * @param  {Object} options PredicateCore available options\n       * @return {Promise<dataclasses.CompoundPredicate>} a CompoundPredicate\n       * @since 1.0.0\n       * @memberof core.defaults.options\n       */\n      getDefaultCompoundPredicate(columns, options, predicates) {\n        return (!Array.isArray(predicates) || predicates.length === 0\n          ? options\n              .getDefaultComparisonPredicate(columns, options)\n              .then(comparisonPredicate => [comparisonPredicate])\n          : Promise.resolve(predicates)\n        ).then(predicates =>\n          options\n            .getDefaultLogicalType(predicates, columns, options)\n            .then(logicalType => CompoundPredicate(logicalType, predicates))\n        );\n      },\n\n      /**\n       * Default comparison predicate to use\n       *\n       * This function is called whenever a new ComparisonPredicate is added to the UIPredicate\n       * @param  {Object} columns specified columns\n       * @param  {Object} [options=PredicateCore.defaults.options] PredicateCore available options\n       * @return {Promise<dataclasses.ComparisonPredicate>} a Comparison\n       * @since 1.0.0\n       * @memberof core.defaults.options\n       */\n      getDefaultComparisonPredicate(columns, options) {\n        const firstTarget = head(columns.targets);\n        return ComparisonPredicate(\n          firstTarget,\n          head(firstTarget.$type.$operators)\n        );\n      },\n\n      /**\n       * Default logical type to use when a new comparison predicate is created\n       *\n       * This function is called whenever a new ComparisonPredicate is added to the UIPredicate\n       * @param  {Array<dataclasses.Predicate>} predicates specified columns\n       * @param  {Object} columns specified columns\n       * @param  {Object} [options=PredicateCore.defaults.options] PredicateCore available options\n       * @return {Promise<dataclasses.LogicalType>} a logical type\n       * @since 1.0.0\n       * @memberof core.defaults.options\n       */\n      getDefaultLogicalType(predicates, columns, options) {\n        return Promise.resolve(head(columns.logicalTypes));\n      },\n\n      /**\n       * Get the default UI component for any argument. Also used if no registered UI component match `argumentType_id`\n       * @param  {Object} columns specified columns\n       * @param  {Object} [options=PredicateCore.defaults.options] PredicateCore available options\n       * @return {*} yield a UI Component (depending on the UI Framework used)\n       * @throws if the UI Framework adapter did not override this function. Each UI Framework adapter (e.g. ui-predicate-vue, ui-predicate-react, ...) must implement this and let user override it\n       * @memberof core.defaults.options\n       */\n      getDefaultArgumentComponent(columns, options) {\n        throw new errors.UIFrameworkMustImplementgetDefaultArgumentComponent(\n          'UIFrameworkMustImplementgetDefaultArgumentComponent'\n        );\n      },\n    },\n  };\n\n  return PredicateCore;\n};\n","const { merge } = require('ramda');\n\nconst errors = require('./errors');\n\nconst rules = require('./rules');\nconst invariants = require('./invariants')({ errors, rules });\nconst dataclasses = require('./dataclasses')({ invariants, errors });\n\nconst PredicateCore = require('./PredicateCore')({\n  dataclasses,\n  invariants,\n  errors,\n  rules,\n});\n\nmodule.exports = { PredicateCore, errors, invariants, dataclasses };\n","// const PredicateCore = require('ui-predicate-core');\nconst PredicateCore = require('..');\n\nPredicateCore({\n  // data:{},\n  // columns:{},\n  options: {\n    // besides array list names, everything else follows convention https://github.com/FGRibreau/sql-convention\n    operators: [\n      {\n        operator_id: 'is',\n        label: 'Est',\n        ploplop: [1, 2, 3],\n      },\n      {\n        operator_id: 'contains',\n        label: 'Contient',\n      },\n      {\n        operator_id: 'isLowerThan',\n        label: '<',\n      },\n      {\n        operator_id: 'isEqualTo',\n        label: '=',\n      },\n      {\n        operator_id: 'isHigherThan',\n        label: '>',\n      },\n      {\n        operator_id: 'isBetween',\n        label: 'est compris entre',\n      },\n    ],\n    types: [\n      {\n        type_id: 'int',\n        operator_ids: ['isLowerThan', 'isEqualTo', 'isHigherThan'],\n      },\n      {\n        type_id: 'string',\n        operator_ids: ['is', 'contains'],\n      },\n      {\n        type_id: 'datetime',\n        operator_ids: ['is', 'isBetween'],\n      },\n    ],\n    targets: [\n      {\n        target_id: 'article.title',\n        label: 'Titre article',\n        type_id: 'string',\n      },\n      {\n        target_id: 'article.videoCount',\n        label: 'Nombre de vidéos',\n        type_id: 'int',\n      },\n      {\n        target_id: 'article.publishingAt',\n        label: 'Date publication',\n        type_id: 'datetime',\n      },\n    ],\n    logicalTypes: [\n      {\n        logicalType_id: 'any',\n        label: 'Any',\n      },\n      {\n        logicalType_id: 'all',\n        label: 'All',\n      },\n      {\n        logicalType_id: 'none',\n        label: 'None',\n      },\n    ],\n  },\n}).then(core => {\n  console.log('🎉 You can play with `core` global variable');\n});\n"]}