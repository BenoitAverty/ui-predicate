{"version":3,"file":"static/preview.da357420abda97912fbe.bundle.js","sources":["webpack:///./src/ui-predicate.stories.js"],"sourcesContent":["\n  var withStorySource = require('@storybook/addon-storysource').withStorySource;\n  var __STORY__ = \"import Vue from 'vue';\\nimport { storiesOf } from '@storybook/vue';\\n\\nimport { action, actions } from '@storybook/addon-actions';\\nimport backgrounds from '@storybook/addon-backgrounds/vue';\\nimport Centered from '@storybook/addon-centered';\\nimport { withNotes } from '@storybook/addon-notes';\\n\\nimport { array, boolean, button, color, date, number, select, text, withKnobs } from '@storybook/addon-knobs/vue';\\n\\nconst DEFAULT_CONFIG = {\\n  // besides array list names, everything else follows convention https://github.com/FGRibreau/sql-convention\\n  operators: [\\n    {\\n      operator_id: 'is',\\n      label: 'Is',\\n    },\\n    {\\n      operator_id: 'contains',\\n      label: 'Contains',\\n    },\\n    {\\n      operator_id: 'isLowerThan',\\n      label: '<',\\n    },\\n    {\\n      operator_id: 'isEqualTo',\\n      label: '=',\\n    },\\n    {\\n      operator_id: 'isHigherThan',\\n      label: '>',\\n    },\\n    {\\n      operator_id: 'isBetween',\\n      label: 'is between',\\n    },\\n  ],\\n  types: [\\n    {\\n      type_id: 'int',\\n      operator_ids: ['isLowerThan', 'isEqualTo', 'isHigherThan'],\\n    },\\n    {\\n      type_id: 'string',\\n      operator_ids: ['is', 'contains'],\\n    },\\n    {\\n      type_id: 'datetime',\\n      operator_ids: ['is', 'isBetween'],\\n    },\\n  ],\\n  targets: [\\n    {\\n      target_id: 'article.title',\\n      label: 'Article title',\\n      type_id: 'string',\\n    },\\n    {\\n      target_id: 'article.videoCount',\\n      label: 'Article video count',\\n      type_id: 'int',\\n    },\\n    {\\n      target_id: 'article.publishingAt',\\n      label: 'Article publish date',\\n      type_id: 'datetime',\\n    },\\n  ],\\n  logicalTypes: [\\n    {\\n      logicalType_id: 'any',\\n      label: 'Any',\\n    },\\n    {\\n      logicalType_id: 'all',\\n      label: 'All',\\n    },\\n    {\\n      logicalType_id: 'none',\\n      label: 'None',\\n    },\\n  ],\\n};\\n\\nstoriesOf('ui-predicate', module)\\n  .addDecorator(Centered)\\n  .addDecorator(withKnobs)\\n  .addDecorator(withNotes)\\n  .addDecorator(\\n    backgrounds([\\n      {\\n        name: 'gray',\\n        value: 'whitesmoke',\\n        default: true,\\n      },\\n      {\\n        name: 'twitter',\\n        value: '#00aced',\\n      },\\n      {\\n        name: 'facebook',\\n        value: '#3b5998',\\n      },\\n    ])\\n  )\\n  .add(\\n    'minimal configuration',\\n    () => {\\n      return {\\n        template: '<ui-predicate :config=\\\"config\\\"></ui-predicate>',\\n        data() {\\n          return { config: DEFAULT_CONFIG };\\n        },\\n      };\\n    },\\n    {\\n      notes: {\\n        markdown: `\\n      ## minimal configuration\\n\\n      \\\\`<ui-predicate/>\\\\` only requires a \\\\`config\\\\` object.\\n      That's how you will pass your \\\\`targets\\\\`,\\\\`operators\\\\` , \\\\`types\\\\` and \\\\`logicalTypes\\\\`.\\n\\n    `,\\n      },\\n    }\\n  )\\n  .add(\\n    'events|@onChange',\\n    () => ({\\n      template: '<ui-predicate :config=\\\"config\\\" @onChange=\\\"onChange\\\"></ui-predicate>',\\n      data() {\\n        return { config: DEFAULT_CONFIG };\\n      },\\n      methods: { onChange: action('onChange') },\\n    }),\\n    { notes: '' }\\n  );\\n\";\n  var __ADDS_MAP__ = {\"ui-predicate@events|@onChange\":{\"startLoc\":{\"col\":4,\"line\":130},\"endLoc\":{\"col\":17,\"line\":138}},\"ui-predicate@minimal configuration\":{\"startLoc\":{\"col\":4,\"line\":108},\"endLoc\":{\"col\":5,\"line\":127}}};\n  \n  import Vue from 'vue';\nimport { storiesOf } from '@storybook/vue';\n\nimport { action, actions } from '@storybook/addon-actions';\nimport backgrounds from '@storybook/addon-backgrounds/vue';\nimport Centered from '@storybook/addon-centered';\nimport { withNotes } from '@storybook/addon-notes';\n\nimport {\n  array,\n  boolean,\n  button,\n  color,\n  date,\n  number,\n  select,\n  text,\n  withKnobs,\n} from '@storybook/addon-knobs/vue';\n\nconst DEFAULT_CONFIG = {\n  // besides array list names, everything else follows convention https://github.com/FGRibreau/sql-convention\n  operators: [\n    {\n      operator_id: 'is',\n      label: 'Is',\n    },\n    {\n      operator_id: 'contains',\n      label: 'Contains',\n    },\n    {\n      operator_id: 'isLowerThan',\n      label: '<',\n    },\n    {\n      operator_id: 'isEqualTo',\n      label: '=',\n    },\n    {\n      operator_id: 'isHigherThan',\n      label: '>',\n    },\n    {\n      operator_id: 'isBetween',\n      label: 'is between',\n    },\n  ],\n  types: [\n    {\n      type_id: 'int',\n      operator_ids: ['isLowerThan', 'isEqualTo', 'isHigherThan'],\n    },\n    {\n      type_id: 'string',\n      operator_ids: ['is', 'contains'],\n    },\n    {\n      type_id: 'datetime',\n      operator_ids: ['is', 'isBetween'],\n    },\n  ],\n  targets: [\n    {\n      target_id: 'article.title',\n      label: 'Article title',\n      type_id: 'string',\n    },\n    {\n      target_id: 'article.videoCount',\n      label: 'Article video count',\n      type_id: 'int',\n    },\n    {\n      target_id: 'article.publishingAt',\n      label: 'Article publish date',\n      type_id: 'datetime',\n    },\n  ],\n  logicalTypes: [\n    {\n      logicalType_id: 'any',\n      label: 'Any',\n    },\n    {\n      logicalType_id: 'all',\n      label: 'All',\n    },\n    {\n      logicalType_id: 'none',\n      label: 'None',\n    },\n  ],\n};\n\nstoriesOf('ui-predicate', module).addDecorator(withStorySource(__STORY__, __ADDS_MAP__))\n  .addDecorator(Centered)\n  .addDecorator(withKnobs)\n  .addDecorator(withNotes)\n  .addDecorator(\n    backgrounds([\n      {\n        name: 'gray',\n        value: 'whitesmoke',\n        default: true,\n      },\n      {\n        name: 'twitter',\n        value: '#00aced',\n      },\n      {\n        name: 'facebook',\n        value: '#3b5998',\n      },\n    ])\n  )\n  .add(\n    'minimal configuration',\n    () => {\n      return {\n        template: '<ui-predicate :config=\"config\"></ui-predicate>',\n        data() {\n          return { config: DEFAULT_CONFIG };\n        },\n      };\n    },\n    {\n      notes: {\n        markdown: `\n      ## minimal configuration\n\n      \\`<ui-predicate/>\\` only requires a \\`config\\` object.\n      That's how you will pass your \\`targets\\`,\\`operators\\` , \\`types\\` and \\`logicalTypes\\`.\n\n    `,\n      },\n    }\n  )\n  .add(\n    'events|@onChange',\n    () => ({\n      template:\n        '<ui-predicate :config=\"config\" @onChange=\"onChange\"></ui-predicate>',\n      data() {\n        return { config: DEFAULT_CONFIG };\n      },\n      methods: { onChange: action('onChange') },\n    }),\n    { notes: '' }\n  );\n\n  "],"mappings":"AAKA","sourceRoot":""}